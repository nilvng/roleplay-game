{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,GAAG,CAAC,QAAQ,GAAG,IAAI;AAAC,GAAG,CAAC,QAAQ,GAAG,IAAI;AAAC,GAAG,CAAC,UAAU,GAAG,KAAK;AAAC,GAAG,CAAC,YAAY,GAAG,CAAkB;AAAC,MAAM,CAAC,MAAM,CAAC,aAAa,GAAG,CAAkB;AAAC,CAAY;SAEzJ,0BAA0B,CAAC,CAAC,EAAE,cAAc,EAAE,CAAC;IAAC,GAAG,CAAC,EAAE;IAAE,EAAE,EAAE,MAAM,CAAC,MAAM,KAAK,CAAW,cAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,KAAK,IAAI,EAAE,CAAC;QAAC,EAAE,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,GAAG,2BAA2B,CAAC,CAAC,MAAM,cAAc,IAAI,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,MAAM,KAAK,CAAQ,SAAE,CAAC;YAAC,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG,EAAE;YAAE,GAAG,CAAC,CAAC,GAAG,CAAC;YAAE,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC;YAAA,CAAC;YAAE,MAAM,CAAC,CAAC;gBAAC,CAAC,EAAE,CAAC;gBAAE,CAAC,EAAE,QAAQ,CAAC,CAAC,GAAG,CAAC;oBAAC,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;wBAAC,IAAI,EAAE,IAAI;oBAAC,CAAC;oBAAE,MAAM,CAAC,CAAC;wBAAC,IAAI,EAAE,KAAK;wBAAE,KAAK,EAAE,CAAC,CAAC,CAAC;oBAAI,CAAC;gBAAE,CAAC;gBAAE,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;oBAAC,KAAK,CAAC,EAAE;gBAAE,CAAC;gBAAE,CAAC,EAAE,CAAC;YAAC,CAAC;QAAE,CAAC;QAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAuI;IAAG,CAAC;IAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,EAAE,MAAM,GAAG,KAAK,EAAE,GAAG;IAAE,MAAM,CAAC,CAAC;QAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,GAAG,CAAC;YAAC,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,QAAQ;QAAK,CAAC;QAAE,CAAC,EAAE,QAAQ,CAAC,CAAC,GAAG,CAAC;YAAC,GAAG,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI;YAAI,gBAAgB,GAAG,IAAI,CAAC,IAAI;YAAE,MAAM,CAAC,IAAI;QAAE,CAAC;QAAE,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;YAAC,MAAM,GAAG,IAAI;YAAE,GAAG,GAAG,GAAG;QAAE,CAAC;QAAE,CAAC,EAAE,QAAQ,CAAC,CAAC,GAAG,CAAC;YAAC,GAAG,CAAC,CAAC;gBAAC,EAAE,GAAG,gBAAgB,IAAI,EAAE,CAAC,MAAM,IAAI,IAAI,EAAE,EAAE,CAAC,MAAM;YAAI,CAAC,QAAS,CAAC;gBAAC,EAAE,EAAE,MAAM,EAAE,KAAK,CAAC,GAAG;YAAE,CAAC;QAAC,CAAC;IAAC,CAAC;AAAE,CAAC;SAEt9B,2BAA2B,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC;IAAC,EAAE,GAAG,CAAC,EAAE,MAAM;IAAE,EAAE,EAAE,MAAM,CAAC,CAAC,KAAK,CAAQ,SAAE,MAAM,CAAC,iBAAiB,CAAC,CAAC,EAAE,MAAM;IAAG,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,EAAE;IAAG,EAAE,EAAE,CAAC,KAAK,CAAQ,WAAI,CAAC,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,IAAI;IAAE,EAAE,EAAE,CAAC,KAAK,CAAK,QAAI,CAAC,KAAK,CAAK,MAAE,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAAG,EAAE,EAAE,CAAC,KAAK,CAAW,yDAA+C,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,iBAAiB,CAAC,CAAC,EAAE,MAAM;AAAG,CAAC;SAEvZ,iBAAiB,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;IAAC,EAAE,EAAE,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,CAAC,MAAM,EAAE,GAAG,GAAG,GAAG,CAAC,MAAM;IAAE,GAAG,CAAE,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,CAAC,GAAM,IAAI,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC;IAAK,MAAM,CAAC,IAAI;AAAE,CAAC;AAEvL,EAAyD,AAAzD,qDAAyD,AAAzD,EAAyD,CAEzD,EAgCE,AAhCF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCE,AAhCF,EAgCE,CACF,GAAG,CAAC,UAAU,GAAG,CAA4B;AAC7C,GAAG,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM;SAE3B,MAAM,CAAC,UAAU,EAAE,CAAC;IAC3B,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,UAAU;IAC/B,IAAI,CAAC,GAAG,GAAG,CAAC;QACV,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,OAAO;QAC3B,gBAAgB,EAAE,CAAC,CAAC;QACpB,iBAAiB,EAAE,CAAC,CAAC;QACrB,MAAM,EAAE,QAAQ,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC;YAC3B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,IAAI,QAAQ,GAAI,CAAC;YAAA,CAAC;QACjD,CAAC;QACD,OAAO,EAAE,QAAQ,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC;YAC7B,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE;QAChC,CAAC;IACH,CAAC;IACD,MAAM,CAAC,MAAM,CAAC,OAAO,GAAG,SAAS;AACnC,CAAC;AAED,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM;AAC7B,GAAG,CAAC,aAAa,EAEf,cAAc,EAEd,cAAc;SAIP,WAAW,GAAG,CAAC;IACtB,MAAM,CAAC,QAAQ,KAAK,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAM,WAAM,CAAC,GAAG,QAAQ,CAAC,QAAQ,GAAG,CAAW;AAC/F,CAAC;SAEQ,OAAO,GAAG,CAAC;IAClB,MAAM,CAAC,QAAQ,IAAI,QAAQ,CAAC,IAAI;AAClC,CAAC,AAAC,CAAwC,AAAxC,EAAwC,AAAxC,sCAAwC;AAG1C,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM;AAEjC,EAAE,IAAI,MAAM,KAAK,MAAM,CAAC,eAAe,KAAK,MAAM,CAAC,SAAS,KAAK,CAAW,YAAE,CAAC;IAC7E,GAAG,CAAC,QAAQ,GAAG,WAAW;IAC1B,GAAG,CAAC,IAAI,GAAG,OAAO;IAClB,GAAG,CAAC,QAAQ,GAAG,UAAU,IAAI,QAAQ,CAAC,QAAQ,IAAI,CAAQ,0CAAmC,IAAI,CAAC,QAAQ,IAAI,CAAK,OAAG,CAAI;IAC1H,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,SAAS,CAAC,QAAQ,GAAG,CAAK,OAAG,QAAQ,IAAI,IAAI,GAAG,CAAG,KAAG,IAAI,GAAG,CAAE,KAAI,CAAG,IAAG,CAAa,AAAb,EAAa,AAAb,WAAa;IAEnG,EAAE,CAAC,SAAS,GAAG,QAAQ,CAAE,KAAK,EAE5B,CAAC;QACD,aAAa,GAAG,CAAC;QAAA,CAAC;QAGlB,cAAc,GAAG,CAAC;QAAA,CAAC;QAGnB,cAAc,GAAG,CAAC,CAAC;QACnB,GAAG,CAAC,IAAI,GAEN,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI;QAEvB,EAAE,EAAE,IAAI,CAAC,IAAI,KAAK,CAAQ,SAAE,CAAC;YAC3B,EAAuC,AAAvC,qCAAuC;YACvC,EAAE,EAAE,MAAM,CAAC,QAAQ,KAAK,CAAW,YACjC,kBAAkB;YAGpB,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAE,KAAK,EAAE,CAAC;gBAChD,MAAM,CAAC,KAAK,CAAC,OAAO,KAAK,YAAY;YACvC,CAAC,EAAG,CAAoB,AAApB,EAAoB,AAApB,kBAAoB;YAExB,GAAG,CAAC,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAE,KAAK,EAAE,CAAC;gBAC3C,MAAM,CAAC,KAAK,CAAC,IAAI,KAAK,CAAK,QAAI,KAAK,CAAC,IAAI,KAAK,CAAI,OAAI,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,YAAY;YACvH,CAAC;YAED,EAAE,EAAE,OAAO,EAAE,CAAC;gBACZ,OAAO,CAAC,KAAK;gBACb,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAE,KAAK,EAAE,CAAC;oBAC/B,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK;gBACpC,CAAC;gBAED,GAAG,CAAE,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,GAAI,CAAC;oBAC/C,GAAG,CAAC,EAAE,GAAG,cAAc,CAAC,CAAC,EAAE,CAAC;oBAE5B,EAAE,GAAG,cAAc,CAAC,EAAE,GACpB,YAAY,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE;gBAEzC,CAAC;YACH,CAAC,MACC,MAAM,CAAC,QAAQ,CAAC,MAAM;QAE1B,CAAC;QAED,EAAE,EAAE,IAAI,CAAC,IAAI,KAAK,CAAO,QAAE,CAAC;YAC1B,EAA+B,AAA/B,6BAA+B;YAC/B,GAAG,CAAC,SAAS,GAAG,0BAA0B,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,GAC5D,KAAK;YAET,GAAG,CAAC,CAAC;gBACH,GAAG,CAAE,SAAS,CAAC,CAAC,MAAM,KAAK,GAAG,SAAS,CAAC,CAAC,IAAI,IAAI,EAAG,CAAC;oBACnD,GAAG,CAAC,cAAc,GAAG,KAAK,CAAC,KAAK;oBAChC,GAAG,CAAC,KAAK,GAAG,cAAc,CAAC,SAAS,GAAG,cAAc,CAAC,SAAS,GAAG,cAAc,CAAC,KAAK;oBACtF,OAAO,CAAC,KAAK,CAAC,CAAc,mBAAM,cAAc,CAAC,OAAO,GAAG,CAAI,MAAG,KAAK,GAAG,CAAM,QAAG,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,CAAI;gBAChH,CAAF;YACH,CAAC,CAAC,KAAK,EAAE,GAAG,EAAE,CAAC;gBACb,SAAS,CAAC,CAAC,CAAC,GAAG;YACjB,CAAC,QAAS,CAAC;gBACT,SAAS,CAAC,CAAC;YACb,CAAC;YAED,EAAE,EAAE,MAAM,CAAC,QAAQ,KAAK,CAAW,YAAE,CAAC;gBACpC,EAAgC,AAAhC,8BAAgC;gBAChC,kBAAkB;gBAClB,GAAG,CAAC,OAAO,GAAG,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAG,CAAa,AAAb,EAAa,AAAb,WAAa;gBAEtE,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO;YACnC,CAAC;QACH,CAAC;IACH,CAAC;IAED,EAAE,CAAC,OAAO,GAAG,QAAQ,CAAE,CAAC,EAAE,CAAC;QACzB,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO;IACzB,CAAC;IAED,EAAE,CAAC,OAAO,GAAG,QAAQ,GAAI,CAAC;QACxB,OAAO,CAAC,IAAI,CAAC,CAAkD;IAC9D,CAAF;AACH,CAAC;SAEQ,kBAAkB,GAAG,CAAC;IAC7B,GAAG,CAAC,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,UAAU;IAEhD,EAAE,EAAE,OAAO,EAAE,CAAC;QACZ,OAAO,CAAC,MAAM;QACd,OAAO,CAAC,GAAG,CAAC,CAA2B;IACvC,CAAD;AACH,CAAC;SAEQ,kBAAkB,CAAC,WAAW,EAAE,CAAC;IACxC,GAAG,CAAC,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAK;IAC1C,OAAO,CAAC,EAAE,GAAG,UAAU;IACvB,GAAG,CAAC,SAAS,GAAG,CAAwN;IAExO,GAAG,CAAC,UAAU,GAAG,0BAA0B,CAAC,WAAW,GACnD,MAAM;IAEV,GAAG,CAAC,CAAC;QACH,GAAG,CAAE,UAAU,CAAC,CAAC,MAAM,MAAM,GAAG,UAAU,CAAC,CAAC,IAAI,IAAI,EAAG,CAAC;YACtD,GAAG,CAAC,UAAU,GAAG,MAAM,CAAC,KAAK;YAC7B,GAAG,CAAC,KAAK,GAAG,UAAU,CAAC,SAAS,GAAG,UAAU,CAAC,SAAS,GAAG,UAAU,CAAC,KAAK;YAC1E,SAAS,IAAI,CAAuH,uHAAC,MAAM,CAAC,UAAU,CAAC,OAAO,EAAE,CAAiC,kCAAE,MAAM,CAAC,KAAK,EAAE,CAAmC,oCAAE,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAE,IAAI,EAAE,CAAC;gBACjS,MAAM,CAAC,CAAS,cAAG,IAAI,GAAG,CAAQ;YACpC,CAAC,EAAE,IAAI,CAAC,CAAE,IAAG,CAA4B,6BAAE,MAAM,CAAC,UAAU,CAAC,aAAa,GAAG,CAAsD,sDAAC,MAAM,CAAC,UAAU,CAAC,aAAa,EAAE,CAA2C,8CAAI,CAAE,GAAE,CAAsB;QAChP,CAAC;IACH,CAAC,CAAC,KAAK,EAAE,GAAG,EAAE,CAAC;QACb,UAAU,CAAC,CAAC,CAAC,GAAG;IAClB,CAAC,QAAS,CAAC;QACT,UAAU,CAAC,CAAC;IACd,CAAC;IAED,SAAS,IAAI,CAAQ;IACrB,OAAO,CAAC,SAAS,GAAG,SAAS;IAC7B,MAAM,CAAC,OAAO;AAChB,CAAC;SAEQ,UAAU,CAAC,MAAM,EAAE,EAAE,EAC9B,EAAqC,AAArC,iCAAqC,AAArC,EAAqC,CACrC,CAAC;IACC,GAAG,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO;IAE5B,EAAE,GAAG,OAAO,EACV,MAAM,CAAC,CAAC,CAAC;IAGX,GAAG,CAAC,OAAO,GAAG,CAAC,CAAC;IAChB,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG;IAEb,GAAG,CAAE,CAAC,IAAI,OAAO,CACf,GAAG,CAAE,CAAC,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAG,CAAC;QACxB,GAAG,GAAG,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;QAErB,EAAE,EAAE,GAAG,KAAK,EAAE,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,MAAM,EAAE,EAChE,OAAO,CAAC,IAAI,CAAC,CAAC;YAAA,MAAM;YAAE,CAAC;QAAA,CAAC;IAE5B,CAAC;IAGH,EAAE,EAAE,MAAM,CAAC,MAAM,EACf,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE;IAGvD,MAAM,CAAC,OAAO;AAChB,CAAC;SAEQ,UAAU,CAAC,IAAI,EAAE,CAAC;IACzB,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS;IAE5B,OAAO,CAAC,MAAM,GAAG,QAAQ,GAAI,CAAC;QAC5B,EAAE,EAAE,IAAI,CAAC,UAAU,KAAK,IAAI,EAC1B,EAAa,AAAb,WAAa;QACb,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI;IAEpC,CAAC;IAED,OAAO,CAAC,YAAY,CAAC,CAAM,OAC3B,IAAI,CAAC,YAAY,CAAC,CAAM,OAAE,KAAK,CAAC,CAAG,IAAE,CAAC,IAAI,CAAG,KAAG,IAAI,CAAC,GAAG,IAAK,CAAa,AAAb,EAAa,AAAb,WAAa;IAE1E,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW;AACxD,CAAC;AAED,GAAG,CAAC,UAAU,GAAG,IAAI;SAEZ,SAAS,GAAG,CAAC;IACpB,EAAE,EAAE,UAAU,EACZ,MAAM;IAGR,UAAU,GAAG,UAAU,CAAC,QAAQ,GAAI,CAAC;QACnC,GAAG,CAAC,KAAK,GAAG,QAAQ,CAAC,gBAAgB,CAAC,CAAwB;QAE9D,GAAG,CAAE,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAI,CAAC;YACtC,EAAgC,AAAhC,8BAAgC;YAChC,GAAG,CAAC,IAAI,GAEN,KAAK,CAAC,CAAC,EAAE,YAAY,CAAC,CAAM;YAC9B,GAAG,CAAC,QAAQ,GAAG,WAAW;YAC1B,GAAG,CAAC,mBAAmB,GAAG,QAAQ,KAAK,CAAW,aAAG,GAAG,CAAC,MAAM,CAAC,CAAgD,kDAAG,OAAO,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAG,KAAG,OAAO;YAChL,GAAG,CAAC,QAAQ,mBAAmB,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,MAAM,CAAC,KAAK,mBAAmB;YAE/G,EAAE,GAAG,QAAQ,EACX,UAAU,CAAC,KAAK,CAAC,CAAC;QAEtB,CAAC;QAED,UAAU,GAAG,IAAI;IACnB,CAAC,EAAE,EAAE;AACP,CAAC;SAEQ,QAAQ,CAAC,MAAM,EAEtB,KAAK,EAEL,CAAC;IACD,GAAG,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO;IAE5B,EAAE,GAAG,OAAO,EACV,MAAM;IAGR,EAAE,EAAE,KAAK,CAAC,IAAI,KAAK,CAAK,MACtB,SAAS;SACJ,EAAE,EAAE,KAAK,CAAC,IAAI,KAAK,CAAI,KAAE,CAAC;QAC/B,GAAG,CAAC,IAAI,GAAG,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,aAAa;QAElD,EAAE,EAAE,IAAI,EAAE,CAAC;YACT,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAS,UAAE,CAAQ,SAAE,CAAS,UAAE,KAAK,CAAC,MAAM;YAClE,OAAO,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC;gBAAA,EAAE;gBAAE,IAAI;YAAA,CAAC;QAChC,CAAC,MAAM,EAAE,EAAE,MAAM,CAAC,MAAM,EACtB,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK;IAEjC,CAAC;AACH,CAAC;SAEQ,cAAc,CAAC,MAAM,EAE5B,EAAE,EAEF,YAAY,EAEZ,CAAC;IACD,GAAG,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO;IAE5B,EAAE,GAAG,OAAO,EACV,MAAM;IAGR,EAAE,EAAE,YAAY,KAAK,YAAY,CAAC,MAAM,CAAC,aAAa,GAAG,CAAC;QACxD,EAA2E,AAA3E,yEAA2E;QAC3E,EAAyE,AAAzE,uEAAyE;QACzE,EAAE,GAAG,MAAM,CAAC,MAAM,EAChB,MAAM,CAAC,IAAI;QAGb,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,EAAE,YAAY;IACvD,CAAC;IAED,EAAE,EAAE,aAAa,CAAC,EAAE,GAClB,MAAM,CAAC,IAAI;IAGb,aAAa,CAAC,EAAE,IAAI,IAAI;IACxB,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE;IAC5B,cAAc,CAAC,IAAI,CAAC,CAAC;QAAA,MAAM;QAAE,EAAE;IAAA,CAAC;IAEhC,EAAE,EAAE,MAAM,IAAI,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,gBAAgB,CAAC,MAAM,EAC5D,MAAM,CAAC,IAAI;IAGb,GAAG,CAAC,OAAO,GAAG,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,EAAG,CAA+D,AAA/D,EAA+D,AAA/D,6DAA+D;IAEjH,EAAE,GAAG,OAAO,CAAC,MAAM,EACjB,MAAM,CAAC,IAAI;IAGb,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAE,CAAC,EAAE,CAAC;QAChC,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI;IACxC,CAAC;AACH,CAAC;SAEQ,YAAY,CAAC,MAAM,EAE1B,EAAE,EAEF,CAAC;IACD,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE;IAC5B,MAAM,CAAC,OAAO,GAAG,CAAC;IAAA,CAAC;IAEnB,EAAE,EAAE,MAAM,IAAI,MAAM,CAAC,GAAG,EACtB,MAAM,CAAC,GAAG,CAAC,IAAI,GAAG,MAAM,CAAC,OAAO;IAGlC,EAAE,EAAE,MAAM,IAAI,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,iBAAiB,CAAC,MAAM,EAC7D,MAAM,CAAC,GAAG,CAAC,iBAAiB,CAAC,OAAO,CAAC,QAAQ,CAAE,EAAE,EAAE,CAAC;QAClD,EAAE,CAAC,MAAM,CAAC,OAAO;IACnB,CAAC;IAGH,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;IACtB,MAAM,CAAC,EAAE;IACT,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE;IAExB,EAAE,EAAE,MAAM,IAAI,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,gBAAgB,CAAC,MAAM,EAC5D,MAAM,CAAC,GAAG,CAAC,gBAAgB,CAAC,OAAO,CAAC,QAAQ,CAAE,EAAE,EAAE,CAAC;QACjD,GAAG,CAAC,kBAAkB,GAAG,EAAE,CAAC,QAAQ,GAAI,CAAC;YACvC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE;QAC1C,CAAC;QAED,EAAE,EAAE,kBAAkB,IAAI,cAAc,CAAC,MAAM,EAC7C,EAA+B,AAA/B,6BAA+B;QAC/B,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,kBAAkB;IAEhE,CAAC;IAGH,cAAc,CAAC,EAAE,IAAI,IAAI;AAC3B,CAAC;;;;AClYD,GAAM;;AACN,EAAW,AAAX,SAAW;AACX,EAAa,AAAb,WAAa;AACb,EAAkB,AAAlB,gBAAkB;AAClB,EAAK,AAAL,GAAK;AACL,EAAmC,AAAnC,iCAAmC;AACnC,EAAwC,AAAxC,sCAAwC;AACxC,EAA2C,AAA3C,yCAA2C;AAC3C,EAA0D,AAA1D,wDAA0D;AAC1D,EAAc,AAAd,YAAc;AACd,EAAc,AAAd,YAAc;AACd,EAAwB,AAAxB,sBAAwB;AACxB,EAAY,AAAZ,UAAY;AACZ,EAAe,AAAf,aAAe;AACf,EAAa,AAAb,WAAa;AACb,EAAc,AAAd,YAAc;AACd,EAAY,AAAZ,UAAY;AACZ,EAAgB,AAAhB,cAAgB;AAChB,EAAiB,AAAjB,eAAiB;AACjB,EAAO,AAAP,KAAO;AACP,EAAc,AAAd,YAAc;AACd,EAAM,AAAN,IAAM;AACN,EAAK,AAAL,GAAK;AAEL,EAAoB,AAApB,kBAAoB;AACpB,EAAyB,AAAzB,uBAAyB;AAEzB,EAAe,AAAf,aAAe;AAEf,EAAuB,AAAvB,qBAAuB;AACvB,EAAmB,AAAnB,iBAAmB;AACnB,EAAkB,AAAlB,gBAAkB;AAClB,EAAqB,AAArB,mBAAqB;AACrB,EAAgB,AAAhB,cAAgB;AAChB,EAAW,AAAX,SAAW;AACX,EAAW,AAAX,SAAW;AAEX,EAAK,AAAL,GAAK;AAEL,EAAsB,AAAtB,oBAAsB;AACtB,EAAQ,AAAR,MAAQ;AACR,EAAsB,AAAtB,oBAAsB;AACtB,EAAW,AAAX,SAAW;AACX,EAAe,AAAf,aAAe;AACf,EAA0B,AAA1B,wBAA0B;AAC1B,EAAY,AAAZ,UAAY;AACZ,EAAK,AAAL,GAAK;AAEL,EAA0B,AAA1B,wBAA0B;AAC1B,EAAoD,AAApD,kDAAoD;AACpD,EAAwB,AAAxB,sBAAwB;AACxB,EAAY,AAAZ,UAAY;AACZ,EAAuB,AAAvB,qBAAuB;AACvB,EAAK,AAAL,GAAK;AACL,EAAK,AAAL,GAAK;AAEL,EAAmC,AAAnC,iCAAmC;AACnC,EAAK,AAAL,GAAK;AAEL,EAA8B,AAA9B,4BAA8B;AAC9B,EAA8B,AAA9B,4BAA8B;AAC9B,EAA4B,AAA5B,0BAA4B;AAC5B,EAAwB,AAAxB,sBAAwB;AACxB,EAAK,AAAL,GAAK;AACL,EAAK,AAAL,GAAK;AAEL,EAA4B,AAA5B,0BAA4B;AAC5B,EAA0B,AAA1B,wBAA0B;AAC1B,EAAsB,AAAtB,oBAAsB;AACtB,EAA4D,AAA5D,0DAA4D;AAC5D,EAAuB,AAAvB,qBAAuB;AACvB,EAAK,AAAL,GAAK;AACL,EAAK,AAAL,GAAK;AAEL,EAA6B,AAA7B,2BAA6B;AAC7B,EAAyB,AAAzB,uBAAyB;AACzB,EAAuB,AAAvB,qBAAuB;AACvB,EAA4D,AAA5D,0DAA4D;AAC5D,EAAuB,AAAvB,qBAAuB;AACvB,EAAK,AAAL,GAAK;AACL,EAAK,AAAL,GAAK;AAEL,EAA0C,AAA1C,wCAA0C;AAC1C,EAAoD,AAApD,kDAAoD;AACpD,EAAwB,AAAxB,sBAAwB;AACxB,EAAK,AAAL,GAAK;AACL,EAAK,AAAL,GAAK;AAEL,EAA0B,AAA1B,wBAA0B;AAC1B,EAA4B,AAA5B,0BAA4B;AAC5B,EAAyB,AAAzB,uBAAyB;AACzB,EAAW,AAAX,SAAW;AAEX,EAAsB,AAAtB,oBAAsB;AACtB,EAAoB,AAApB,kBAAoB;AACpB,EAAW,AAAX,SAAW;AACX,EAAK,AAAL,GAAK;AAEL,EAAyB,AAAzB,uBAAyB;AACzB,EAA0B,AAA1B,wBAA0B;AAC1B,EAAK,AAAL,GAAK;uBAEE,CAAC;IACP,UAAU,EAAE,CAAC;QAAA,CAAC;QAAE,CAAC;QAAE,CAAC;IAAA,CAAC;IACrB,KAAK,EAAE,IAAI;IACX,MAAM,EAAE,GAAG;AACZ,CAAC;AACD,UAAU,CAAC,CAAM,OAAE,CAAiC;AACpD,UAAU,CAAC,CAAO,QAAE,CAAiC;AACrD,UAAU,CAAC,CAAQ,SAAE,CAAiC;AAGtD,KAAK,CAAC,KAAK,GAAG,GAAG;AAEjB,KAAK,CAAC,MAAM,GAAG,CAAC;IACf,CAAC;QACA,CAAW;QACX,CAAW;QACX,CAAW;IACZ,CAAC;IACD,CAAC;QACA,CAAW;QACX,CAAW;IACZ,CAAC;AACF,CAAC;AAGD,KAAK,CAAC,CAAM,QAAG,CAAC,CAAC,QAAQ,GAAE,KAAK,EAAC,CAAC,GAAK,CAAC;IACvC,OAAO,CAAC,GAAG;IACX,KAAK,CAAC,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,QAAQ,IAAI,CAAC,GAAG,CAAC;QAC9C,KAAK,EAAE,EAAE;QACT,MAAM,EAAE,EAAE;QACV,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG;QAClB,CAAG,QAAQ,CAAC;gBACX,MAAM,CAAC,CAAM;gBACb,IAAI;gBACJ,IAAI;gBACJ,MAAM,CAAC,CAAK;gBACZ,CAAQ;YACT,CAAC;;QACD,CAAG,QAAQ,CAAC;gBACX,MAAM,CAAC,CAAO;gBACd,IAAI;gBACJ,KAAK;gBACL,MAAM,CAAC,CAAK;YACb,CAAC;;QACD,CAAG,QAAQ,CAAC;gBACX,MAAM,CAAC,CAAQ;gBACf,IAAI;gBACJ,MAAM,CAAC,CAAK;gBACZ,CAAQ;YACT,CAAC;IACF,CAAC;IACD,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC,CAAQ,SAAE,CAAC;IAC9B,UAAU,CAAC,CAAO,YAAQ,CAAC;QAC1B,EAAE,EAAE,MAAM,CAAC,UAAU,IACpB,MAAM,CAAC,IAAI;IAEb,CAAC;IAED,SAAS,CAAC,CAAM,WAAQ,CAAC;QACxB,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC;IACtB,CAAC;IAED,SAAS,CAAC,CAAO,YAAQ,CAAC;QACzB,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;IACrB,CAAC;IACD,MAAM,CAAC,QAAQ,KAAO,CAAC;QACtB,EAAE,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,EACtB,EAAE,CAAC,CAAM;IAEX,CAAC;IAED,MAAM,CAAC,SAAS,CAAC,CAAQ,aAAQ,CAAC;QACjC,EAAE,EAAE,QAAQ,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,EAC/B,EAAE,CAAC,CAAM,OAAE,CAAC;YACX,QAAQ,EAAE,QAAQ,GAAG,CAAC;YACtB,KAAK,EAAE,KAAK;QACb,CAAC;aAED,EAAE,CAAC,CAAK,MAAE,CAAC;YAAC,KAAK,EAAE,KAAK;QAAE,CAAC;IAE7B,CAAC;IAED,KAAK,CAAC,UAAU,GAAG,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,KAAK;QACV,GAAG,CAAC,EAAE;IACP,CAAC;AAEF,CAAC;AAED,KAAK,CAAC,CAAM,WAAQ,CAAC;IAEpB,GAAG,CAAC,CAAC;QACJ,IAAI,CAAC,CAAU;QACf,GAAG,CAAC,EAAE;IACP,CAAC;IAED,UAAU,CAAC,KAAK;AAEjB,CAAC;AAED,KAAK,CAAC,CAAK,OAAG,CAAC,CAAC,KAAK,EAAC,CAAC,GAAK,CAAC;IAE5B,GAAG,CAAC,CAAC;QACJ,IAAI,EAAE,aAAa,GAAG,CAAC;YACtB,KAAK,EAAE,KAAK;QACb,CAAC;QACD,GAAG,CAAC,EAAE;IACP,CAAC;IAED,UAAU,CAAC,KAAK;AAEjB,CAAC;SAEQ,KAAK,GAAG,CAAC;IACjB,EAAE,CAAC,CAAM,OAAE,CAAC;QACX,QAAQ,EAAE,CAAC;QACX,KAAK,EAAE,CAAC;IACT,CAAC;AACF,CAAC;AAED,KAAK;;;;;6CU4rFoC,EAAA;;AR14FzC,GAAA,CAAA,EAAA,GAAA,MAAA,CAAA,cAAA,EAAA,EAAA,GAAA,MAAA,CAAA,gBAAA;AAAA,GAAA,CAAA,EAAA,GAAA,MAAA,CAAA,yBAAA;AAAA,GAAA,CAAA,EAAA,GAAA,MAAA,CAAA,qBAAA;AAAA,GAAA,CAAA,EAAA,GAAA,MAAA,CAAA,SAAA,CAAA,cAAA,EAAA,EAAA,GAAA,MAAA,CAAA,SAAA,CAAA,oBAAA;AAAA,GAAA,CAAA,EAAA,IAAA,CAAA,EAAA,CAAA,EAAA,CAAA,GAAA,CAAA,IAAA,CAAA,GAAA,EAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA;QAAA,UAAA,GAAA,CAAA;QAAA,YAAA,GAAA,CAAA;QAAA,QAAA,GAAA,CAAA;QAAA,KAAA,EAAA,CAAA;IAAA,CAAA,IAAA,CAAA,CAAA,CAAA,IAAA,CAAA;EAAA,EAAA,IAAA,CAAA,EAAA,CAAA,GAAA,CAAA;IAAA,GAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,GAAA,CAAA;IAAA,CAAA,EAAA,EAAA,CAAA,IAAA,CAAA,CAAA,EAAA,CAAA,KAAA,EAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA;IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,CAAA,CAAA,IAAA,EAAA,CAAA,CAAA,EAAA,EAAA,CAAA,IAAA,CAAA,CAAA,EAAA,CAAA,KAAA,EAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA;IAAA,MAAA,CAAA,CAAA;AAAA,CAAA,EAAA,EAAA,IAAA,CAAA,EAAA,CAAA,GAAA,EAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA;;AAAA,GAAA,CAAA,CAAA,IAAA,CAAA,EAAA,CAAA,GAAA,EAAA,CAAA,CAAA,EAAA,CAAA,OAAA,CAAA;QAAA,KAAA,EAAA,CAAA;QAAA,YAAA,GAAA,CAAA;IAAA,CAAA;;AAAA,GAAA,CAAA,EAAA,IAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,CAAA,EAAA,MAAA,CAAA,CAAA,IAAA,CAAA,UAAA,CAAA,GAAA,CAAA,IAAA,CAAA,EAAA,CAAA,GAAA,CAAA;;AAAA,GAAA,CAAA,EAAA,IAAA,CAAA,EAAA,CAAA,EAAA,CAAA,GAAA,GAAA,CAAA,OAAA,EAAA,CAAA,EAAA,CAAA,GAAA,CAAA;QAAA,GAAA,CAAA,CAAA,IAAA,CAAA,GAAA,CAAA;YAAA,GAAA,CAAA,CAAA;gBAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA;YAAA,CAAA,CAAA,KAAA,EAAA,CAAA,EAAA,CAAA;gBAAA,CAAA,CAAA,CAAA;YAAA,CAAA;QAAA,CAAA,EAAA,CAAA,IAAA,CAAA,GAAA,CAAA;YAAA,GAAA,CAAA,CAAA;gBAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA;YAAA,CAAA,CAAA,KAAA,EAAA,CAAA,EAAA,CAAA;gBAAA,CAAA,CAAA,CAAA;YAAA,CAAA;QAAA,CAAA,EAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,IAAA,GAAA,CAAA,CAAA,CAAA,CAAA,KAAA,IAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CAAA,KAAA,EAAA,IAAA,CAAA,CAAA,EAAA,CAAA;;QAAA,CAAA,EAAA,CAAA,GAAA,CAAA,CAAA,KAAA,CAAA,CAAA,EAAA,CAAA,GAAA,IAAA;IAAA,CAAA;;AAAA,GAAA,CAAA,EAAA,QAAA,CAAA;IAAA,GAAA,CAAA,GAAA,CAAA,CAAA,GAAA,GAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,EAAA,EAAA,CAAA,GAAA,CAAA,CAAA,CAAA,GAAA,EAAA,GAAA,CAAA,GAAA,EAAA,GAAA,CAAA,GAAA,EAAA,GAAA,CAAA,GAAA,EAAA,GAAA,CAAA,GAAA,EAAA,GAAA,CAAA,GAAA,CAAA,GAAA,CAAA,GAAA,CAAA,GAAA,GAAA,IAAA,CAAA;IAAA,MAAA,EAAA,CAAA,GAAA,CAAA;QAAA,GAAA,CAAA,GAAA,CAAA,CAAA,GAAA,CAAA,CAAA,MAAA,EAAA,CAAA,GAAA,GAAA,CAAA,UAAA,EAAA,CAAA,IAAA,CAAA,CAAA,CAAA,GAAA,CAAA,KAAA,CAAA,OAAA,CAAA,CAAA,CAAA,GAAA,CAAA,KAAA,CAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA,GAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,CAAA,EAAA,CAAA;YAAA,GAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,UAAA,CAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,UAAA,CAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,UAAA,CAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,UAAA,CAAA,CAAA;YAAA,CAAA,CAAA,CAAA,MAAA,CAAA,IAAA,CAAA,GAAA,CAAA,IAAA,CAAA,EAAA,CAAA,CAAA,CAAA,MAAA,CAAA,IAAA,CAAA,GAAA,CAAA,IAAA,CAAA,EAAA,CAAA,CAAA,CAAA,MAAA,CAAA,IAAA,CAAA,GAAA,CAAA;QAAA,CAAA;QAAA,MAAA,CAAA,CAAA;IAAA,CAAA;AAAA,CAAA;SAAA,EAAA,CAAiB,CAAA,EAAqB,CACrC;IAAA,MAAO,CAAA,CAAA,GAAM,IAAA,CAAK,EAAA,GAAK,GAAA;AAAA,CADf;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAIT,EAAA,CAAiB,CAAA,EAAqB,CACrC;IAAA,MAAO,CAAA,CAAA,GAAM,GAAA,GAAM,IAAA,CAAK,EAAA;AAAA,CADhB;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAIT,EAAA,CACC,CAAA,EACA,CAAA,EACA,CAAA,EACS,CACT;IAAA,MAAI,CAAA,CAAA,GAAM,CAAA,GACF,EAAA,CAAM,CAAA,EAAK,CAAA,EAAK,CAAA,IAEjB,IAAA,CAAK,GAAA,CAAI,IAAA,CAAK,GAAA,CAAI,CAAA,EAAK,CAAA,GAAM,CAAA;AAAA,CAR5B;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAWT,EAAA,CACC,CAAA,EACA,CAAA,EACA,CAAA,EACS,CACT;IAAA,MAAO,CAAA,CAAA,IAAK,CAAA,GAAI,CAAA,IAAK,CAAA;AAAA,CALb;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAQT,EAAA,CACC,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACS,CACT;IAAA,MAAO,CAAA,CAAA,IAAM,CAAA,GAAI,CAAA,KAAO,CAAA,GAAK,CAAA,KAAO,CAAA,GAAK,CAAA;AAAA,CAPjC;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAUT,EAAA,CACC,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACS,CACT;IAAA,MAAO,CAAA,EAAA,CAAM,EAAA,CAAI,CAAA,EAAG,CAAA,EAAI,CAAA,EAAI,CAAA,EAAI,CAAA,GAAK,CAAA,EAAI,CAAA;AAAA,CAPjC;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAUT,CAAA,IAAiB,CAAA,EAAY,CAE5B;IAAA,EAAA,EAAI,CAAA,CAAK,MAAA,KAAW,CAAA,EACnB,MAAO,CAAA,CAAA,CAAK,CAAA,EAAG,CAAA;IAGhB,EAAA,EAAI,CAAA,CAAK,MAAA,KAAW,CAAA,EAAG,CACtB;QAAA,EAAA,EAAI,MAAO,CAAA,CAAA,CAAK,CAAA,KAAO,CAAA,SACtB,MAAO,CAAA,CAAA,CAAK,CAAA,CAAK,CAAA,GAAI,CAAA,CAAK,CAAA;QACpB,EAAA,EAAI,EAAA,CAAO,CAAA,CAAK,CAAA,IACtB,MAAO,CAAA,CAAA,CAAK,CAAA,CAAK,CAAA,EAAG,CAAA,EAAG,CAAA,CAAK,CAAA,EAAG,CAAA;QACzB,EAAA,EAAI,KAAA,CAAM,OAAA,CAAQ,CAAA,CAAK,CAAA,MAAO,CAAA,CAAK,CAAA,EAAG,MAAA,KAAW,CAAA,EACvD,MAAO,CAAA,CAAA,CAAK,KAAA,CAAM,IAAA,EAAM,CAAA,CAAK,CAAA;IAAA,CAI/B;IAAA,MAAO,CAAA,CACN;QAAA,CAAA,EAAG,CAAA,CAAK,CAAA;QACR,CAAA,EAAG,CAAA,CAAK,CAAA;QACR,KAAA,IAAc,CACb;YAAA,MAAO,CAAA,CAAA,CAAK,IAAA,CAAK,CAAA,EAAG,IAAA,CAAK,CAAA;QAAA,CAAA;QAE1B,GAAA,KAAO,CAAA,EAAY,CAClB;YAAA,GAAM,CAAA,CAAA,GAAK,CAAA,IAAQ,CAAA;YACnB,MAAO,CAAA,CAAA,CAAK,IAAA,CAAK,CAAA,GAAI,CAAA,CAAG,CAAA,EAAG,IAAA,CAAK,CAAA,GAAI,CAAA,CAAG,CAAA;QAAA,CAAA;QAExC,GAAA,KAAO,CAAA,EAAY,CAClB;YAAA,GAAM,CAAA,CAAA,GAAK,CAAA,IAAQ,CAAA;YACnB,MAAO,CAAA,CAAA,CAAK,IAAA,CAAK,CAAA,GAAI,CAAA,CAAG,CAAA,EAAG,IAAA,CAAK,CAAA,GAAI,CAAA,CAAG,CAAA;QAAA,CAAA;QAExC,KAAA,KAAS,CAAA,EAAY,CACpB;YAAA,GAAM,CAAA,CAAA,GAAI,CAAA,IAAQ,CAAA;YAClB,MAAO,CAAA,CAAA,CAAK,IAAA,CAAK,CAAA,GAAI,CAAA,CAAE,CAAA,EAAG,IAAA,CAAK,CAAA,GAAI,CAAA,CAAE,CAAA;QAAA,CAAA;QAEtC,IAAA,KAAQ,CAAA,EAAc,CACrB;YAAA,GAAM,CAAA,CAAA,GAAK,CAAA,IAAQ,CAAA;YACnB,MAAO,CAAA,IAAA,CAAK,IAAA,EACV,IAAA,CAAK,CAAA,GAAI,CAAA,CAAG,CAAA,KAAM,IAAA,CAAK,CAAA,GAAI,CAAA,CAAG,CAAA,KAC5B,IAAA,CAAK,CAAA,GAAI,CAAA,CAAG,CAAA,KAAM,IAAA,CAAK,CAAA,GAAI,CAAA,CAAG,CAAA;QAAA,CAAA;QAGnC,GAAA,IAAc,CACb;YAAA,MAAO,CAAA,IAAA,CAAK,IAAA,CAAK,CAAA,CAAK,CAAA,EAAG,CAAA;QAAA,CAAA;QAE1B,IAAA,IAAa,CACZ;YAAA,MAAO,CAAA,IAAA,CAAK,KAAA,CAAM,CAAA,GAAI,IAAA,CAAK,GAAA;QAAA,CAAA;QAE5B,MAAA,IAAe,CACd;YAAA,MAAO,CAAA,CAAA,CAAK,IAAA,CAAK,CAAA,GAAI,IAAA,CAAK,CAAA;QAAA,CAAA;QAE3B,GAAA,EAAI,CAAA,EAAkB,CACrB;YAAA,MAAO,CAAA,IAAA,CAAK,CAAA,GAAI,CAAA,CAAG,CAAA,GAAI,IAAA,CAAK,CAAA,GAAI,CAAA,CAAG,CAAA;QAAA,CAAA;QAEpC,KAAA,KAAS,CAAA,EAAc,CACtB;YAAA,GAAM,CAAA,CAAA,GAAK,CAAA,IAAQ,CAAA;YACnB,MAAO,CAAA,EAAA,CAAQ,IAAA,CAAK,KAAA,CAAM,IAAA,CAAK,CAAA,GAAI,CAAA,CAAG,CAAA,EAAG,IAAA,CAAK,CAAA,GAAI,CAAA,CAAG,CAAA;QAAA,CAAA;QAEtD,IAAA,EAAK,CAAA,EAAU,CAAA,EAAiB,CAC/B;YAAA,MAAO,CAAA,CAAA,CAAK,EAAA,CAAK,IAAA,CAAK,CAAA,EAAG,CAAA,CAAG,CAAA,EAAG,CAAA,GAAI,EAAA,CAAK,IAAA,CAAK,CAAA,EAAG,CAAA,CAAG,CAAA,EAAG,CAAA;QAAA,CAAA;QAEvD,OAAA,EAAQ,CAAA,EAAiB,CACxB;YAAA,MAAO,CAAA,CAAA,CAAK,IAAA,CAAK,CAAA,CAAE,OAAA,CAAQ,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,OAAA,CAAQ,CAAA;QAAA,CAAA;QAE/C,EAAA,EAAG,CAAA,EAAsB,CACxB;YAAA,MAAO,CAAA,IAAA,CAAK,CAAA,KAAM,CAAA,CAAM,CAAA,IAAK,IAAA,CAAK,CAAA,KAAM,CAAA,CAAM,CAAA;QAAA,CAAA;QAE/C,GAAA,IAAc,CACb;YAAA,MAAO,EAAA,CAAA,EAAI,IAAA,CAAK,CAAA,CAAE,OAAA,CAAQ,CAAA,EAAA,EAAA,EAAO,IAAA,CAAK,CAAA,CAAE,OAAA,CAAQ,CAAA,EAAA,CAAA;QAAA,CAAA;IAAA,CAAA;AAAA,CAnE1C;AAAA,CAAA,CAAA,CAAA,EAAA,CAAA;SAwET,EAAA,CAAa,CAAA,EAAmB,CAC/B;IAAA,GAAM,CAAA,CAAA,GAAQ,EAAA,CAAQ,CAAA;IACtB,MAAO,CAAA,CAAA,CAAK,IAAA,CAAK,GAAA,CAAI,CAAA,GAAQ,IAAA,CAAK,GAAA,CAAI,CAAA;AAAA,CAF9B;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAKT,EAAA,CAAc,CAAA,EAAW,CAAA,EAAW,CAAA,EAAiB,CACpD;IAAA,MAAO,CAAA,CACN;QAAA,CAAA,EAAG,CAAA;QACH,CAAA,EAAG,CAAA;QACH,CAAA,EAAG,CAAA;QACH,EAAA,IAAW,CACV;YAAA,MAAO,CAAA,CAAA,CAAK,IAAA,CAAK,CAAA,EAAG,IAAA,CAAK,CAAA;QAAA,CAAA;IAAA,CAAA;AAAA,CANnB;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAWT,EAAA,CAAgB,CAAA,EAAiB,CAChC;IAAA,MAAO,CAAA,CAAA,KAAM,IAAA,CAAA,CAAA,IACT,CAAA,CAAE,CAAA,KAAM,IAAA,CAAA,CAAA,IACR,CAAA,CAAE,CAAA,KAAM,IAAA,CAAA,CAAA;AAAA,CAHJ;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAOT,EAAA,CAAgB,CAAA,EAAiB,CAChC;IAAA,MAAO,CAAA,CAAA,KAAM,IAAA,CAAA,CAAA,IACT,CAAA,CAAE,CAAA,KAAM,IAAA,CAAA,CAAA,IACR,CAAA,CAAE,CAAA,KAAM,IAAA,CAAA,CAAA,IACR,CAAA,CAAE,CAAA,KAAM,IAAA,CAAA,CAAA;AAAA,CAJJ;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAQT,EAAA,CAAiB,CAAA,EAAiB,CACjC;IAAA,MAAO,CAAA,CAAA,KAAM,IAAA,CAAA,CAAA,IACT,CAAA,CAAE,CAAA,KAAM,IAAA,CAAA,CAAA,IACR,CAAA,CAAE,CAAA,KAAM,IAAA,CAAA,CAAA,IACR,CAAA,CAAE,CAAA,KAAM,IAAA,CAAA,CAAA;AAAA,CAJJ;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAQT,EAAA,CAAgB,CAAA,EAAc,CAC7B;IAAA,EAAA,EACC,CAAA,KAAM,IAAA,CAAA,CAAA,IACH,KAAA,CAAM,OAAA,CAAQ,CAAA,CAAE,CAAA,KAChB,CAAA,CAAE,CAAA,CAAE,MAAA,KAAW,EAAA,EAElB,MAAO,CAAA,CAAA;AAAA,CANA;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAUT,CAAA,IAAgB,CAAA,EAAa,CAE5B;IAAA,EAAA,EAAI,CAAA,CAAK,MAAA,KAAW,CAAA,EACnB,MAAO,CAAA,CAAA,CAAI,GAAA,EAAK,GAAA,EAAK,GAAA;IACf,EAAA,EAAI,CAAA,CAAK,MAAA,KAAW,CAAA,EAAG,CAC7B;QAAA,EAAA,EAAI,EAAA,CAAQ,CAAA,CAAK,CAAA,IAChB,MAAO,CAAA,CAAA,CAAI,CAAA,CAAK,CAAA,EAAG,CAAA,EAAG,CAAA,CAAK,CAAA,EAAG,CAAA,EAAG,CAAA,CAAK,CAAA,EAAG,CAAA;QACnC,EAAA,EAAI,KAAA,CAAM,OAAA,CAAQ,CAAA,CAAK,CAAA,MAAO,CAAA,CAAK,CAAA,EAAG,MAAA,KAAW,CAAA,EACvD,MAAO,CAAA,CAAA,CAAI,KAAA,CAAM,IAAA,EAAM,CAAA,CAAK,CAAA;IAAA,CAI9B;IAAA,MAAO,CAAA,CACN;QAAA,CAAA,EAAG,EAAA,GAAQ,CAAA,CAAK,CAAA,GAAI,CAAA,EAAG,GAAA;QACvB,CAAA,EAAG,EAAA,GAAQ,CAAA,CAAK,CAAA,GAAI,CAAA,EAAG,GAAA;QACvB,CAAA,EAAG,EAAA,GAAQ,CAAA,CAAK,CAAA,GAAI,CAAA,EAAG,GAAA;QACvB,KAAA,IAAe,CACd;YAAA,MAAO,CAAA,CAAA,CAAI,IAAA,CAAK,CAAA,EAAG,IAAA,CAAK,CAAA,EAAG,IAAA,CAAK,CAAA;QAAA,CAAA;QAEjC,OAAA,EAAQ,CAAA,EAAkB,CACzB;YAAA,MAAO,CAAA,CAAA,CAAI,IAAA,CAAK,CAAA,GAAI,CAAA,EAAG,IAAA,CAAK,CAAA,GAAI,CAAA,EAAG,IAAA,CAAK,CAAA,GAAI,CAAA;QAAA,CAAA;QAE7C,MAAA,EAAO,CAAA,EAAkB,CACxB;YAAA,MAAO,CAAA,IAAA,CAAK,OAAA,EAAS,CAAA;QAAA,CAAA;QAEtB,MAAA,IAAgB,CACf;YAAA,MAAO,CAAA,CAAA,CAAI,GAAA,GAAM,IAAA,CAAK,CAAA,EAAG,GAAA,GAAM,IAAA,CAAK,CAAA,EAAG,GAAA,GAAM,IAAA,CAAK,CAAA;QAAA,CAAA;QAEnD,IAAA,EAAK,CAAA,EAAqB,CACzB;YAAA,MAAO,CAAA,CAAA,CACN,IAAA,CAAK,CAAA,GAAI,CAAA,CAAM,CAAA,GAAI,GAAA,EACnB,IAAA,CAAK,CAAA,GAAI,CAAA,CAAM,CAAA,GAAI,GAAA,EACnB,IAAA,CAAK,CAAA,GAAI,CAAA,CAAM,CAAA,GAAI,GAAA;QAAA,CAAA;QAGrB,EAAA,EAAG,CAAA,EAAuB,CACzB;YAAA,MAAO,CAAA,IAAA,CAAK,CAAA,KAAM,CAAA,CAAM,CAAA,IACpB,IAAA,CAAK,CAAA,KAAM,CAAA,CAAM,CAAA,IACjB,IAAA,CAAK,CAAA,KAAM,CAAA,CAAM,CAAA;QAAA,CAAA;QAGtB,GAAA,IAAc,CACb;YAAA,MAAO,EAAA,CAAA,EAAI,IAAA,CAAK,CAAA,CAAA,EAAA,EAAM,IAAA,CAAK,CAAA,CAAA,EAAA,EAAM,IAAA,CAAK,CAAA,CAAA,CAAA;QAAA,CAAA;IAAA,CAAA;AAAA,CA1ChC;AAAA,CAAA,CAAA,CAAA,EAAA,CAAA;SAgDT,EAAA,CAAiB,CAAA,EAAW,CAAA,EAAW,CAAA,EAAkB,CAExD;IAAA,EAAA,EAAI,CAAA,IAAK,CAAA,EACR,MAAO,CAAA,CAAA,CAAI,GAAA,GAAM,CAAA,EAAG,GAAA,GAAM,CAAA,EAAG,GAAA,GAAM,CAAA;IAGpC,GAAM,CAAA,CAAA,GAAU,CAAA,EAAC,CAAA,EAAG,CAAA,EAAG,CAAA,IAClB,CAAA,GAAI,CAAA,KAAG,CAAA,IAAK,CAAA,GACZ,CAAA,GAAI,CAAA,KAAG,CAAA,IAAK,CAAA,GACZ,CAAA,GAAI,CAAA,GAAI,CAAA,GAAU,CAAA,IAAK,CAAA,GAAI,CAAA,IAAK,CAAA,GAAI,CAAA,GACpC,CAAA,GAAI,GAAI,GAAU,CAAA,GAClB,CAAA,GAAI,CAAA,GAAI,CAAA,GAAU,CAAA,IAAK,CAAA,GAAI,CAAA,KAAM,CAAA,GAAE,CAAA,GAAI,CAAA,IAAK,CAAA,GACzC,CAAA;MANQ,CAAA,WASV,CAAA,GAAI,CAAA,GAAI,GAAA,GAAM,CAAA,IAAK,CAAA,GAAI,CAAA,IAAK,CAAA,GAAI,CAAA,GAAI,CAAA,GAAI,CAAA,EACxC,CAAA,GAAI,CAAA,GAAI,CAAA,GAAI,CAAA,EACZ,CAAA,GAAI,CAAA,CAAQ,CAAA,EAAG,CAAA,EAAG,CAAA,GAAI,CAAA,GAAI,CAAA,GAC1B,CAAA,GAAI,CAAA,CAAQ,CAAA,EAAG,CAAA,EAAG,CAAA,GAClB,CAAA,GAAI,CAAA,CAAQ,CAAA,EAAG,CAAA,EAAG,CAAA,GAAI,CAAA,GAAI,CAAA;IAEhC,MAAO,CAAA,CAAA,CAAI,IAAA,CAAK,KAAA,CAAM,CAAA,GAAI,GAAA,GAAM,IAAA,CAAK,KAAA,CAAM,CAAA,GAAI,GAAA,GAAM,IAAA,CAAK,KAAA,CAAM,CAAA,GAAI,GAAA;AAAA,CArB5D;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAyBT,EAAA,CAAc,CAAA,EAAW,CAAA,EAAW,CAAA,EAAW,CAAA,EAAiB,CAC/D;IAAA,MAAO,CAAA,CACN;QAAA,CAAA,EAAG,CAAA,IAAA,IAAA,GAAA,CAAA,GAAK,CAAA;QACR,CAAA,EAAG,CAAA,IAAA,IAAA,GAAA,CAAA,GAAK,CAAA;QACR,CAAA,EAAG,CAAA,IAAA,IAAA,GAAA,CAAA,GAAK,CAAA;QACR,CAAA,EAAG,CAAA,IAAA,IAAA,GAAA,CAAA,GAAK,CAAA;QACR,KAAA,EAAM,CAAA,EAAmB,CACxB;YAAA,MAAO,CAAA,EAAA,CACN,IAAA,CAAK,CAAA,GAAI,IAAA,CAAK,CAAA,GAAI,CAAA,CAAM,CAAA,EACxB,IAAA,CAAK,CAAA,GAAI,IAAA,CAAK,CAAA,GAAI,CAAA,CAAM,CAAA,EACxB,IAAA,CAAK,CAAA,GAAI,CAAA,CAAM,CAAA,EACf,IAAA,CAAK,CAAA,GAAI,CAAA,CAAM,CAAA;QAAA,CAAA;QAGjB,KAAA,IAAc,CACb;YAAA,MAAO,CAAA,EAAA,CAAK,IAAA,CAAK,CAAA,EAAG,IAAA,CAAK,CAAA,EAAG,IAAA,CAAK,CAAA,EAAG,IAAA,CAAK,CAAA;QAAA,CAAA;QAE1C,EAAA,EAAG,CAAA,EAAsB,CACxB;YAAA,MAAO,CAAA,IAAA,CAAK,CAAA,KAAM,CAAA,CAAM,CAAA,IACpB,IAAA,CAAK,CAAA,KAAM,CAAA,CAAM,CAAA,IACjB,IAAA,CAAK,CAAA,KAAM,CAAA,CAAM,CAAA,IACjB,IAAA,CAAK,CAAA,KAAM,CAAA,CAAM,CAAA;QAAA,CAAA;IAAA,CAAA;AAAA,CArBf;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SA0BT,EAAA,CAAc,CAAA,EAAoB,CAEjC;IAAA,MAAO,CAAA,CAEN;QAAA,CAAA,EAAG,CAAA,GAAI,CAAC;eAAG,CAAA;QAAA,CAAA,GAAK,CACf;YAAA,CAAA;YAAG,CAAA;YAAG,CAAA;YAAG,CAAA;YACT,CAAA;YAAG,CAAA;YAAG,CAAA;YAAG,CAAA;YACT,CAAA;YAAG,CAAA;YAAG,CAAA;YAAG,CAAA;YACT,CAAA;YAAG,CAAA;YAAG,CAAA;YAAG,CAAA;QAAA,CAAA;QAGV,KAAA,IAAc,CACb;YAAA,MAAO,CAAA,EAAA,CAAK,IAAA,CAAK,CAAA;QAAA,CAAA;QAGlB,IAAA,EAAK,CAAA,EAAmB,CAEvB;YAAA,GAAM,CAAA,CAAA,GAAM,CAAA,CAAA;YAEZ,GAAA,CAAA,GAAS,CAAA,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,CAAA,EAAG,CAAA,GACtB,GAAA,CAAA,GAAS,CAAA,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,CAAA,EAAG,CAAA,GACtB,CAAA,CAAI,CAAA,GAAI,CAAA,GAAI,CAAA,IACX,IAAA,CAAK,CAAA,CAAE,CAAI,GAAI,CAAA,IAAK,CAAA,CAAM,CAAA,CAAE,CAAA,GAAI,CAAA,GAAI,CAAA,IACpC,IAAA,CAAK,CAAA,CAAE,CAAI,GAAI,CAAA,IAAK,CAAA,CAAM,CAAA,CAAE,CAAA,GAAI,CAAA,GAAI,CAAA,IACpC,IAAA,CAAK,CAAA,CAAE,CAAI,GAAI,CAAA,IAAK,CAAA,CAAM,CAAA,CAAE,CAAA,GAAI,CAAA,GAAI,CAAA,IACpC,IAAA,CAAK,CAAA,CAAE,EAAI,GAAI,CAAA,IAAK,CAAA,CAAM,CAAA,CAAE,CAAA,GAAI,CAAA,GAAI,CAAA;YAIvC,MAAO,CAAA,EAAA,CAAK,CAAA;QAAA,CAAA;QAIb,QAAA,EAAS,CAAA,EAAe,CACvB;YAAA,MAAO,CAAA,CACN;gBAAA,CAAA,EAAG,CAAA,CAAE,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,CAAE,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,CAAE,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,CAAE,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,EAAA;gBACtE,CAAA,EAAG,CAAA,CAAE,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,CAAE,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,CAAE,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,CAAE,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,EAAA;gBACtE,CAAA,EAAG,CAAA,CAAE,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,CAAE,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,CAAE,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,CAAA,CAAE,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,EAAA;gBACvE,CAAA,EAAG,CAAA,CAAE,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,CAAE,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,CAAE,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,CAAA,CAAE,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,EAAA;YAAA,CAAA;QAAA,CAAA;QAIzE,QAAA,EAAS,CAAA,EAAe,CACvB;YAAA,GAAM,CAAA,CAAA,GAAK,IAAA,CAAK,QAAA,CAAS,CACxB;gBAAA,CAAA,EAAG,CAAA,CAAE,CAAA;gBACL,CAAA,EAAG,CAAA,CAAE,CAAA;gBACL,CAAA,EAAG,CAAA,CAAE,CAAA;gBACL,CAAA,EAAG,CAAA;YAAA,CAAA;YAEJ,MAAO,CAAA,EAAA,CAAK,CAAA,CAAG,CAAA,EAAG,CAAA,CAAG,CAAA,EAAG,CAAA,CAAG,CAAA;QAAA,CAAA;QAG5B,QAAA,EAAS,CAAA,EAAe,CACvB;YAAA,MAAO,CAAA,CAAA,CACN,CAAA,CAAE,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,CAAE,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,EAAA,GAC/D,CAAA,CAAE,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,CAAE,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,GAAI,IAAA,CAAK,CAAA,CAAE,EAAA;QAAA,CAAA;QAIjE,SAAA,EAAU,CAAA,EAAe,CACxB;YAAA,MAAO,CAAA,IAAA,CAAK,IAAA,CAAK,EAAA,CAAK,CACrB;gBAAA,CAAA;gBAAG,CAAA;gBAAG,CAAA;gBAAG,CAAA;gBACT,CAAA;gBAAG,CAAA;gBAAG,CAAA;gBAAG,CAAA;gBACT,CAAA;gBAAG,CAAA;gBAAG,CAAA;gBAAG,CAAA;gBACT,CAAA,CAAE,CAAA;gBAAG,CAAA,CAAE,CAAA;gBAAG,CAAA;gBAAG,CAAA;YAAA,CAAA;QAAA,CAAA;QAIf,KAAA,EAAM,CAAA,EAAe,CACpB;YAAA,MAAO,CAAA,IAAA,CAAK,IAAA,CAAK,EAAA,CAAK,CACrB;gBAAA,CAAA,CAAE,CAAA;gBAAG,CAAA;gBAAG,CAAA;gBAAG,CAAA;gBACX,CAAA;gBAAG,CAAA,CAAE,CAAA;gBAAG,CAAA;gBAAG,CAAA;gBACX,CAAA;gBAAG,CAAA;gBAAG,CAAA;gBAAG,CAAA;gBACT,CAAA;gBAAG,CAAA;gBAAG,CAAA;gBAAG,CAAA;YAAA,CAAA;QAAA,CAAA;QAIX,OAAA,EAAQ,CAAA,EAAiB,CACxB;YAAA,MAAA,CAAA,CAAA,GAAI,EAAA,EAAS,CAAA,GACN,IAAA,CAAK,IAAA,CAAK,EAAA,CAAK,CACrB;gBAAA,CAAA;gBAAG,CAAA;gBAAG,CAAA;gBAAG,CAAA;gBACT,CAAA;gBAAG,IAAA,CAAK,GAAA,CAAI,CAAA;iBAAK,IAAA,CAAK,GAAA,CAAI,CAAA;gBAAI,CAAA;gBAC9B,CAAA;gBAAG,IAAA,CAAK,GAAA,CAAI,CAAA;gBAAI,IAAA,CAAK,GAAA,CAAI,CAAA;gBAAI,CAAA;gBAC7B,CAAA;gBAAG,CAAA;gBAAG,CAAA;gBAAG,CAAA;YAAA,CAAA;QAAA,CAAA;QAIX,OAAA,EAAQ,CAAA,EAAiB,CACxB;YAAA,MAAA,CAAA,CAAA,GAAI,EAAA,EAAS,CAAA,GACN,IAAA,CAAK,IAAA,CAAK,EAAA,CAAK,CACrB;gBAAA,IAAA,CAAK,GAAA,CAAI,CAAA;gBAAI,CAAA;gBAAG,IAAA,CAAK,GAAA,CAAI,CAAA;gBAAI,CAAA;gBAC7B,CAAA;gBAAG,CAAA;gBAAG,CAAA;gBAAG,CAAA;iBACR,IAAA,CAAK,GAAA,CAAI,CAAA;gBAAI,CAAA;gBAAG,IAAA,CAAK,GAAA,CAAI,CAAA;gBAAI,CAAA;gBAC9B,CAAA;gBAAG,CAAA;gBAAG,CAAA;gBAAG,CAAA;YAAA,CAAA;QAAA,CAAA;QAIX,OAAA,EAAQ,CAAA,EAAiB,CACxB;YAAA,MAAA,CAAA,CAAA,GAAI,EAAA,EAAS,CAAA,GACN,IAAA,CAAK,IAAA,CAAK,EAAA,CAAK,CACrB;gBAAA,IAAA,CAAK,GAAA,CAAI,CAAA;iBAAK,IAAA,CAAK,GAAA,CAAI,CAAA;gBAAI,CAAA;gBAAG,CAAA;gBAC9B,IAAA,CAAK,GAAA,CAAI,CAAA;gBAAI,IAAA,CAAK,GAAA,CAAI,CAAA;gBAAI,CAAA;gBAAG,CAAA;gBAC7B,CAAA;gBAAG,CAAA;gBAAG,CAAA;gBAAG,CAAA;gBACT,CAAA;gBAAG,CAAA;gBAAG,CAAA;gBAAG,CAAA;YAAA,CAAA;QAAA,CAAA;QAIX,MAAA,IAAe,CAEd;YAAA,GAAM,CAAA,CAAA,GAAM,CAAA,CAAA,EAEN,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,EAAA,GACpD,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,EAAA,GACnD,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,EAAA,GACnD,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,EAAA,GACnD,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,EAAA,GACnD,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,CAAA,GACnD,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,CAAA,GACnD,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,CAAA,GACnD,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,CAAA,GACnD,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,CAAA,GACnD,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,CAAA,GACnD,EAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,CAAA,GACnD,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,CAAA,GACnD,EAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,CAAA,GACnD,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,IAAA,CAAK,CAAA,CAAE,CAAA,GAClD,EAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,IAAA,CAAK,CAAA,CAAE,CAAA,GAClD,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,IAAA,CAAK,CAAA,CAAE,CAAA,GAClD,EAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,IAAA,CAAK,CAAA,CAAE,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,IAAA,CAAK,CAAA,CAAE,CAAA,GAClD,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,IAAA,CAAK,CAAA,CAAE,CAAA;YAEvD,CAAA,CAAI,CAAA,IAAK,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,EACzD,CAAA,CAAI,CAAA,MAAO,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,GAC3D,CAAA,CAAI,CAAA,IAAK,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,EACzD,CAAA,CAAI,EAAA,MAAQ,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,GAE5D,CAAA,CAAI,CAAA,MAAO,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,GAC3D,CAAA,CAAI,CAAA,IAAK,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,EACzD,CAAA,CAAI,CAAA,MAAO,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,GAC3D,CAAA,CAAI,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,EAE1D,CAAA,CAAI,CAAA,IAAK,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,EACzD,CAAA,CAAI,CAAA,MAAO,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,GAC3D,CAAA,CAAI,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,EAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,EAC1D,CAAA,CAAI,EAAA,MAAQ,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,GAE5D,CAAA,CAAI,CAAA,MAAO,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,EAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,EAAA,GAC3D,CAAA,CAAI,CAAA,IAAK,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,EAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,EAAA,EACzD,CAAA,CAAI,EAAA,MAAQ,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,GAC5D,CAAA,CAAI,EAAA,IAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,EAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,EAAA,GAAM,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA;YAE1D,GAAM,CAAA,CAAA,GACL,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,CAAI,CAAA,IAChB,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,CAAI,CAAA,IAChB,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,CAAI,CAAA,IAChB,IAAA,CAAK,CAAA,CAAE,CAAA,IAAK,CAAA,CAAI,EAAA;YAEjB,GAAA,CAAA,GAAS,CAAA,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,CAAA,EAAG,CAAA,GACtB,GAAA,CAAA,GAAS,CAAA,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,CAAA,EAAG,CAAA,GACtB,CAAA,CAAI,CAAA,GAAI,CAAA,GAAI,CAAA,KAAO,CAAA,GAAM,CAAA;YAI3B,MAAO,CAAA,EAAA,CAAK,CAAA;QAAA,CAAA;IAAA,CAAA;AAAA,CAnKN;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SA2KT,EAAA,CAAc,CAAA,EAAY,CAAA,EAAY,CAAA,EAAW,CAAA,GAAI,IAAA,CAAK,GAAA,EAAa,CACtE;IAAA,MAAO,CAAA,CAAA,IAAM,CAAA,CAAE,CAAA,IAAK,CAAA,IAAK,CAAA,IAAK,CAAA,GAAK,CAAA;AAAA,CAD3B;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;AAKT,GAAM,CAAA,EAAA,GAAI,UAAA,EACJ,EAAA,GAAI,KAAA,EACJ,EAAA,GAAI,UAAA,EAEJ,EAAA,GAAS,EAAA,CAAI,IAAA,CAAK,GAAA;SAExB,EAAA,CAAa,CAAA,EAAmB,CAC/B;IAAA,MAAO,CAAA,CACN;QAAA,IAAA,EAAM,CAAA;QACN,GAAA,KAAO,CAAA,EAAM,CACZ;YAAA,EAAA,EAAI,CAAA,CAAK,MAAA,KAAW,CAAA,EACnB,MAAA,CAAA,IAAA,CAAK,IAAA,IAAQ,EAAA,GAAI,IAAA,CAAK,IAAA,GAAO,EAAA,IAAK,EAAA,EAC3B,IAAA,CAAK,IAAA,GAAO,EAAA;YACb,EAAA,EAAI,CAAA,CAAK,MAAA,KAAW,CAAA,EAAG,CAC7B;gBAAA,EAAA,EAAI,MAAO,CAAA,CAAA,CAAK,CAAA,KAAO,CAAA,SACtB,MAAO,CAAA,IAAA,CAAK,GAAA,CAAI,CAAA,EAAG,CAAA,CAAK,CAAA;gBAClB,EAAA,EAAI,EAAA,CAAO,CAAA,CAAK,CAAA,IACtB,MAAO,CAAA,IAAA,CAAK,GAAA,CAAI,CAAA,CAAK,CAAA,EAAG,CAAA,GAAI,CAAA,CAAK,CAAA;gBAC3B,EAAA,EAAI,EAAA,CAAQ,CAAA,CAAK,CAAA,IACvB,MAAO,CAAA,IAAA,CAAK,GAAA,CAAI,CAAA,CAAI,CAAA,EAAG,CAAA,EAAG,CAAA,GAAI,CAAA,CAAK,CAAA;YAAA,CAAA,MAAA,EAAA,EAE1B,CAAA,CAAK,MAAA,KAAW,CAAA,EAAG,CAC7B;gBAAA,EAAA,EAAI,MAAO,CAAA,CAAA,CAAK,CAAA,KAAO,CAAA,WAAY,MAAO,CAAA,CAAA,CAAK,CAAA,KAAO,CAAA,SACrD,MAAQ,CAAA,IAAA,CAAK,GAAA,MAAS,CAAA,CAAK,CAAA,IAAK,CAAA,CAAK,CAAA,KAAO,CAAA,CAAK,CAAA;gBAC3C,EAAA,EAAI,EAAA,CAAO,CAAA,CAAK,CAAA,MAAO,EAAA,CAAO,CAAA,CAAK,CAAA,IACzC,MAAO,CAAA,CAAA,CACN,IAAA,CAAK,GAAA,CAAI,CAAA,CAAK,CAAA,EAAG,CAAA,EAAG,CAAA,CAAK,CAAA,EAAG,CAAA,GAC5B,IAAA,CAAK,GAAA,CAAI,CAAA,CAAK,CAAA,EAAG,CAAA,EAAG,CAAA,CAAK,CAAA,EAAG,CAAA;gBAEvB,EAAA,EAAI,EAAA,CAAQ,CAAA,CAAK,CAAA,MAAO,EAAA,CAAQ,CAAA,CAAK,CAAA,IAC3C,MAAO,CAAA,CAAA,CACN,IAAA,CAAK,GAAA,CAAI,CAAA,CAAK,CAAA,EAAG,CAAA,EAAG,CAAA,CAAK,CAAA,EAAG,CAAA,GAC5B,IAAA,CAAK,GAAA,CAAI,CAAA,CAAK,CAAA,EAAG,CAAA,EAAG,CAAA,CAAK,CAAA,EAAG,CAAA,GAC5B,IAAA,CAAK,GAAA,CAAI,CAAA,CAAK,CAAA,EAAG,CAAA,EAAG,CAAA,CAAK,CAAA,EAAG,CAAA;YAAA,CAAA;QAAA,CAAA;IAAA,CAAA;AAAA,CA3BzB;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAmCT,EAAA,CAAkB,CAAA,EAAuB,CACxC;IAAA,MAAI,CAAA,CAAA,IAAQ,IAAA,KACX,EAAA,CAAO,IAAA,GAAO,CAAA,GAER,EAAA,CAAO,IAAA;AAAA,CAJN;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAOT,EAAA,IAAiB,CAAA,EAAM,CAEtB;IAAA,MAAO,CAAA,EAAA,CAAO,GAAA,IAAO,CAAA;AAAA,CAFb;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAMT,EAAA,IAAkB,CAAA,EAAM,CACvB;IAAA,MAAO,CAAA,IAAA,CAAK,KAAA,CAAM,EAAA,IAAQ,CAAA;AAAA,CADlB;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAIT,EAAA,CAAgB,CAAA,EAAoB,CACnC;IAAA,MAAO,CAAA,EAAA,MAAU,CAAA;AAAA,CADT;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAIT,EAAA,CAAmB,CAAA,EAAc,CAChC;IAAA,MAAO,CAAA,CAAA,CAAK,EAAA,CAAM,CAAA,CAAK,MAAA;AAAA,CADf;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAKT,EAAA,CAAuB,CAAA,EAAU,CAAA,EAAmB,CACnD;IAAA,MAAO,CAAA,CAAA,CAAG,EAAA,CAAG,CAAA,IAAK,CAAA,CAAG,EAAA,CAAG,CAAA,IACpB,CAAA,CAAG,EAAA,CAAG,CAAA,IAAK,CAAA,CAAG,EAAA,CAAG,CAAA,IACjB,CAAA,CAAG,EAAA,CAAG,CAAA,IAAK,CAAA,CAAG,EAAA,CAAG,CAAA,IACjB,CAAA,CAAG,EAAA,CAAG,CAAA,IAAK,CAAA,CAAG,EAAA,CAAG,CAAA;AAAA,CAJb;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAOT,EAAA,CAAsB,CAAA,EAAU,CAAA,EAAmB,CAClD;IAAA,MAAO,CAAA,CAAA,CAAG,EAAA,CAAG,CAAA,GAAI,CAAA,CAAG,EAAA,CAAG,CAAA,IACnB,CAAA,CAAG,EAAA,CAAG,CAAA,GAAI,CAAA,CAAG,EAAA,CAAG,CAAA,IAChB,CAAA,CAAG,EAAA,CAAG,CAAA,GAAI,CAAA,CAAG,EAAA,CAAG,CAAA,IAChB,CAAA,CAAG,EAAA,CAAG,CAAA,GAAI,CAAA,CAAG,EAAA,CAAG,CAAA;AAAA,CAJZ;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAQT,EAAA,CAAuB,CAAA,EAAU,CAAA,EAAyB,CAEzlG,EAAA,EAAI,CAAA,KAAU,CAAA,EACb,MAAO,CAAA,IAAA;IAGR,GAAM,CAAA,CAAA,KAAO,CAAA,CAAG,EAAA,CAAG,CAAA,GAAI,CAAA,CAAG,EAAA,CAAG,CAAA,KAAM,CAAA,CAAG,EAAA,CAAG,CAAA,GAAI,CAAA,CAAG,EAAA,CAAG,CAAA,KAAM,CAAA,CAAG,EAAA,CAAG,CAAA,GAAI,CAAA,CAAG,EAAA,CAAG,CAAA,KAAM,CAAA,CAAG,EAAA,CAAG,CAAA,GAAI,CAAA,CAAG,EAAA,CAAG,CAAA,KAAM,CAAA,EAC/F,CAAA,KAAO,CAAA,CAAG,EAAA,CAAG,CAAA,GAAI,CAAA,CAAG,EAAA,CAAG,CAAA,KAAM,CAAA,CAAG,EAAA,CAAG,CAAA,GAAI,CAAA,CAAG,EAAA,CAAG,CAAA,KAAM,CAAA,CAAG,EAAA,CAAG,CAAA,GAAI,CAAA,CAAG,EAAA,CAAG,CAAA,KAAM,CAAA,CAAG,EAAA,CAAG,CAAA,GAAI,CAAA,CAAG,EAAA,CAAG,CAAA,KAAM,CAAA;IAGrG,MAAI,CAAA,CAAA,GAAK,CAAA,IAAK,CAAA,GAAK,CAAA,IAAK,CAAA,GAAK,CAAA,IAAK,CAAA,GAAK,CAAA,GAC/B,IAAA,GAGD,CAAA;AAAA,CArBC;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAyBT,EAAA,CAAsB,CAAA,EAAU,CAAA,EAAuB,CACtD;IAAA,GAAM,CAAA,CAAA,GAAI,EAAA,CAAc,CAAA,EAAI,CAAA;IAC5B,MAAK,CAAA,CAAA,GACE,CAAA,CACN,CAAA,CAAG,EAAA,CAAG,CAAA,GAAI,CAAA,IAAK,CAAA,CAAG,EAAA,CAAG,CAAA,GAAI,CAAA,CAAG,EAAA,CAAG,CAAA,GAC/B,CAAA,CAAG,EAAA,CAAG,CAAA,GAAI,CAAA,IAAK,CAAA,CAAG,EAAA,CAAG,CAAA,GAAI,CAAA,CAAG,EAAA,CAAG,CAAA,KAHjB,IAAA;AAAA,CAFP;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAST,EAAA,CAAsB,CAAA,EAAS,CAAA,EAAkB,CAChD;IAAA,MAAI,CAAA,EAAA,CAAc,CAAA,EAAG,CAAA,CAAE,EAAA,KAAO,EAAA,CAAc,CAAA,EAAG,CAAA,CAAE,EAAA,KACzC,CAAA,KAEC,EAAA,CAAa,CAAA,EAAG,EAAA,CAAS,CAAA,CAAE,EAAA,EAAI,CAAA,CAAK,CAAA,CAAE,EAAA,CAAG,CAAA,EAAG,CAAA,CAAE,EAAA,CAAG,CAAA,SACpD,EAAA,CAAa,CAAA,EAAG,EAAA,CAAS,CAAA,CAAK,CAAA,CAAE,EAAA,CAAG,CAAA,EAAG,CAAA,CAAE,EAAA,CAAG,CAAA,GAAI,CAAA,CAAE,EAAA,QACjD,EAAA,CAAa,CAAA,EAAG,EAAA,CAAS,CAAA,CAAE,EAAA,EAAI,CAAA,CAAK,CAAA,CAAE,EAAA,CAAG,CAAA,EAAG,CAAA,CAAE,EAAA,CAAG,CAAA,SACjD,EAAA,CAAa,CAAA,EAAG,EAAA,CAAS,CAAA,CAAK,CAAA,CAAE,EAAA,CAAG,CAAA,EAAG,CAAA,CAAE,EAAA,CAAG,CAAA,GAAI,CAAA,CAAE,EAAA;AAAA,CAP/C;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAcT,EAAA,CAAuB,CAAA,EAAS,CAAA,EAAoB,CACnD;IAAA,MAAO,CAAA,CAAA,CAAG,CAAA,GAAI,CAAA,CAAE,EAAA,CAAG,CAAA,IAAK,CAAA,CAAG,CAAA,GAAI,CAAA,CAAE,EAAA,CAAG,CAAA,IAAK,CAAA,CAAG,CAAA,GAAI,CAAA,CAAE,EAAA,CAAG,CAAA,IAAK,CAAA,CAAG,CAAA,GAAI,CAAA,CAAE,EAAA,CAAG,CAAA;AAAA,CAD9D;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAKT,EAAA,CAAwB,CAAA,EAAS,CAAA,EAAoB,CACpD;IAAA,MAAO,EAAA,CAAA;AAAA,CADC;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAIT,EAAA,CAAyB,CAAA,EAAS,CAAA,EAAqB,CACtD;IAAA,MAAO,CAAA,EAAA,CAAmB,CAAA,EAAG,CAC5B;QAAA,CAAA,CAAE,EAAA;QACF,CAAA,CAAK,CAAA,CAAE,EAAA,CAAG,CAAA,EAAG,CAAA,CAAE,EAAA,CAAG,CAAA;QAClB,CAAA,CAAE,EAAA;QACF,CAAA,CAAK,CAAA,CAAE,EAAA,CAAG,CAAA,EAAG,CAAA,CAAE,EAAA,CAAG,CAAA;IAAA,CAAA;AAAA,CALX;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAUT,EAAA,CAAuB,CAAA,EAAS,CAAA,EAAmB,CAClD;IAAA,MAAO,EAAA,CAAA;AAAA,CADC;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAKT,EAAA,CAAwB,CAAA,EAAS,CAAA,EAAoB,CACpD;IAAA,MAAO,EAAA,CAAA;AAAA,CADC;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAIT,EAAA,CAAyB,CAAA,EAAS,CAAA,EAAqB,CAGtD;IAAA,EAAA,EAAI,EAAA,CAAiB,CAAA,EAAG,CAAA,CAAE,EAAA,KAAO,EAAA,CAAiB,CAAA,EAAG,CAAA,CAAE,EAAA,GACtD,MAAO,EAAA,CAAA;IAIR,GAAA,CAAA,GAAS,CAAA,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,CAAA,CAAE,MAAA,EAAQ,CAAA,GAAK,CAClC;QAAA,GAAM,CAAA,CAAA,GAAK,CAAA,CAAE,CAAA,GACP,CAAA,GAAK,CAAA,EAAG,CAAA,GAAI,CAAA,IAAK,CAAA,CAAE,MAAA;QACzB,EAAA,EAAI,EAAA,CAAa,CAAA,EAAG,CAAE;YAAA,EAAA,EAAA,CAAA;YAAI,EAAA,EAAA,CAAA;QAAA,CAAA,GACzB,MAAO,EAAA,CAAA;IAAA,CAIT;IAAA,MAAO,EAAA,CAAA;AAAA,CAhBC;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAoBT,EAAA,CAAyB,CAAA,EAAW,CAAA,EAAmB,CACtD;IAAA,MAAO,CAAA,CAAA,CAAE,MAAA,CAAO,IAAA,CAAK,CAAA,IAAK,CAAA,CAAE,MAAA;AAAA,CADpB;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAIT,EAAA,CAA0B,CAAA,EAAY,CAAA,EAAqB,CAC1D;IAAA,MAAO,CAAA,CAAA,CAAG,MAAA,CAAO,IAAA,CAAK,CAAA,CAAG,MAAA,IAAU,CAAA,CAAG,MAAA,GAAS,CAAA,CAAG,MAAA;AAAA,CAD1C;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAKT,EAAA,CAA2B,CAAA,EAAW,CAAA,EAAqB,CAC1D;IAAA,MAAO,EAAA,CAAA;AAAA,CADC;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAIT,EAAA,CAA4B,CAAA,EAAa,CAAA,EAAsB,CAC9D;IAAA,GAAA,CAAA,GAAS,CAAA,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,CAAA,CAAG,MAAA,EAAQ,CAAA,GAAK,CACnC;QAAA,GAAM,CAAA,CAAA,GAAI,CACT;YAAA,EAAA,EAAI,CAAA,CAAG,CAAA;YACP,EAAA,EAAI,CAAA,EAAI,CAAA,GAAI,CAAA,IAAK,CAAA,CAAG,MAAA;QAAA,CAAA;QAErB,EAAA,EAAI,EAAA,CAAgB,CAAA,EAAG,CAAA,GACtB,MAAO,EAAA,CAAA;IAAA,CAGT;IAAA,MAAO,EAAA,CAAA;AAAA,CAVC;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAaT,EAAA,CAA0B,CAAA,EAAY,CAAA,EAAoB,CAEzD;IAAA,GAAI,CAAA,CAAA,IAAM,CAAA;IAEV,GAAA,CAAA,GAAS,CAAA,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,CAAA,CAAE,MAAA,EAAQ,CAAA,GAAK,CAElC;QAAA,GAAM,CAAA,CAAA,GAAK,CAAA,CAAE,CAAA,GACP,CAAA,GAAK,CAAA,EAAG,CAAA,GAAI,CAAA,IAAK,CAAA,CAAE,MAAA;SAGtB,CAAA,CAAG,CAAA,GAAI,CAAA,CAAG,CAAA,IAAK,CAAA,CAAG,CAAA,GAAI,CAAA,CAAG,CAAA,IAAO,CAAA,CAAG,CAAA,GAAI,CAAA,CAAG,CAAA,IAAK,CAAA,CAAG,CAAA,GAAI,CAAA,CAAG,CAAA,KACvD,CAAA,CAAG,CAAA,IAAK,CAAA,CAAG,CAAA,GAAI,CAAA,CAAG,CAAA,KAAM,CAAA,CAAG,CAAA,GAAI,CAAA,CAAG,CAAA,KAAM,CAAA,CAAG,CAAA,GAAI,CAAA,CAAG,CAAA,IAAK,CAAA,CAAG,CAAA,KAE9D,CAAA,IAAO,CAAA;IAAA,CAKT;IAAA,MAAO,CAAA,CAAA;AAAA,CAlBC;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAsBT,EAAA,CAAwB,CAAA,EAAW,CAAA,EAAoB,CACtD;IAAA,MAAO,CAAA,CAAA,CAAG,EAAA,CAAG,CAAA;AAAA,CADL;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAIT,EAAA,CAAsB,CAAA,EAAS,CAAA,EAAkB,CAChD;IAAA,MAAA,CAAQ,CAAA,CAAE,KAAA;QAAA,IACJ,CAAA,CAAA;YAAQ,MAAO,CAAA,EAAA,CAAa,CAAA,EAAG,CAAA;QAAA,IAC/B,CAAA,CAAA;YAAQ,MAAO,CAAA,EAAA,CAAa,CAAA,EAAG,CAAA;QAAA,IAC/B,CAAA,CAAA;YAAU,MAAO,CAAA,EAAA,CAAe,CAAA,EAAG,CAAA;QAAA,IACnC,CAAA,CAAA;YAAW,MAAO,CAAA,EAAA,CAAgB,CAAA,EAAG,CAAA,CAAE,GAAA;QAAA,IACvC,CAAA,CAAA;YAAS,MAAO,CAAA,EAAA,CAAc,CAAA,EAAG,CAAA,CAAE,EAAA;;IAEzC,KAAM,CAAA,GAAI,CAAA,KAAA,EAAM,oBAAA,EAAwB,CAAA,CAAW,KAAA;AAAA,CAR3C;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAWT,EAAA,CAAsB,CAAA,EAAS,CAAA,EAAkB,CAChD;IAAA,MAAA,CAAQ,CAAA,CAAE,KAAA;QAAA,IACJ,CAAA,CAAA;YAAQ,MAAO,CAAA,EAAA,CAAa,CAAA,EAAG,CAAA;QAAA,IAC/B,CAAA,CAAA;YAAQ,MAAO,CAAA,OAAA,CAAQ,EAAA,CAAa,CAAA,EAAG,CAAA;QAAA,IACvC,CAAA,CAAA;YAAU,MAAO,CAAA,EAAA,CAAe,CAAA,EAAG,CAAA;QAAA,IACnC,CAAA,CAAA;YAAW,MAAO,CAAA,EAAA,CAAgB,CAAA,EAAG,CAAA,CAAE,GAAA;QAAA,IACvC,CAAA,CAAA;YAAS,MAAO,CAAA,EAAA,CAAc,CAAA,EAAG,CAAA,CAAE,EAAA;;IAEzC,KAAM,CAAA,GAAI,CAAA,KAAA,EAAM,oBAAA,EAAwB,CAAA,CAAW,KAAA;AAAA,CAR3C;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAWT,EAAA,CAAwB,CAAA,EAAS,CAAA,EAAoB,CACpD;IAAA,MAAA,CAAQ,CAAA,CAAE,KAAA;QAAA,IACJ,CAAA,CAAA;YAAQ,MAAO,CAAA,EAAA,CAAe,CAAA,EAAG,CAAA;QAAA,IACjC,CAAA,CAAA;YAAQ,MAAO,CAAA,EAAA,CAAe,CAAA,EAAG,CAAA;QAAA,IACjC,CAAA,CAAA;YAAU,MAAO,CAAA,EAAA,CAAiB,CAAA,EAAG,CAAA;QAAA,IACrC,CAAA,CAAA;YAAW,MAAO,CAAA,EAAA,CAAkB,CAAA,EAAG,CAAA,CAAE,GAAA;QAAA,IACzC,CAAA,CAAA;YAAS,MAAO,CAAA,EAAA,CAAgB,CAAA,EAAG,CAAA,CAAE,EAAA;;IAE3C,KAAM,CAAA,GAAI,CAAA,KAAA,EAAM,oBAAA,EAAwB,CAAA,CAAW,KAAA;AAAA,CAR3C;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAWT,EAAA,CAAyB,CAAA,EAAS,CAAA,EAAqB,CACtD;IAAA,MAAA,CAAQ,CAAA,CAAE,KAAA;QAAA,IACJ,CAAA,CAAA;YAAQ,MAAO,CAAA,EAAA,CAAgB,CAAA,EAAG,CAAA;QAAA,IAClC,CAAA,CAAA;YAAQ,MAAO,CAAA,EAAA,CAAgB,CAAA,EAAG,CAAA;QAAA,IAClC,CAAA,CAAA;YAAU,MAAO,CAAA,EAAA,CAAkB,CAAA,EAAG,CAAA;QAAA,IACtC,CAAA,CAAA;YAAW,MAAO,CAAA,EAAA,CAAmB,CAAA,EAAG,CAAA,CAAE,GAAA;QAAA,IAC1C,CAAA,CAAA;YAAS,MAAO,CAAA,EAAA,CAAiB,CAAA,EAAG,CAAA,CAAE,EAAA;;IAE5C,KAAM,CAAA,GAAI,CAAA,KAAA,EAAM,oBAAA,EAAwB,CAAA,CAAW,KAAA;AAAA,CAR3C;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAWT,EAAA,CAAuB,CAAA,EAAS,CAAA,EAAmB,CAClD;IAAA,MAAA,CAAQ,CAAA,CAAE,KAAA;QAAA,IACJ,CAAA,CAAA;YAAQ,MAAO,CAAA,EAAA,CAAc,CAAA,EAAG,CAAA;QAAA,IAChC,CAAA,CAAA;YAAQ,MAAO,CAAA,EAAA,CAAc,CAAA,EAAG,CAAA;QAAA,IAChC,CAAA,CAAA;YAAU,MAAO,CAAA,EAAA,CAAgB,CAAA,EAAG,CAAA;QAAA,IACpC,CAAA,CAAA;YAAW,MAAO,CAAA,EAAA,CAAiB,CAAA,CAAE,GAAA,EAAK,CAAA;QAAA,IAC1C,CAAA,CAAA;YAAS,MAAO,CAAA,EAAA,CAAe,CAAA,CAAE,EAAA,EAAI,CAAA;;IAE3C,KAAM,CAAA,GAAI,CAAA,KAAA,EAAM,oBAAA,EAAwB,CAAA,CAAW,KAAA;AAAA,CAR3C;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAWT,EAAA,CAAsB,CAAA,EAAU,CAAA,EAAmB,CAClD;IAAA,MAAA,CAAQ,CAAA,CAAG,KAAA;QAAA,IACL,CAAA,CAAA;YAAQ,MAAO,CAAA,EAAA,CAAa,CAAA,EAAI,CAAA;QAAA,IAChC,CAAA,CAAA;YAAQ,MAAO,CAAA,EAAA,CAAa,CAAA,EAAI,CAAA;QAAA,IAChC,CAAA,CAAA;YAAU,MAAO,CAAA,EAAA,CAAe,CAAA,EAAI,CAAA;QAAA,IACpC,CAAA,CAAA;YAAW,MAAO,CAAA,EAAA,CAAgB,CAAA,EAAI,CAAA,CAAG,GAAA;QAAA,IACzC,CAAA,CAAA;YAAS,MAAO,CAAA,EAAA,CAAc,CAAA,EAAI,CAAA,CAAG,EAAA;;IAE3C,KAAM,CAAA,GAAI,CAAA,KAAA,EAAM,oBAAA,EAAwB,CAAA,CAAY,KAAA;AAAA,CAR5C;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAWT,EAAA,CAAkB,CAAA,EAAU,CAAA,EAAgB,CAC3C;IAAA,MAAO,CAAA,CACN;QAAA,EAAA,EAAI,CAAA,CAAK,CAAA,CAAG,EAAA,CAAG,CAAA,GAAI,CAAA,CAAG,EAAA,CAAG,CAAA,EAAG,CAAA,CAAG,EAAA,CAAG,CAAA,GAAI,CAAA,CAAG,EAAA,CAAG,CAAA;QAC5C,EAAA,EAAI,CAAA,CAAK,CAAA,CAAG,EAAA,CAAG,CAAA,GAAI,CAAA,CAAG,EAAA,CAAG,CAAA,EAAG,CAAA,CAAG,EAAA,CAAG,CAAA,GAAI,CAAA,CAAG,EAAA,CAAG,CAAA;IAAA,CAAA;AAAA,CAHrC;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAOT,EAAA,CAAkB,CAAA,EAAU,CAAA,EAAgB,CAC3C;IAAA,MAAO,CAAA,CACN;QAAA,EAAA,EAAI,CAAA,CAAG,KAAA;QACP,EAAA,EAAI,CAAA,CAAG,KAAA;IAAA,CAAA;AAAA,CAHA;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;AC1vBT,GAAA,CAAA,EAAA,iBAAwB,GAAe;mBAEvB,CAAA,CAAM,CACpB;QAAA,KAAA,IAAS,CAAA;QAFV,EAAA,CAAA,IAAA,EAAA,CAAA;QAGC,IAAA,CAAK,OAAA,GAAU,CAAA;IAAA,CAEhB;IAAA,IAAA,CAAK,EAAA,EAAc,CAClB;QAAA,GAAM,CAAA,CAAA,GAAK,IAAA,CAAK,OAAA;QAChB,MAAA,CAAA,IAAA,CAAK,GAAA,CAAI,CAAA,EAAI,EAAA,GACb,IAAA,CAAK,OAAA,IACE,CAAA;IAAA,CAER;IAAA,KAAA,CAAM,EAAA,EAAkB,CACvB;QAAA,GAAM,CAAA,CAAA,GAAK,IAAA,CAAK,IAAA,CAAK,EAAA;QACrB,MAAO,KAAM,IAAA,CAAK,MAAA,CAAO,CAAA;;IAAA,CAAA;;AAd3B,CAAA,CAAA,EAAA,EAAA,CAAA;SAkBA,EAAA,CAAgB,CAAA,EAAS,CAAA,EAAkB,CAC1C;IAAA,GAAM,CAAA,CAAA,GAAK,MAAO,CAAA,CAAA,EACZ,CAAA,GAAK,MAAO,CAAA,CAAA;IAClB,EAAA,EAAI,CAAA,KAAO,CAAA,EACV,MAAO,EAAA,CAAA;IAER,EAAA,EAAI,CAAA,KAAO,CAAA,WAAY,CAAA,KAAO,CAAA,SAAU,CACvC;QAAA,GAAM,CAAA,CAAA,GAAK,MAAA,CAAO,IAAA,CAAK,CAAA,GACjB,CAAA,GAAK,MAAA,CAAO,IAAA,CAAK,CAAA;QACvB,EAAA,EAAI,CAAA,CAAG,MAAA,KAAW,CAAA,CAAG,MAAA,EACpB,MAAO,EAAA,CAAA;QAER,GAAA,EAAA,GAAW,CAAA,CAAA,IAAK,CAAA,CAAI,CACnB;YAAA,GAAM,CAAA,CAAA,GAAK,CAAA,CAAG,CAAA,GACR,CAAA,GAAK,CAAA,CAAG,CAAA;YACd,EAAA,IAAM,MAAO,CAAA,CAAA,IAAO,CAAA,aAAc,MAAO,CAAA,CAAA,IAAO,CAAA,eAC1C,EAAA,CAAO,CAAA,EAAI,CAAA,GACf,MAAO,EAAA,CAAA;QAAA,CAIV;QAAA,MAAO,EAAA,CAAA;IAAA,CAER;IAAA,MAAO,CAAA,CAAA,KAAO,CAAA;AAAA,CAvBN;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SA0BT,EAAA,CAAqB,CAAA,EAAa,CAAA,EAAkB,CACnD;IAAA,GAAM,CAAA,CAAA,GAAI,QAAA,CAAS,aAAA,CAAc,CAAA;IACjC,QAAA,CAAS,IAAA,CAAK,WAAA,CAAY,CAAA,GAC1B,CAAA,CAAE,YAAA,CAAa,CAAA,QAAS,CAAA,iBACxB,CAAA,CAAE,IAAA,GAAO,CAAA,EACT,CAAA,CAAE,QAAA,GAAW,CAAA,EACb,CAAA,CAAE,KAAA,IACF,QAAA,CAAS,IAAA,CAAK,WAAA,CAAY,CAAA;AAAA,CAPlB;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAUT,EAAA,CAAsB,CAAA,EAAY,CAAA,EAAkB,CACnD;IAAA,GAAM,CAAA,CAAA,GAAM,GAAA,CAAI,eAAA,CAAgB,CAAA;IAChC,EAAA,CAAY,CAAA,EAAK,CAAA,GACjB,GAAA,CAAI,eAAA,CAAgB,CAAA;AAAA,CAHZ;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;ACyFT,GAAM,CAAA,EAAA,GAAa,CAAA,UACb,EAAA,GAAS,CAAA,EACT,EAAA,GAAc,KAAA,EACd,EAAA,GAAe,EAAA,EAEf,EAAA,IFpIN,0TEoIsB,GAwBhB,EAAA,IAxBgB,2SAwBA,GAuBhB,EAAA,IAvBgB,kEAuBL,GAMX,EAAA,IANW,iFAMA;SAMjB,EAAA,CAAkB,CAAA,EAA2B,CAC5C;IAAA,MAAA,CAAQ,CAAA;QAAA,IACF,CAAA,CAAA;YAAW,MAAO,CAAA,CAAA,CAAK,EAAA,EAAI,EAAA;QAAA,IAC3B,CAAA,CAAA;YAAO,MAAO,CAAA,CAAA,CAAK,CAAA,EAAG,EAAA;QAAA,IACtB,CAAA,CAAA;YAAY,MAAO,CAAA,CAAA,CAAK,CAAA,EAAG,EAAA;QAAA,IAC3B,CAAA,CAAA;YAAQ,MAAO,CAAA,CAAA,CAAK,EAAA,EAAI,CAAA;QAAA,IACxB,CAAA,CAAA;YAAU,MAAO,CAAA,CAAA,CAAK,CAAA,EAAG,CAAA;QAAA,IACzB,CAAA,CAAA;YAAS,MAAO,CAAA,CAAA,CAAK,CAAA,EAAG,CAAA;QAAA,IACxB,CAAA,CAAA;YAAW,MAAO,CAAA,CAAA,CAAK,EAAA,EAAI,CAAA;QAAA,IAC3B,CAAA,CAAA;YAAO,MAAO,CAAA,CAAA,CAAK,CAAA,EAAG,CAAA;QAAA,IACtB,CAAA,CAAA;YAAY,MAAO,CAAA,CAAA,CAAK,CAAA,EAAG,CAAA;;YACvB,MAAO,CAAA,CAAA;;AAAA,CAXT;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAeT,EAAA,CAAiB,CAAA,EAA2B,CAAA,EAAmB,CAE9D;IAAA,GAAM,CAAA,CAAA,QAAqB,CAhO5B;QAAA,GAAA,CAAA,CAAA;QAkOE,GAAM,CAAA,CAAA,GAAY,CAAA,CAAW,EAAA,EAAU,EAAA,GACjC,CAAA,GAAW,CAAA,CAChB,GAAI,CAAA,SAAA,CAAU,GAAI,CAAA,iBAAA,CAAkB,CAAE;YAAA,GAAA;YAAK,GAAA;YAAK,GAAA;YAAK,GAAA;QAAA,CAAA,GAAS,CAAA,EAAG,CAAA,IAG5D,CAAA,IAAI,CAAA,GAAA,CAAA,CAAK,UAAA,KAAL,IAAA,GAAA,CAAA,GAAmB,CAAA,CAAI,CAAA,EAAG,CAAA,EAAG,CAAA;QAEvC,CAAA,CAAG,UAAA,CAAW,CAAA,CAAE,CAAA,GAAI,GAAA,EAAK,CAAA,CAAE,CAAA,GAAI,GAAA,EAAK,CAAA,CAAE,CAAA,GAAI,GAAA,EAAK,CAAA,GAC/C,CAAA,CAAG,MAAA,CAAO,CAAA,CAAG,KAAA,GACb,CAAA,CAAG,MAAA,CAAO,CAAA,CAAG,YAAA,GACb,CAAA,CAAG,iBAAA,CAAkB,CAAA,CAAG,SAAA,EAAW,CAAA,CAAG,mBAAA,EAAqB,CAAA,CAAG,GAAA,EAAK,CAAA,CAAG,mBAAA;QAEtE,GAAM,CAAA,CAAA,GAAO,CAAA,CAAG,YAAA;QAEhB,CAAA,CAAG,UAAA,CAAW,CAAA,CAAG,YAAA,EAAc,CAAA,GAC/B,CAAA,CAAG,UAAA,CAAW,CAAA,CAAG,YAAA,EAAc,EAAA,GAAc,CAAA,EAAG,CAAA,CAAG,YAAA,GACnD,CAAA,CAAG,UAAA,CAAW,CAAA,CAAG,YAAA,EAAc,IAAA;QAE/B,GAAM,CAAA,CAAA,GAAO,CAAA,CAAG,YAAA;QAEhB,CAAA,CAAG,UAAA,CAAW,CAAA,CAAG,oBAAA,EAAsB,CAAA,GACvC,CAAA,CAAG,UAAA,CAAW,CAAA,CAAG,oBAAA,EAAsB,EAAA,GAAc,CAAA,EAAG,CAAA,CAAG,YAAA,GAC3D,CAAA,CAAG,UAAA,CAAW,CAAA,CAAG,oBAAA,EAAsB,IAAA;QAGvC,GAAM,CAAA,CAAA,GAAQ,CAAA,CACb,GAAI,CAAA,SAAA,CAAU,GAAI,CAAA,iBAAA,CAAkB,CACnC;YAAA,GAAA;YAAK,GAAA;YAAK,GAAA;YAAK,GAAA;YACf,GAAA;YAAK,GAAA;YAAK,GAAA;YAAK,GAAA;YACf,GAAA;YAAK,GAAA;YAAK,GAAA;YAAK,GAAA;YACf,GAAA;YAAK,GAAA;YAAK,GAAA;YAAK,GAAA;QAAA,CAAA,GACZ,CAAA,EAAG,CAAA,GAAI,CACV;YAAA,IAAA,EAAM,CAAA;YACN,MAAA,EAAQ,CAAA;QAAA,CAAA;QAIV,MAAO,CAAA,CACN;YAAA,SAAA,EAAW,CAAA;YACX,aAAA,EAAe,CAAA;YACf,SAAA,EAAW,CAAA;YACX,SAAA,EAAW,CAAA;YACX,MAAA,EAAQ,CAAA;YACR,MAAA,EAAQ,CAAA;YACR,UAAA,EAAY,CAAA;YAAA,CAAA;YACZ,IAAA,EAAM,CAAA;YACN,IAAA,EAAM,CAAA;YACN,MAAA,EAAQ,CAAA,CAAA;YACR,MAAA,EAAQ,CAAA,CAAA;YACR,SAAA,EAAW,EAAA;YACX,cAAA,EAAgB,CAAA,CAAA;YAChB,UAAA,EAAY,CAAA;YACZ,KAAA,EAAO,CAAA;YACP,KAAA,EAAO,CAAA,CAAK,KAAA;YACZ,MAAA,EAAQ,CAAA,CAAK,MAAA;QAAA,CAAA;IAAA,CAAA;aAKf,CAAA,CAAoB,CAAA,EAAG,CACtB;QAAA,MAAQ,CAAA,IAAA,CAAK,GAAA,CAAI,CAAA,IAAK,IAAA,CAAK,GAAA,CAAI,CAAA,IAAM,CAAA,IAAM,CAAA;IAAA,CADnC;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAIT,CAAA,CAAiB,CAAA,EAAkB,CAAA,GAAiB,CAAA;IAAA,CAAA,EAAgB,CAEnE;QAAA,GAAM,CAAA,CAAA,GAAK,CAAA,CAAG,aAAA;QAEd,CAAA,CAAG,WAAA,CAAY,CAAA,CAAG,UAAA,EAAY,CAAA,GAC9B,CAAA,CAAG,UAAA,CAAW,CAAA,CAAG,UAAA,EAAY,CAAA,EAAG,CAAA,CAAG,IAAA,EAAM,CAAA,CAAG,IAAA,EAAM,CAAA,CAAG,aAAA,EAAe,CAAA;QAEpE,GAAM,CAAA,CAAA,QAAgB,CAxSxB;YAAA,GAAA,CAAA,CAAA;YAySG,MAAA,EAAQ,CAAA,GAAA,CAAA,CAAI,MAAA,KAAJ,IAAA,GAAA,CAAA,GAAc,CAAA,CAAK,SAAA;gBAAA,IACrB,CAAA,CAAA;oBAAU,MAAO,CAAA,CAAA,CAAG,MAAA;gBAAA,IACpB,CAAA,CAAA;oBAAW,MAAO,CAAA,CAAA,CAAG,OAAA;;oBACjB,MAAO,CAAA,CAAA,CAAG,OAAA;;QAAA,CAAA,KAIf,CAAA,QAAc,CACnB;YAAA,MAAA,CAAQ,CAAA,CAAI,IAAA;gBAAA,IACN,CAAA,CAAA;oBAAU,MAAO,CAAA,CAAA,CAAG,MAAA;gBAAA,IACpB,CAAA,CAAA;oBAAe,MAAO,CAAA,CAAA,CAAG,aAAA;;oBACrB,MAAO,CAAA,CAAA,CAAG,aAAA;;QAAA,CAAA;QAIrB,MAAA,CAAA,CAAA,CAAG,aAAA,CAAc,CAAA,CAAG,UAAA,EAAY,CAAA,CAAG,kBAAA,EAAoB,CAAA,GACvD,CAAA,CAAG,aAAA,CAAc,CAAA,CAAG,UAAA,EAAY,CAAA,CAAG,kBAAA,EAAoB,CAAA,GACvD,CAAA,CAAG,aAAA,CAAc,CAAA,CAAG,UAAA,EAAY,CAAA,CAAG,cAAA,EAAgB,CAAA,GACnD,CAAA,CAAG,aAAA,CAAc,CAAA,CAAG,UAAA,EAAY,CAAA,CAAG,cAAA,EAAgB,CAAA,GACnD,CAAA,CAAG,WAAA,CAAY,CAAA,CAAG,UAAA,EAAY,IAAA,GAEvB,CACN;YAAA,KAAA,EAAO,CAAA,CAAK,KAAA;YACZ,MAAA,EAAQ,CAAA,CAAK,MAAA;YACb,IAAA,IAAO,CACN;gBAAA,CAAA,CAAG,WAAA,CAAY,CAAA,CAAG,UAAA,EAAY,CAAA;YAAA,CAAA;YAE/B,MAAA,IAAS,CACR;gBAAA,CAAA,CAAG,WAAA,CAAY,CAAA,CAAG,UAAA,EAAY,IAAA;YAAA,CAAA;QAAA,CAAA;IAAA,CApCxB;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aA0CT,CAAA,CACC,CAAA,GAAyB,EAAA,EACzB,CAAA,GAAyB,EAAA,EACb,CAEZ;QAAA,GAAI,CAAA,CAAA,EACE,CAAA,GAAQ,EAAA,CAAc,OAAA,CAAQ,CAAA,WAAY,CAAA,IAAA,IAAA,GAAA,CAAA,GAAW,EAAA,GACrD,CAAA,GAAQ,EAAA,CAAc,OAAA,CAAQ,CAAA,WAAY,CAAA,IAAA,IAAA,GAAA,CAAA,GAAW,EAAA,GACrD,CAAA,GAAa,CAAA,CAAG,YAAA,CAAa,CAAA,CAAG,aAAA,GAChC,CAAA,GAAa,CAAA,CAAG,YAAA,CAAa,CAAA,CAAG,eAAA;QAOtC,EAAA,EALA,CAAA,CAAG,YAAA,CAAa,CAAA,EAAY,CAAA,GAC5B,CAAA,CAAG,YAAA,CAAa,CAAA,EAAY,CAAA,GAC5B,CAAA,CAAG,aAAA,CAAc,CAAA,GACjB,CAAA,CAAG,aAAA,CAAc,CAAA,GAEZ,CAAA,GAAM,CAAA,CAAG,gBAAA,CAAiB,CAAA,GAC9B,KAAM,CAAA,GAAI,CAAA,KAAA,CAAM,CAAA;QAGjB,EAAA,EAAK,CAAA,GAAM,CAAA,CAAG,gBAAA,CAAiB,CAAA,GAC9B,KAAM,CAAA,GAAI,CAAA,KAAA,CAAM,CAAA;QAGjB,GAAM,CAAA,CAAA,GAAK,CAAA,CAAG,aAAA;QAWd,EAAA,EATA,CAAA,CAAG,YAAA,CAAa,CAAA,EAAI,CAAA,GACpB,CAAA,CAAG,YAAA,CAAa,CAAA,EAAI,CAAA,GAEpB,CAAA,CAAG,kBAAA,CAAmB,CAAA,EAAI,CAAA,EAAG,CAAA,SAC7B,CAAA,CAAG,kBAAA,CAAmB,CAAA,EAAI,CAAA,EAAG,CAAA,QAC7B,CAAA,CAAG,kBAAA,CAAmB,CAAA,EAAI,CAAA,EAAG,CAAA,WAE7B,CAAA,CAAG,WAAA,CAAY,CAAA,IAEV,CAAA,GAAM,CAAA,CAAG,iBAAA,CAAkB,CAAA,MAE3B,CAAA,MAvKU,CAuKF,GACX,KAAM,CAAA,GAAI,CAAA,KAAA,CAAM,CAAA;QAIlB,MAAO,CAAA,CAEN;YAAA,IAAA,IAAO,CACN;gBAAA,CAAA,CAAG,UAAA,CAAW,CAAA;YAAA,CAAA;YAGf,MAAA,IAAS,CACR;gBAAA,CAAA,CAAG,UAAA,CAAW,IAAA;YAAA,CAAA;YAGf,WAAA,IAAc,CACb;gBAAA,CAAA,CAAG,mBAAA,CAAoB,CAAA,EAAG,CAAA,EAAG,CAAA,CAAG,KAAA,GAAO,CAAA,EAAO,EAAA,GAAS,CAAA,EAAG,CAAA,GAC1D,CAAA,CAAG,uBAAA,CAAwB,CAAA,GAC3B,CAAA,CAAG,mBAAA,CAAoB,CAAA,EAAG,CAAA,EAAG,CAAA,CAAG,KAAA,GAAO,CAAA,EAAO,EAAA,GAAS,CAAA,EAAG,EAAA,GAC1D,CAAA,CAAG,uBAAA,CAAwB,CAAA,GAC3B,CAAA,CAAG,mBAAA,CAAoB,CAAA,EAAG,CAAA,EAAG,CAAA,CAAG,KAAA,GAAO,CAAA,EAAO,EAAA,GAAS,CAAA,EAAG,EAAA,GAC1D,CAAA,CAAG,uBAAA,CAAwB,CAAA;YAAA,CAAA;YAG5B,IAAA,EAAK,CAAA,EAAkB,CACtB;gBAAA,IAAA,CAAK,IAAA;gBACL,GAAA,CAAA,GAAW,CAAA,EAAA,IAAQ,CAAA,CAAS,CAC3B;oBAAA,GAAM,CAAA,CAAA,GAAM,CAAA,CAAQ,EAAA,GACd,EAAA,GAAM,CAAA,CAAG,kBAAA,CAAmB,CAAA,EAAI,EAAA;oBAClC,MAAO,CAAA,CAAA,IAAQ,CAAA,UAClB,CAAA,CAAG,SAAA,CAAU,EAAA,EAAK,CAAA,IACR,EAAA,CAAO,CAAA,IAEjB,CAAA,CAAG,gBAAA,CAAiB,EAAA,GAAK,CAAA,EAAO,GAAI,CAAA,YAAA,CAAa,CAAA,CAAI,CAAA,KAC/C,EAAI,CAAQ,CAAA,IAElB,CAAA,CAAG,SAAA,CAAU,EAAA,EAAK,CAAA,CAAI,CAAA,EAAG,CAAA,CAAI,CAAA,EAAG,CAAA,CAAI,CAAA,EAAG,CAAA,CAAI,CAAA,IACjC,EAAA,CAAO,CAAA,IAEjB,CAAA,CAAG,SAAA,CAAU,EAAA,EAAK,CAAA,CAAI,CAAA,EAAG,CAAA,CAAI,CAAA,EAAG,CAAA,CAAI,CAAA,IAC1B,EAAA,CAAO,CAAA,KAEjB,CAAA,CAAG,SAAA,CAAU,EAAA,EAAK,CAAA,CAAI,CAAA,EAAG,CAAA,CAAI,CAAA;gBAAA,CAG/B;gBAAA,IAAA,CAAK,MAAA;YAAA,CAAA;QAAA,CAAA;IAAA,CAlFC;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAyFT,CAAA,CACC,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACU,CAEV;QAAA,GAAM,CAAA,CAAA,GAAO,CAAA,CAAI,KAAA,GAAQ,CAAA,EACnB,CAAA,GAAO,CAAA,CAAI,MAAA,GAAS,CAAA,EACpB,CAAA,GAAK,CAAA,GAAM,CAAA,EACX,CAAA,GAAK,CAAA,GAAM,CAAA,EACX,CAAA,GAA4B,CAAA;QAAA,CAAA,EAC5B,EAAA,GAAU,CAAA,CAAM,KAAA,CAAM,CAAA,GAAI,OAAA;QAEhC,GAAA,EAAA,GAAe,EAAH,CAAA,EAAG,EAAA,KAAO,EAAA,CACrB,CAAA,CAAI,EAAA,IAAM,CAAA,CACR,CAAA,GAAI,CAAA,GAAQ,CAAA,EACb,IAAA,CAAK,KAAA,CAAM,CAAA,GAAI,CAAA,IAAQ,CAAA;QAIzB,MAAO,CAAA,CACN;YAAA,GAAA,EAAK,CAAA;YACL,GAAA,EAAK,CAAA;YACL,EAAA,EAAI,CAAA;YACJ,EAAA,EAAI,CAAA;QAAA,CAAA;IAAA,CAzBG;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aA+BT,CAAA,CACC,CAAA,EACA,CAAA,EACA,CAAA,GAAkB,CAAA,CAAI,MAAA,EACtB,CAAA,GAAoB,CAAA,CAAI,SAAA,EACxB,CAAA,GAAmB,CAAA;IAAA,CAAA,EAClB,CAED;QAAA,CAAA,GAAM,CAAA,IAAA,IAAA,GAAA,CAAA,GAAO,CAAA,CAAI,MAAA,EACjB,CAAA,GAAS,CAAA,IAAA,IAAA,GAAA,CAAA,GAAU,CAAA,CAAI,SAAA,GAItB,CAAA,KAAQ,CAAA,CAAI,MAAA,IACT,CAAA,KAAW,CAAA,CAAI,SAAA,KACd,EAAA,CAAO,CAAA,CAAI,UAAA,EAAY,CAAA,KACxB,CAAA,CAAI,MAAA,CAAO,MAAA,GAAS,CAAA,CAAM,MAAA,GAAS,EAAA,GAAS,EAAA,IAC5C,CAAA,CAAI,MAAA,CAAO,MAAA,GAAS,CAAA,CAAQ,MAAA,GAAS,EAAA,KAExC,CAAA,IAGD,CAAA,CAAI,MAAA,GAAS,CAAA,EACb,CAAA,CAAI,SAAA,GAAY,CAAA,EAChB,CAAA,CAAI,UAAA,GAAa,CAAA,EAEjB,CAAA,CAAQ,OAAA,EAAQ,CAAC,GAAM,CACtB;YAAA,CAAA,CAAI,MAAA,CAAO,IAAA,CAAK,CAAA,GAAI,CAAA,CAAI,MAAA,CAAO,MAAA,GAAS,EAAA;QAAA,CAAA,GAGzC,CAAA,CAAM,OAAA,EAAS,CAAA,GAAM,CACpB;YAAA,GAAM,CAAA,CAAA,GAAK,CAAA,CAAM,CAAA,CAAI,SAAA,CAAU,QAAA,CAAS,CAAA,CAAE,GAAA,CAAI,EAAA;YAC9C,CAAA,CAAI,MAAA,CAAO,IAAA,CACV,CAAA,CAAG,CAAA,EAAG,CAAA,CAAG,CAAA,EAAG,CAAA,CAAE,GAAA,CAAI,CAAA,EAClB,CAAA,CAAE,EAAA,CAAG,CAAA,EAAG,CAAA,CAAE,EAAA,CAAG,CAAA,EACb,CAAA,CAAE,KAAA,CAAM,CAAA,GAAI,GAAA,EAAK,CAAA,CAAE,KAAA,CAAM,CAAA,GAAI,GAAA,EAAK,CAAA,CAAE,KAAA,CAAM,CAAA,GAAI,GAAA,EAAK,CAAA,CAAE,OAAA;QAAA,CAAA;IAAA,CAnC/C;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAyCT,CAAA,GAAiB,CAEhB;SACE,CAAA,CAAI,MAAA,KACD,CAAA,CAAI,SAAA,IACL,CAAA,CAAI,MAAA,CAAO,MAAA,KAAW,CAAA,IACtB,CAAA,CAAI,MAAA,CAAO,MAAA,KAAW,CAAA,KAK1B,CAAA,CAAI,SAAA,CAAU,IAAA,CAAK,CAAA,CAAI,UAAA,GAEvB,CAAA,CAAG,UAAA,CAAW,CAAA,CAAG,YAAA,EAAc,CAAA,CAAI,IAAA,GACnC,CAAA,CAAG,aAAA,CAAc,CAAA,CAAG,YAAA,EAAc,CAAA,EAAG,GAAI,CAAA,YAAA,CAAa,CAAA,CAAI,MAAA,IAC1D,CAAA,CAAG,UAAA,CAAW,CAAA,CAAG,oBAAA,EAAsB,CAAA,CAAI,IAAA,GAC3C,CAAA,CAAG,aAAA,CAAc,CAAA,CAAG,oBAAA,EAAsB,CAAA,EAAG,GAAI,CAAA,WAAA,CAAY,CAAA,CAAI,MAAA,IACjE,CAAA,CAAI,SAAA,CAAU,IAAA,IACd,CAAA,CAAI,SAAA,CAAU,WAAA,IACd,CAAA,CAAI,MAAA,CAAO,IAAA,IACX,CAAA,CAAG,YAAA,CAAa,CAAA,CAAG,SAAA,EAAW,CAAA,CAAI,MAAA,CAAO,MAAA,EAAQ,CAAA,CAAG,cAAA,EAAgB,CAAA,GACpE,CAAA,CAAI,MAAA,CAAO,MAAA,IACX,CAAA,CAAI,SAAA,CAAU,MAAA,IACd,CAAA,CAAG,UAAA,CAAW,CAAA,CAAG,YAAA,EAAc,IAAA,GAC/B,CAAA,CAAG,UAAA,CAAW,CAAA,CAAG,oBAAA,EAAsB,IAAA,GAEvC,CAAA,CAAI,MAAA,GAAS,CAAA,CAAA,EACb,CAAA,CAAI,MAAA,GAAS,CAAA,CAAA,EAEb,CAAA,CAAI,SAAA;IAAA,CA7BI;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAiCT,CAAA,GAAsB,CAErB;QAAA,CAAA,CAAG,KAAA,CAAM,CAAA,CAAG,gBAAA,GAEP,CAAA,CAAK,UAAA,IACT,CAAA,CAAW,CACV;YAAA,KAAA,EAAO,EAAA;YACP,MAAA,EAAQ,EAAA;YACR,IAAA,EAAM,EAAA,CACL,CAAA,EACA,CAAA,EACA,EAAA,KAAU,EAAA,KAAU,EAAA,EACpB,EAAA,KAAW,EAAA,KAAU,EAAA;YAEtB,GAAA,EAAK,CAAA,CAAI,KAAA;QAAA,CAAA,GAIX,CAAA,CAAI,SAAA,GAAY,CAAA,EAChB,CAAA,CAAI,cAAA,GAAiB,CAAA,CAAA,EACrB,CAAA,CAAI,SAAA,GAAY,EAAA;IAAA,CApBR;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAwBT,CAAA,GAAoB,CACnB;QAAA,CAAA,IACA,CAAA,CAAI,aAAA,GAAgB,CAAA,CAAI,SAAA;IAAA,CAFhB;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAKT,CAAA,GAAqB,CACpB;QAAA,MAAO,CAAA,CAAA,CAAI,aAAA;IAAA,CADH;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAIT,CAAA,CAAe,CAAA,EAAgB,CAC9B;QAAA,MAAO,CAAA,CAAA,CACN,CAAA,CAAG,CAAA,GAAI,EAAA,KAAU,CAAA,GAAI,CAAA,GACpB,CAAA,CAAG,CAAA,GAAI,EAAA,KAAW,CAAA,GAAI,CAAA;IAAA,CAHhB;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAOT,EAAA,CAAqB,CAAA,EAAS,CAC7B;QAAA,CAAA,CAAI,SAAA,GAAY,CAAA,CAAE,KAAA;IAAA,CADV;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAIT,CAAA,IAA0B,CAAA,EAAM,CAC/B;QAAA,EAAA,EAAI,CAAA,CAAK,CAAA,MAAO,IAAA,CAAA,CAAA,EAAW,MAAA;QAC3B,GAAM,CAAA,CAAA,GAAI,CAAA,IAAQ,CAAA;QAClB,CAAI,CAAE,CAAA,KAAM,CAAA,IAAK,CAAA,CAAE,CAAA,KAAM,CAAA,KACzB,CAAA,CAAI,SAAA,GAAY,CAAA,CAAI,SAAA,CAAU,SAAA,CAAU,CAAA;IAAA,CAJhC;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAOT,EAAA,IAAsB,CAAA,EAAM,CAC3B;QAAA,EAAA,EAAI,CAAA,CAAK,CAAA,MAAO,IAAA,CAAA,CAAA,EAAW,MAAA;QAC3B,GAAM,CAAA,CAAA,GAAI,CAAA,IAAQ,CAAA;QAClB,CAAI,CAAE,CAAA,KAAM,CAAA,IAAK,CAAA,CAAE,CAAA,KAAM,CAAA,KACzB,CAAA,CAAI,SAAA,GAAY,CAAA,CAAI,SAAA,CAAU,KAAA,CAAM,CAAA;IAAA,CAJ5B;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAOT,CAAA,CAAqB,CAAA,EAAW,CAC/B;SAAK,CAAA,KAGL,CAAA,CAAI,SAAA,GAAY,CAAA,CAAI,SAAA,CAAU,OAAA,CAAQ,CAAA;IAAA,CAJ9B;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAOT,EAAA,CAAqB,CAAA,EAAW,CAC/B;SAAK,CAAA,KAGL,CAAA,CAAI,SAAA,GAAY,CAAA,CAAI,SAAA,CAAU,OAAA,CAAQ,CAAA;IAAA,CAJ9B;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAOT,CAAA,CAAqB,CAAA,EAAW,CAC3B;SAAC,CAAA,KAGL,CAAA,CAAI,SAAA,GAAY,CAAA,CAAI,SAAA,CAAU,OAAA,CAAQ,CAAA;IAAA,CAJ9B;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAOT,EAAA,GAAyB,CACxB;QAAA,CAAA,CAAI,cAAA,CAAe,IAAA,CAAK,CAAA,CAAI,SAAA,CAAU,KAAA;IAAA,CAD9B;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAIT,CAAA,GAAwB,CACvB;QAAA,CAAI,CAAI,cAAA,CAAe,MAAA,GAAS,CAAA,KAC/B,CAAA,CAAI,SAAA,GAAY,CAAA,CAAI,cAAA,CAAe,GAAA;IAAA,CAF5B;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAOT,CAAA,CAAoB,CAAA,EAAoB,CAvmBzC;QAAA,GAAA,CAAA,CAAA;QAymBE,EAAA,EAAI,CAAA,CAAI,KAAA,KAAU,IAAA,CAAA,CAAA,IAAa,CAAA,CAAI,MAAA,KAAW,IAAA,CAAA,CAAA,EAC7C,KAAM,CAAA,GAAI,CAAA,KAAA,CAAM,CAAA;QAGjB,EAAA,EAAI,CAAA,CAAI,KAAA,IAAS,CAAA,IAAK,CAAA,CAAI,MAAA,IAAU,CAAA,EACnC,MAAA;QAGD,GAAM,CAAA,CAAA,GAAI,CAAA,CAAI,KAAA,EACR,CAAA,GAAI,CAAA,CAAI,MAAA,EAER,CAAA,GADS,EAAA,CAAS,CAAA,CAAI,MAAA,IAAU,EAAA,EAChB,KAAA,CAAM,CAAA,CAAK,CAAA,EAAG,CAAA,EAAG,KAAA,CAAM,IAAA,IACvC,CAAA,GAAI,CAAA,CAAI,IAAA,IAAQ,EAAA,CAAK,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,GAC9B,CAAA,GAAQ,CAAA,CAAI,KAAA,IAAS,CAAA,CAAI,GAAA,EAAK,GAAA,EAAK,GAAA,GACnC,CAAA,IAAU,CAAA,GAAA,CAAA,CAAI,OAAA,KAAJ,IAAA,GAAA,CAAA,GAAe,CAAA;QAE/B,EAAA,IACA,CAAA,CAAc,CAAA,CAAI,GAAA,GAClB,CAAA,CAAY,CAAA,CAAI,KAAA,GAChB,EAAA,CAAU,CAAA,CAAI,KAAA,GACd,CAAA,CAAc,CAAA,GAEd,CAAA,CAAQ,CACP;YAAA,CACC;gBAAA,GAAA,EAAK,EAAA,EAAM,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,CAAA,EAAG,CAAA;gBACzB,EAAA,EAAI,CAAA,CAAK,CAAA,CAAI,KAAA,GAAQ,CAAA,CAAE,CAAA,GAAI,CAAA,CAAE,CAAA,GAAI,CAAA,CAAE,CAAA,EAAG,CAAA,CAAI,KAAA,GAAQ,CAAA,CAAE,CAAA,GAAI,CAAA,CAAE,CAAA,GAAI,CAAA,CAAE,CAAA;gBAChE,KAAA,EAAO,CAAA;gBACP,OAAA,EAAS,CAAA;YAAA,CAAA;YAEV,CACC;gBAAA,GAAA,EAAK,EAAA,EAAM,CAAA,GAAI,CAAA,GAAI,CAAA,GAAI,CAAA,EAAG,CAAA;gBAC1B,EAAA,EAAI,CAAA,CAAK,CAAA,CAAI,KAAA,GAAQ,CAAA,CAAE,CAAA,GAAI,CAAA,CAAE,CAAA,GAAI,CAAA,CAAE,CAAA,EAAG,CAAA,CAAI,KAAA,GAAQ,CAAA,CAAE,CAAA,GAAI,CAAA,CAAE,CAAA,GAAI,CAAA,CAAE,CAAA;gBAChE,KAAA,EAAO,CAAA;gBACP,OAAA,EAAS,CAAA;YAAA,CAAA;YAEV,CACC;gBAAA,GAAA,EAAK,EAAA,CAAK,CAAA,GAAI,CAAA,GAAI,CAAA,GAAI,CAAA,EAAG,CAAA;gBACzB,EAAA,EAAI,CAAA,CAAK,CAAA,CAAI,KAAA,GAAQ,CAAA,CAAE,CAAA,GAAI,CAAA,CAAE,CAAA,GAAI,CAAA,CAAE,CAAA,EAAG,CAAA,CAAI,KAAA,GAAQ,CAAA,CAAE,CAAA,GAAI,CAAA,CAAE,CAAA,GAAI,CAAA,CAAE,CAAA;gBAChE,KAAA,EAAO,CAAA;gBACP,OAAA,EAAS,CAAA;YAAA,CAAA;YAEV,CACC;gBAAA,GAAA,EAAK,EAAA,CAAK,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,CAAA,EAAG,CAAA;gBACxB,EAAA,EAAI,CAAA,CAAK,CAAA,CAAI,KAAA,GAAQ,CAAA,CAAE,CAAA,GAAI,CAAA,CAAE,CAAA,GAAI,CAAA,CAAE,CAAA,EAAG,CAAA,CAAI,KAAA,GAAQ,CAAA,CAAE,CAAA,GAAI,CAAA,CAAE,CAAA,GAAI,CAAA,CAAE,CAAA;gBAChE,KAAA,EAAO,CAAA;gBACP,OAAA,EAAS,CAAA;YAAA,CAAA;QAAA,CAAA,EAER,CAAC;YAAA,CAAA;YAAG,CAAA;YAAG,CAAA;YAAG,CAAA;YAAG,CAAA;YAAG,CAAA;QAAA,CAAA,EAAI,CAAA,CAAI,GAAA,EAAK,CAAA,CAAI,MAAA,EAAQ,CAAA,CAAI,OAAA,GAEhD,CAAA;IAAA,CAnDQ;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAwDT,CAAA,CACC,CAAA,EACC,CAjqBH;QAAA,GAAA,CAAA,CAAA;QAmqBE,EAAA,GAAK,CAAA,CAAI,GAAA,EACR,KAAM,CAAA,GAAI,CAAA,KAAA,CAAM,CAAA;QAGjB,GAAM,CAAA,CAAA,IAAI,CAAA,GAAA,CAAA,CAAI,IAAA,KAAJ,IAAA,GAAA,CAAA,GAAY,EAAA,CAAK,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA,GAC9B,CAAA,GAAI,CAAA,CAAI,GAAA,CAAI,KAAA,GAAQ,CAAA,CAAE,CAAA,EACtB,CAAA,GAAI,CAAA,CAAI,GAAA,CAAI,MAAA,GAAS,CAAA,CAAE,CAAA,EACvB,CAAA,GAAQ,CAAA,CAAK,CAAA;QAEnB,EAAA,EAAI,CAAA,CAAI,KAAA,EAAO,CAGd;YAAA,GAAM,CAAA,CAAA,GAAO,IAAA,CAAK,IAAA,EAAM,CAAA,CAAI,KAAA,IAAS,CAAA,IAAK,CAAA,GACpC,CAAA,GAAO,IAAA,CAAK,IAAA,EAAM,CAAA,CAAI,MAAA,IAAU,CAAA,IAAK,CAAA,GAErC,EAAA,GADS,EAAA,CAAS,CAAA,CAAI,MAAA,IAAU,EAAA,EAAY,GAAA,CAAI,CAAA,CAAK,CAAA,EAAG,CAAA,GAAI,KAAA,CAAM,GAAA,EAClD,KAAA,CAAM,CAAA,GAAO,CAAA,EAAG,CAAA,GAAO,CAAA;YAG7C,GAAA,CAAA,GAAS,CAAA,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,CAAA,EAAM,CAAA,GACzB,GAAA,CAAA,GAAS,CAAA,EAAA,GAAI,CAAA,EAAG,EAAA,GAAI,CAAA,EAAM,EAAA,GACzB,CAAA,CAAW,EAAA,CAAA,EAAA,CAAA,CAAA;YAAA,CAAA,EACP,CAAA,GADO,CAEV;gBAAA,GAAA,GAAM,CAAA,CAAI,GAAA,IAAO,CAAA,CAAK,CAAA,GAAI,GAAA,CAAI,CAAA,CAAK,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,EAAA,GAAI,GAAA,CAAI,EAAA;gBAEtD,KAAA,EAAO,CAAA,CAAM,KAAA,CAAM,CAAA,CAAI,KAAA,IAAS,CAAA,CAAK,CAAA;gBACrC,GAAA,EAAK,CAAA,CAAI,GAAA;gBACT,IAAA,EAAM,CAAA;gBACN,KAAA,EAAO,CAAA;gBACP,MAAA,EAAQ,CAAA;gBACR,MAAA,EAAQ,CAAA;YAAA,CAAA;QAAA,CAAA,MAOP,CAAA,CAAI,KAAA,IAAS,CAAA,CAAI,MAAA,IACpB,CAAA,CAAM,CAAA,GAAI,CAAA,CAAI,KAAA,GAAQ,CAAA,EACtB,CAAA,CAAM,CAAA,GAAI,CAAA,CAAI,MAAA,GAAS,CAAA,IACjB,CAAI,CAAI,KAAA,IACd,CAAA,CAAM,CAAA,GAAI,CAAA,CAAI,KAAA,GAAQ,CAAA,EACtB,CAAA,CAAM,CAAA,GAAI,CAAA,CAAM,CAAA,IACN,CAAA,CAAI,MAAA,KACd,CAAA,CAAM,CAAA,GAAI,CAAA,CAAI,MAAA,GAAS,CAAA,EACvB,CAAA,CAAM,CAAA,GAAI,CAAA,CAAM,CAAA,GAGjB,CAAA,CAAW,EAAA,CAAA,EAAA,CAAA,CAAA;QAAA,CAAA,EACP,CAAA,GADO,CAGV;YAAA,KAAA,EAAO,CAAA,CAAM,KAAA,CAAM,CAAA,CAAI,KAAA,IAAS,CAAA,CAAK,CAAA;YACrC,GAAA,EAAK,CAAA,CAAI,GAAA;YACT,IAAA,EAAM,CAAA;YACN,KAAA,EAAO,CAAA;YACP,MAAA,EAAQ,CAAA;QAAA,CAAA;IAAA,CA1DF;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAkET,CAAA,CACC,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,GAAc,CAAA,EACL,CAGT;QAAA,CAAA,GAAQ,EAAA,CAAQ,CAAA,GAAQ,GAAA,GACxB,CAAA,GAAM,EAAA,CAAQ,CAAA,GAAM,GAAA,GAChB,CAAA,IAAO,CAAA,KAAO,CAAA,IAAO,IAAA,CAAK,EAAA,GAAK,CAAA;QAInC,GAAM,CAAA,CAAA,GAAS,IAAA,CAAK,IAAA,CAAK,IAAA,CAAK,GAAA,CAAI,IAAA,CAAK,IAAA,CAAK,CAAA,GAAU,CAAA,IAAW,CAAA,IAAK,CAAA,IAAO,CAAA,GAAI,EAAA,IAC3E,CAAA,IAAQ,CAAA,GAAM,CAAA,IAAS,CAAA,EACvB,CAAA,GAAM,CAAA,CAAA;QAGZ,GAAA,CAAA,GAAS,CAAA,EAAA,GAAI,CAAA,EAAO,EAAA,GAAI,CAAA,EAAK,EAAA,IAAK,CAAA,CACjC,CAAA,CAAI,IAAA,CAAK,CAAA,CAAI,GAAA,CAAI,CAAA,GAAU,IAAA,CAAK,GAAA,CAAI,EAAA,GAAI,CAAA,GAAU,IAAA,CAAK,GAAA,CAAI,EAAA;QAI5D,MAAA,CAAA,CAAA,CAAI,IAAA,CAAK,CAAA,CAAI,GAAA,CAAI,CAAA,GAAU,IAAA,CAAK,GAAA,CAAI,CAAA,GAAM,CAAA,GAAU,IAAA,CAAK,GAAA,CAAI,CAAA,KAEtD,CAAA;IAAA,CA5BC;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAgCT,CAAA,CAAkB,CAAA,EAAkB,CAEnC;QAAA,EAAA,EAAI,CAAA,CAAI,KAAA,KAAU,IAAA,CAAA,CAAA,IAAa,CAAA,CAAI,MAAA,KAAW,IAAA,CAAA,CAAA,EAC7C,KAAM,CAAA,GAAI,CAAA,KAAA,CAAM,CAAA;QAGjB,EAAA,EAAI,CAAA,CAAI,KAAA,IAAS,CAAA,IAAK,CAAA,CAAI,MAAA,IAAU,CAAA,EACnC,MAAA;QAGD,GAAM,CAAA,CAAA,GAAI,CAAA,CAAI,KAAA,EACR,CAAA,GAAI,CAAA,CAAI,MAAA,EAER,CAAA,GAAS,EADA,CAAS,CAAA,CAAI,MAAA,IAAU,EAAA,EAAY,GAAA,CAAI,CAAA,EAAG,CAAA,EACnC,KAAA,CAAM,CAAA,CAAK,CAAA,EAAG,CAAA,EAAG,KAAA,CAAM,IAAA,IAEzC,CAAA,GAAM,CACT;YAAA,CAAA,CAAK,CAAA,EAAG,CAAA;YACR,CAAA,CAAK,CAAA,EAAG,CAAA;YACR,CAAA,CAAK,CAAA,EAAG,CAAA;YACR,CAAA,CAAK,CAAA,EAAG,CAAA;QAAA,CAAA;QAIT,EAAA,EAAI,CAAA,CAAI,MAAA,EAAQ,CAGf;YAAA,GAAM,CAAA,CAAA,GAAI,IAAA,CAAK,GAAA,CAAI,IAAA,CAAK,GAAA,CAAI,CAAA,EAAG,CAAA,IAAK,CAAA,EAAG,CAAA,CAAI,MAAA;YAE3C,CAAA,GAAM,CACL;gBAAA,CAAA,CAAK,CAAA,EAAG,CAAA;gBACR,CAAA,CAAK,CAAA,GAAI,CAAA,EAAG,CAAA;mBACT,CAAA,CAAU,CAAA,CAAK,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,CAAA,EAAG,CAAA,EAAG,GAAA,EAAK,GAAA;gBACxC,CAAA,CAAK,CAAA,EAAG,CAAA;gBACR,CAAA,CAAK,CAAA,EAAG,CAAA,GAAI,CAAA;mBACT,CAAA,CAAU,CAAA,CAAK,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,CAAA,GAAI,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,EAAA;gBAC1C,CAAA,CAAK,CAAA,GAAI,CAAA,EAAG,CAAA;gBACZ,CAAA,CAAK,CAAA,EAAG,CAAA;mBACL,CAAA,CAAU,CAAA,CAAK,CAAA,EAAG,CAAA,GAAI,CAAA,GAAI,CAAA,EAAG,CAAA,EAAG,EAAA,EAAI,GAAA;gBACvC,CAAA,CAAK,CAAA,EAAG,CAAA,GAAI,CAAA;gBACZ,CAAA,CAAK,CAAA,EAAG,CAAA;mBACL,CAAA,CAAU,CAAA,CAAK,CAAA,EAAG,CAAA,GAAI,CAAA,EAAG,CAAA,EAAG,GAAA,EAAK,GAAA;YAAA,CAAA;QAAA,CAKtC;QAAA,EAAA,CAAY,EAAA,CAAA,EAAA,CAAA,CAAA;QAAA,CAAA,EAAK,CAAA,GAAL,CAAU;YAAA,MAAA,EAAA,CAAA;YAAQ,GAAA,EAAA,CAAA;QAAA,CAAA;IAAA,CA7CtB;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAiDT,CAAA,CAAkB,CAAA,EAAkB,CAEnC;QAAA,GAEA,CAFM,CAAE,CAAA,EAAA,EAAA,CAAA,GAAI,EAAA,EAAA,CAAA,EAAA,CAAA,GAAO,CAAA;QAEnB,EAAA,GAAK,CAAA,KAAO,CAAA,EACX,KAAM,CAAA,GAAI,CAAA,KAAA,CAAM,CAAA;QAGjB,GAAM,CAAA,CAAA,GAAI,CAAA,CAAI,KAAA,IAAS,CAAA,EAGjB,CAAA,GAAM,CAAA,CAAG,GAAA,CAAI,CAAA,EAAI,IAAA,GAAO,MAAA,GAAS,KAAA,CAAM,CAAA,GAAI,GAAA,GAG3C,CAAA,GAAQ,CACb;YAAA,CAAA,CAAG,GAAA,CAAI,CAAA;YACP,CAAA,CAAG,GAAA,CAAI,CAAA;YACP,CAAA,CAAG,GAAA,CAAI,CAAA;YACP,CAAA,CAAG,GAAA,CAAI,CAAA;QAAA,CAAA,CACN,GAAA,EAAI,CAAC,GAAG,CAr0BZ;YAAA,GAAA,CAAA,CAAA,EAAA,CAAA;YAq0BgB,MAAA,CAAA,CACb;gBAAA,GAAA,EAAK,EAAA,CAAK,CAAA,CAAE,CAAA,EAAG,CAAA,CAAE,CAAA,EAAG,CAAA;gBACpB,EAAA,EAAI,CAAA,CAAK,CAAA;gBACT,KAAA,GAAO,CAAA,GAAA,CAAA,CAAI,KAAA,KAAJ,IAAA,GAAA,CAAA,GAAa,CAAA;gBACpB,OAAA,GAAS,CAAA,GAAA,CAAA,CAAI,OAAA,KAAJ,IAAA,GAAA,CAAA,GAAe,CAAA;YAAA,CAAA;QAAA,CAAA;QAGzB,CAAA,CAAQ,CAAA,EAAO,CAAC;YAAA,CAAA;YAAG,CAAA;YAAG,CAAA;YAAG,CAAA;YAAG,CAAA;YAAG,CAAA;QAAA,CAAA,EAAI,CAAA,CAAI,MAAA,EAAQ,CAAA,CAAI,MAAA,EAAQ,CAAA,CAAI,OAAA;IAAA,CA1BvD;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aA8BT,CAAA,CAAmB,CAAA,EAAmB,CAErC;QAAA,GAAM,CAAA,CAAA,GAAM,CAAA,CAAI,GAAA;QAEhB,EAAA,GAAK,CAAA,EACJ,KAAM,CAAA,GAAI,CAAA,KAAA,CAAM,CAAA;QAGjB,EAAA,IAAI,CAAA,CAAI,MAAA,GAAS,CAAA;YAIjB,EAAA,EAAI,CAAA,CAAI,MAAA,IAAU,CAAA,CAAI,MAAA,IAAU,CAAA,EAAG,CAGlC;gBAAA,GAAI,CAAA,CAAA,GAAS,CAAA,CAAI,CAAA,EAAG,IAAA,CAAK,CAAA,CAAI,CAAA;gBAE7B,GAAA,CAAA,GAAS,CAAA,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,CAAA,CAAI,MAAA,GAAS,CAAA,EAAG,CAAA,GACnC,CAAA,GAAS,IAAA,CAAK,GAAA,CAAI,CAAA,CAAI,CAAA,EAAG,IAAA,CAAK,CAAA,CAAI,CAAA,GAAI,CAAA,IAAK,CAAA;gBAG5C,GAAM,CAAA,CAAA,GAAS,IAAA,CAAK,GAAA,CAAI,CAAA,CAAI,MAAA,EAAQ,CAAA,GAAS,CAAA;gBAE7C,CAAA,CAAS,EAAA,CAAA,EAAA,CAAA,CAAA;gBAAA,CAAA,EAAK,CAAA,GAAL,CAAU;oBAAA,EAAA,EAAI,CAAA,CAAI,CAAA;oBAAI,EAAA,EAAI,CAAA,CAAI,CAAA;gBAAA,CAAA;gBAEvC,GAAA,CAAA,GAAS,CAAA,EAAA,GAAI,CAAA,EAAG,EAAA,GAAI,CAAA,CAAI,MAAA,GAAS,CAAA,EAAG,EAAA,GAAK,CACxC;oBAAA,GAAM,CAAA,CAAA,GAAK,CAAA,CAAI,EAAA,GACT,CAAA,GAAK,CAAA,CAAI,EAAA,GAAI,CAAA;oBACnB,CAAA,CAAS,EAAA,CAAA,EAAA,CAAA,CAAA;oBAAA,CAAA,EACL,CAAA,GADK,CAER;wBAAA,EAAA,EAAI,CAAA;wBACJ,EAAA,EAAI,CAAA;oBAAA,CAAA;gBAAA,CAIN;gBAAA,CAAA,CAAS,EAAA,CAAA,EAAA,CAAA,CAAA;gBAAA,CAAA,EAAK,CAAA,GAAL,CAAU;oBAAA,EAAA,EAAI,CAAA,CAAI,CAAA,CAAI,MAAA,GAAS,CAAA;oBAAI,EAAA,EAAI,CAAA,CAAI,CAAA,CAAI,MAAA,GAAS,CAAA;gBAAA,CAAA;YAAA,CAAA,MAIjE,GAAA,CAAA,GAAS,CAAA,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,CAAA,CAAI,MAAA,GAAS,CAAA,EAAG,CAAA,GACnC,CAAA,CAAS,EAAA,CAAA,EAAA,CAAA,CAAA;YAAA,CAAA,EACL,CAAA,GADK,CAER;gBAAA,EAAA,EAAI,CAAA,CAAI,CAAA;gBACR,EAAA,EAAI,CAAA,CAAI,CAAA,GAAI,CAAA;YAAA,CAAA;;IAAA,CA3CP;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAmDT,CAAA,CAAsB,CAAA,EAAsB,CAC3C;QAAA,EAAA,GAAK,CAAA,CAAI,EAAA,KAAO,CAAA,CAAI,EAAA,KAAO,CAAA,CAAI,EAAA,EAC9B,KAAM,CAAA,GAAI,CAAA,KAAA,CAAM,CAAA;QAEjB,MAAO,CAAA,EAAA,CAAY,EAAA,CAAA,EAAA,CAAA,CAAA;QAAA,CAAA,EACf,CAAA,GADe,CAElB;YAAA,GAAA,EAAK,CAAC;gBAAA,CAAA,CAAI,EAAA;gBAAI,CAAA,CAAI,EAAA;gBAAI,CAAA,CAAI,EAAA;YAAA,CAAA;QAAA,CAAA;IAAA,CANnB;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAWT,CAAA,CAAoB,CAAA,EAAoB,CAEvC;QAAA,EAAA,GAAK,CAAA,CAAI,MAAA,EACR,KAAM,CAAA,GAAI,CAAA,KAAA,CAAM,CAAA;QAGjB,CAAI,CAAI,MAAA,KAAW,CAAA,IAInB,CAAA,CAAY,EAAA,CAAA,EAAA,CAAA,CAAA;QAAA,CAAA,EACR,CAAA,GADQ,CAEX;YAAA,OAAA,EAAS,CAAA,CAAI,MAAA;YACb,OAAA,EAAS,CAAA,CAAI,MAAA;YACb,KAAA,EAAO,CAAA;QAAA,CAAA;IAAA,CAdA;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAoBT,CAAA,CAAqB,CAAA,EAAqB,CAl6B3C;QAAA,GAAA,CAAA,CAAA,EAAA,CAAA;QAo6BE,EAAA,EAAI,CAAA,CAAI,OAAA,KAAY,IAAA,CAAA,CAAA,IAAa,CAAA,CAAI,OAAA,KAAY,IAAA,CAAA,CAAA,EAChD,KAAM,CAAA,GAAI,CAAA,KAAA,CAAM,CAAA;QAGb,CAAA,CAAI,OAAA,KAAY,CAAA,IAAK,CAAA,CAAI,OAAA,KAAY,CAAA,IAIzC,EAAA,CAAY,EAAA,CAAA,EAAA,CAAA,CAAA;QAAA,CAAA,EACR,CAAA,GADQ,CAEX;YAAA,GAAA,EAAK,CAAA,CACJ,CAAA,CAAK,CAAA,GACL,CAAA,CAAI,OAAA,EACJ,CAAA,CAAI,OAAA,GACJ,CAAA,GAAA,CAAA,CAAI,KAAA,KAAJ,IAAA,GAAA,CAAA,GAAa,CAAA,GACb,CAAA,GAAA,CAAA,CAAI,GAAA,KAAJ,IAAA,GAAA,CAAA,GAAW,GAAA,EACX,CAAA,CAAI,UAAA;YAEL,MAAA,EAAQ,CAAA;QAAA,CAAA;IAAA,CApBD;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAyBT,EAAA,CAAqB,CAAA,EAAqB,CA37B3C;QAAA,GAAA,CAAA,CAAA,EAAA,CAAA;QA67BE,EAAA,GAAK,CAAA,CAAI,GAAA,EACR,KAAM,CAAA,GAAI,CAAA,KAAA,CAAM,CAAA;QAGjB,GAAM,CAAA,CAAA,GAAO,CAAA,CAAI,GAAA,CAAI,MAAA;QAErB,EAAA,IAAI,CAAA,GAAO,CAAA,GAUX,CAAA;YAAA,EAAA,EANA,EAAA,IACA,CAAA,CAAc,CAAA,CAAI,GAAA,GAClB,EAAA,CAAU,CAAA,CAAI,KAAA,GACd,CAAA,CAAY,CAAA,CAAI,KAAA,GAChB,CAAA,CAAc,CAAA,CAAI,MAAA,GAEd,CAAA,CAAI,IAAA,MAAS,CAAA,EAAO,CAEvB;gBAAA,GAAM,CAAA,CAAA,IAAQ,CAAA,GAAA,CAAA,CAAI,KAAA,KAAJ,IAAA,GAAA,CAAA,GAAa,CAAA,IAErB,CAAA,GAAQ,CAAA,CAAI,GAAA,CAAI,GAAA,EAAI,CAAC,GAAI,CAj9BlC;oBAAA,GAAA,CAAA,CAAA;oBAi9BsC,MAAA,CAAA,CAClC;wBAAA,GAAA,EAAK,EAAA,CAAK,CAAA,CAAG,CAAA,EAAG,CAAA,CAAG,CAAA,EAAG,CAAA;wBACtB,EAAA,EAAI,CAAA,CAAK,CAAA,EAAG,CAAA;wBACZ,KAAA,EAAO,CAAA;wBACP,OAAA,GAAS,CAAA,GAAA,CAAA,CAAI,OAAA,KAAJ,IAAA,GAAA,CAAA,GAAe,CAAA;oBAAA,CAAA;gBAAA,CAAA,GAInB,CAAA,GAAU,CAAC;uBAAG,KAAA,CAAM,CAAA,GAAO,CAAA,EAAG,IAAA;gBAAA,CAAA,CAClC,GAAA,EAAK,CAAA,GAAM,CAAC;wBAAA,CAAA;wBAAG,CAAA,GAAI,CAAA;wBAAG,CAAA,GAAI,CAAA;oBAAA,CAAA;kBAC1B,IAAA;gBAEF,CAAA,CAAQ,CAAA,GAAO,CAAA,GAAA,CAAA,CAAI,OAAA,KAAJ,IAAA,GAAA,CAAA,GAAe,CAAA,EAAS,CAAA,CAAI,MAAA,EAAQ,CAAA,CAAI,MAAA,EAAQ,CAAA,CAAI,OAAA;YAAA,CAIpE;YAAA,CAAI,CAAI,OAAA,IACP,CAAA,CAAU,CACT;gBAAA,GAAA,EAAK,CAAE;uBAAG,CAAA,CAAI,GAAA;oBAAK,CAAA,CAAI,GAAA,CAAI,CAAA;gBAAA,CAAA;gBAC3B,MAAA,EAAQ,CAAA,CAAI,MAAA;gBACZ,KAAA,EAAO,CAAA,CAAI,OAAA,CAAQ,KAAA;gBACnB,KAAA,EAAO,CAAA,CAAI,OAAA,CAAQ,KAAA;YAAA,CAAA,GAIrB,CAAA;QAAA,CAAA;IAAA,CA/CQ;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAoDT,CAAA,CAAiB,CAAA,EAAkC,CAElD;QAAA,EAAA,EAAI,CAAA,CAAI,IAAA,KAAS,IAAA,CAAA,CAAA,EAChB,KAAM,CAAA,GAAI,CAAA,KAAA,CAAM,CAAA;QAGjB,GAAM,CAAA,CAAA,GAAO,CAAA,CAAI,IAAA,EACX,CAAA,IAAS,CAAA,CAAI,IAAA,GAAO,CAAA,GAAI,KAAA,CAAM,CAAA,IAC9B,CAAA,GAAK,CAAA,CAAK,EAAA,GAAK,CAAA,CAAK,GAAA,CAAI,KAAA,EACxB,CAAA,GAAK,CAAA,CAAK,EAAA,GAAK,CAAA,CAAK,GAAA,CAAI,MAAA,EACxB,CAAA,GAAO,CAAA,CAAI,IAAA,IAAQ,CAAA,EACnB,CAAA,GAAQ,CAAA,CAAK,CAAA,GAAO,CAAA,EAAI,KAAA,CAAM,CAAA,CAAK,CAAA,CAAI,KAAA,IAAS,CAAA,IAChD,CAAA,GAAK,CAAA,CAAM,CAAA,GAAI,CAAA,EACf,CAAA,GAAK,CAAA,CAAM,CAAA,GAAI,CAAA,EACjB,EAAA,GAAO,CAAA,EACP,CAAA,GAAK,CAAA,EACL,EAAA,GAAK,CAAA,EACH,EAAA,GAAS,CAAA,CAAA,EACX,EAAA,GAAU,CAAA,CAAA,EACV,EAAA,GAAY,IAAA,EACZ,EAAA,GAAS,CAAA;QAEb,GAAA,GAAO,EAAA,GAAS,CAAA,CAAM,MAAA,EAAQ,CAE7B;YAAA,GAAI,CAAA,EAAA,GAAO,CAAA,CAAM,EAAA;YAGjB,EAAI,MA1pBQ,CA0pBC,KAEZ,CAAA,IAAM,CAAA,EACN,EAAA,GAAO,CAAA,EACP,EAAA,GAAY,IAAA,EACZ,EAAA,CAAO,IAAA,CAAK,EAAA,GACZ,EAAA,GAAU,CAAA,CAAA,KACC,CAAA,CAAI,KAAA,GAAS,EAAA,GAAO,CAAA,GAAK,CAAA,CAAI,KAAA,IAAS,CAAA,MAEjD,CAAA,IAAM,CAAA,EACN,EAAA,GAAO,CAAA,EACH,EAAA,IAAa,IAAA,KAChB,EAAA,IAAU,EAAA,CAAQ,MAAA,GAAS,EAAA,EAC3B,EAAA,GAAO,CAAA,CAAM,EAAA,GACb,EAAA,GAAU,EAAA,CAAQ,KAAA,CAAM,CAAA,EAAG,EAAA,IAE5B,EAAA,GAAY,IAAA,EACZ,EAAA,CAAO,IAAA,CAAK,EAAA,GACZ,EAAA,GAAU,CAAA,CAAA,GAIP,EAAA,MAtBS,CAsBA,MACZ,EAAA,CAAQ,IAAA,CAAK,EAAA,GACb,EAAA,IAAQ,CAAA,EACJ,EAAA,KAAS,CAAA,OACZ,EAAA,GAAY,EAAA,CAAQ,MAAA,IAItB,EAAA,GAAK,IAAA,CAAK,GAAA,CAAI,EAAA,EAAI,EAAA,GAClB,EAAA;QAAA,CAID;QAAA,EAAA,CAAO,IAAA,CAAK,EAAA,GAER,CAAA,CAAI,KAAA,KACP,EAAA,GAAK,CAAA,CAAI,KAAA;QAIV,GAAM,CAAA,EAAA,GAAS,CAAA,CAAA,EACT,EAAA,GAAM,CAAA,CAAK,CAAA,CAAI,GAAA,IAAO,CAAA,GACtB,EAAA,GAAS,EAAA,CAAS,CAAA,CAAI,MAAA,IAAU,EAAA,EAAY,KAAA,CAAM,GAAA,GAElD,EAAA,IAAM,EAAA,CAAO,CAAA,GAAI,CAAA,IAAM,EAAA,CAAO,CAAA,GAAI,GAAA,KAAQ,EAAA,GAAK,CAAA,GAC/C,EAAA,IAAM,EAAA,CAAO,CAAA,GAAI,CAAA,IAAM,EAAA,CAAO,CAAA,GAAI,GAAA,KAAQ,CAAA,GAAK,CAAA,GACjD,EAAA,GAAM,CAAA;QAEV,MAAA,CAAA,EAAA,CAAO,OAAA,EAAS,EAAA,EAAM,EAAA,GAAO,CAG5B;YAAA,GAAM,CAAA,EAAA,IAAO,EAAA,GAAK,EAAA,CAAK,MAAA,GAAS,CAAA,KAAO,EAAA,CAAO,CAAA,GAAI,GAAA;YAElD,EAAA,CAAK,OAAA,EAAS,EAAA,EAAM,EAAA,GAAO,CAjkC9B;gBAAA,GAAA,CAAA,EAAA,EAAA,EAAA;gBAkkCI,GAAM,CAAA,EAAA,GAAO,CAAA,CAAK,GAAA,CAAI,EAAA,GAChB,EAAA,GAAI,EAAA,GAAK,CAAA,EACT,EAAA,GAAI,EAAA,GAAK,CAAA;gBAEf,EAAA,EADA,EAAA,IAAO,CAAA,EACH,EAAA,EAAM,CACT;oBAAA,GAAM,CAAA,EAAA,GAAQ,CACb;wBAAA,GAAA,EAAK,CAAA,CAAK,GAAA;wBACV,IAAA,EAAM,EAAA,CAAK,EAAA,CAAK,CAAA,EAAG,EAAA,CAAK,CAAA,EAAG,CAAA,CAAK,EAAA,EAAI,CAAA,CAAK,EAAA;wBACzC,EAAA,EAAI,EAAA;wBACJ,GAAA,EAAK,CAAA,CAAK,EAAA,CAAI,CAAA,GAAI,EAAA,GAAI,EAAA,GAAK,EAAA,EAAK,EAAA,CAAI,CAAA,GAAI,EAAA,GAAI,EAAA;wBAC5C,OAAA,EAAS,CAAA,CAAI,OAAA;wBACb,KAAA,GAAO,EAAA,GAAA,CAAA,CAAI,KAAA,KAAJ,IAAA,GAAA,EAAA,GAAa,CAAA,CAAI,GAAA,EAAK,GAAA,EAAK,GAAA;wBAClC,MAAA,EAAQ,CAAA,CAAI,MAAA;wBACZ,KAAA,EAAO,CAAA;wBACP,KAAA,EAAO,CAAA;oBAAA,CAAA;oBAER,EAAA,EAAI,CAAA,CAAI,SAAA,EAAW,CAClB;wBAAA,GAAM,CAAA,EAAA,IAAK,EAAA,GAAA,CAAA,CAAI,SAAA,CAAU,EAAA,EAAK,EAAA,MAAnB,IAAA,GAAA,EAAA,GAA4B,CAAA;wBAAA,CAAA;wBACnC,EAAA,CAAG,GAAA,KAAK,EAAA,CAAM,GAAA,GAAM,EAAA,CAAM,GAAA,CAAI,GAAA,CAAI,EAAA,CAAG,GAAA,IACrC,EAAA,CAAG,KAAA,KAAO,EAAA,CAAM,KAAA,GAAQ,EAAA,CAAM,KAAA,CAAM,KAAA,CAAM,CAAA,CAAK,EAAA,CAAG,KAAA,KAClD,EAAA,CAAG,KAAA,KAAO,EAAA,CAAM,KAAA,IAAS,EAAA,CAAG,KAAA,GAC5B,EAAA,CAAG,KAAA,KAAO,EAAA,CAAM,KAAA,GAAQ,EAAA,CAAM,KAAA,CAAM,IAAA,CAAK,EAAA,CAAG,KAAA,IAC5C,EAAA,CAAG,OAAA,KAAS,EAAA,CAAM,OAAA,IAAW,EAAA,CAAG,OAAA;oBAAA,CAErC;oBAAA,EAAA,CAAO,IAAA,CAAK,EAAA;gBAAA,CAAA;YAAA,CAAA;QAAA,CAAA,GAKR,CACN;YAAA,KAAA,EAAO,EAAA;YACP,MAAA,EAAQ,CAAA;YACR,KAAA,EAAO,EAAA;QAAA,CAAA;IAAA,CAnHA;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAwHT,CAAA,CAAkB,CAAA,EAAmB,CACpC;QAAA,EAAA,CAAY,CAAA,CAAQ,CAAA;IAAA,CADZ;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAKT,EAAA,CAAqB,CAAA,EAAsB,CAC1C;QAAA,GAAA,EAAA,GAAW,CAAA,CAAA,IAAM,CAAA,CAAM,KAAA,CACtB,CAAA,CAAW,CACV;YAAA,GAAA,EAAK,CAAA,CAAG,GAAA;YACR,KAAA,EAAO,CAAA,CAAG,GAAA,CAAI,KAAA,GAAQ,CAAA,CAAG,IAAA,CAAK,CAAA;YAC9B,MAAA,EAAQ,CAAA,CAAG,GAAA,CAAI,MAAA,GAAS,CAAA,CAAG,IAAA,CAAK,CAAA;YAChC,GAAA,EAAK,CAAA,CAAG,GAAA;YACR,KAAA,EAAO,CAAA,CAAG,KAAA;YACV,KAAA,EAAO,CAAA,CAAG,KAAA;YACV,KAAA,EAAO,CAAA,CAAG,KAAA;YACV,OAAA,EAAS,CAAA,CAAG,OAAA;YACZ,IAAA,EAAM,CAAA,CAAG,IAAA;YAET,MAAA,EAAQ,CAAA;QAAA,CAAA;IAAA,CAbF;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAoBT,EAAA,GAAsB,CACrB;QAAA,EAAA,EAAI,CAAA,CAAK,KAAA,IAAS,CAAA,CAAK,MAAA,IAAU,CAAA,CAAK,OAAA;YACrC,EAAA,EAAI,CAAA,CAAK,SAAA,EAAW,CAEnB;gBAAA,GAAM,CAAA,CAAA,GAAK,CAAA,CAAG,kBAAA,GAAqB,CAAA,CAAG,mBAAA,EAChC,CAAA,GAAK,CAAA,CAAK,KAAA,GAAQ,CAAA,CAAK,MAAA;gBAC7B,EAAA,EAAI,CAAA,GAAK,CAAA,EAAI,CACZ;oBAAA,CAAA,CAAI,KAAA,GAAQ,CAAA,CAAK,MAAA,GAAS,CAAA,EAC1B,CAAA,CAAI,MAAA,GAAS,CAAA,CAAK,MAAA;oBAClB,GAAM,CAAA,CAAA,GAAK,CAAA,CAAG,mBAAA,GAAsB,CAAA,EAC9B,CAAA,GAAK,CAAA,CAAG,mBAAA,EACR,CAAA,IAAK,CAAA,CAAG,kBAAA,GAAqB,CAAA,IAAM,CAAA;oBACzC,CAAA,CAAG,OAAA,CAAQ,CAAA,EAAG,CAAA,EAAG,CAAA,EAAI,CAAA,GACrB,CAAA,CAAG,QAAA,CAAS,CAAA,EAAG,CAAA,EAAG,CAAA,CAAG,kBAAA,EAAoB,CAAA,CAAG,mBAAA;gBAAA,CAAA,MACtC,CACN;oBAAA,CAAA,CAAI,KAAA,GAAQ,CAAA,CAAK,KAAA,EACjB,CAAA,CAAI,MAAA,GAAS,CAAA,CAAK,KAAA,GAAQ,CAAA;oBAC1B,GAAM,CAAA,CAAA,GAAK,CAAA,CAAG,kBAAA,EACR,CAAA,GAAK,CAAA,CAAG,kBAAA,GAAqB,CAAA,EAC7B,CAAA,IAAK,CAAA,CAAG,mBAAA,GAAsB,CAAA,IAAM,CAAA;oBAC1C,CAAA,CAAG,OAAA,CAAQ,CAAA,EAAG,CAAA,CAAG,mBAAA,GAAsB,CAAA,GAAK,CAAA,EAAG,CAAA,EAAI,CAAA,GACnD,CAAA,CAAG,QAAA,CAAS,CAAA,GAAI,CAAA,EAAG,CAAA,CAAG,kBAAA,EAAoB,CAAA,CAAG,mBAAA;gBAAA,CAAA;YAAA,CAAA,MAG9C,CAAA,CAAI,KAAA,GAAQ,CAAA,CAAK,KAAA,EACjB,CAAA,CAAI,MAAA,GAAS,CAAA,CAAK,MAAA,EAClB,CAAA,CAAG,QAAA,CAAS,CAAA,EAAG,CAAA,EAAG,CAAA,CAAG,kBAAA,EAAoB,CAAA,CAAG,mBAAA;eAG7C,CAAA,CAAI,KAAA,GAAQ,CAAA,CAAG,kBAAA,GAAqB,EAAA,IACpC,CAAA,CAAI,MAAA,GAAS,CAAA,CAAG,mBAAA,GAAsB,EAAA,IACtC,CAAA,CAAG,QAAA,CAAS,CAAA,EAAG,CAAA,EAAG,CAAA,CAAG,kBAAA,EAAoB,CAAA,CAAG,mBAAA;IAAA,CA/BrC;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAoCT,EAAA,GAAyB,CACxB;QAAA,MAAO,CAAA,CAAA,CAAI,KAAA;IAAA,CADH;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAKT,EAAA,GAA0B,CACzB;QAAA,MAAO,CAAA,CAAA,CAAI,MAAA;IAAA,CADH;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAIT,EAAA,GAAyB,CA7qC1B;QAAA,GAAA,CAAA,CAAA;QA8qCE,MAAO,EAAA,CAAA,GAAA,CAAA,CAAK,KAAA,KAAL,IAAA,GAAA,CAAA,GAAc,CAAA;IAAA,CADb;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAIT,EAAA,GAA6B,CAC5B;QAAA,MAAO,CAAA,CAAA,CAAI,UAAA,CAAW,KAAA;IAAA,CADd;IAAA,MAAA,CAAA,CAAA,CAAA,EAAA,EAAA,CAAA,cAIT,EAAA,IACA,CAAA,IACA,CAAA,IAEO,CACN;QAAA,KAAA,EAAA,EAAA;QACA,MAAA,EAAA,EAAA;QACA,KAAA,EAAA,EAAA;QACA,OAAA,EAAA,CAAA;QACA,UAAA,EAAA,CAAA;QACA,QAAA,EAAA,CAAA;QACA,WAAA,EAAA,CAAA;QACA,QAAA,EAAA,CAAA;QACA,WAAA,EAAA,EAAA;QACA,QAAA,EAAA,CAAA;QACA,QAAA,EAAA,CAAA;QACA,SAAA,EAAA,CAAA;QACA,YAAA,EAAA,CAAA;QACA,UAAA,EAAA,CAAA;QACA,WAAA,EAAA,CAAA;QACA,WAAA,EAAA,EAAA;QACA,UAAA,EAAA,CAAA;QACA,OAAA,EAAA,CAAA;QACA,UAAA,EAAA,CAAA;QACA,QAAA,EAAA,CAAA;QACA,aAAA,EAAA,CAAA;QACA,SAAA,EAAA,EAAA;QACA,WAAA,EAAA,CAAA;QACA,WAAA,EAAA,EAAA;QACA,WAAA,EAAA,CAAA;QACA,aAAA,EAAA,EAAA;QACA,YAAA,EAAA,CAAA;QACA,WAAA,EAAA,EAAA;QACA,SAAA,EAAA,CAAA;QACA,UAAA,EAAA,EAAA;IAAA,CAAA;AAAA,CAz/BO;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SC3IT,EAAA,CAAyB,CAAA,EAA6B,CACrD;IAAA,MAAI,CAAA,CAAA,KAAM,CAAA,YAAa,CAAA,KAAM,CAAA,YACrB,CAAA,QAEJ,CAAA,KAAM,CAAA,YACF,CAAA,MAED,CAAA;AAAA,CAPC;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAUT,EAAA,CAAyB,CAAA,EAAiB,CACzC;IAAA,CAAI,CAAG,iBAAA,GAAmB,CAAA,CAAG,iBAAA,KAEpB,CAAA,CAAG,uBAAA,IAAyB,CAAA,CAAG,uBAAA;AAAA,CAHhC;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAMT,EAAA,GAA0B,CACzB;IAAA,QAAI,CAAS,cAAA,GAAgB,QAAA,CAAS,cAAA,KAE7B,QAAA,CAAS,oBAAA,IAAsB,QAAA,CAAS,oBAAA;AAAA,CAHzC;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAMT,EAAA,GAAgD,CAC/C;IAAA,MAAO,CAAA,QAAA,CAAS,iBAAA,IAEZ,QAAA,CAAS,uBAAA;AAAA,CAHL;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAOT,EAAA,CAAiB,CAAA,GAAe,CAAA;AAAA,CAAA,EAAS,CAhHzC;IAAA,GAAA,CAAA,CAAA,EAAA,CAAA,EAAA,EAAA;IAkHI,GAAM,CAAA,CAAA,IAAO,CAAA,GAAA,CAAA,CAAK,IAAA,KAAL,IAAA,GAAA,CAAA,GAAa,QAAA,CAAS,IAAA;IAEtC,CAAI,KAAS,QAAA,CAAS,IAAA,KACrB,QAAA,CAAS,IAAA,CAAK,KAAA,CAAM,KAAA,GAAW,CAAA,OAC/B,QAAA,CAAS,IAAA,CAAK,KAAA,CAAM,MAAA,GAAY,CAAA,OAChC,QAAA,CAAS,IAAA,CAAK,KAAA,CAAM,MAAA,GAAY,CAAA,MAChC,QAAA,CAAS,eAAA,CAAgB,KAAA,CAAM,KAAA,GAAW,CAAA,OAC1C,QAAA,CAAS,eAAA,CAAgB,KAAA,CAAM,MAAA,GAAY,CAAA;IAG5C,GAAM,CAAA,CAAA,GAAc,CACnB;QAAA,MAAA,GAAQ,CAAA,GAAA,CAAA,CAAK,MAAA,KAAL,IAAA,GAAA,CAAA,QAAsB,CAC7B;YAAA,GAAM,CAAA,CAAA,GAAS,QAAA,CAAS,aAAA,CAAc,CAAA;YACtC,MAAA,CAAA,CAAA,CAAK,WAAA,CAAY,CAAA,GACV,CAAA;QAAA,CAAA;QAER,SAAA,EAAW,CAAA;QAAA,CAAA;QACX,YAAA,EAAc,CAAA,CAAA;QACd,YAAA,GAAc,CAAA;QACd,YAAA,GAAc,CAAA;QACd,kBAAA,GAAoB,CAAA;QACpB,WAAA,EAAa,CAAA;QAAA,CAAA;QACb,QAAA,EAAU,CAAA,CAAK,CAAA,EAAG,CAAA;QAClB,aAAA,EAAe,CAAA,CAAK,CAAA,EAAG,CAAA;QACvB,IAAA,EAAM,CAAA;QACN,QAAA,EAAU,CAAA;QACV,QAAA,GAAU,CAAA;QACV,EAAA,EAAI,CAAA;QACJ,KAAA,GAAO,EAAA,GAAA,CAAA,CAAK,KAAA,KAAL,IAAA,GAAA,EAAA,GAAc,CAAA;QACrB,OAAA,GAAS,CAAA;QACT,MAAA,EAAQ,IAAA;QACR,OAAA,GAAS,CAAA;QACT,GAAA,EAAK,CAAA;QACL,MAAA,EAAQ,CAAA,CAAA;QACR,QAAA,EAAU,CAAA;IAAA,CAAA,EAGL,CAAA,GAAS,CACd;QAAA,SAAA,EAAa,CAAA;QACb,UAAA,EAAc,CAAA;QACd,OAAA,EAAW,CAAA;QACX,SAAA,EAAa,CAAA;QACb,CAAA,IAAK,CAAA;IAAA,CAAA,EAGA,CAAA,GAAqB,CAC1B;QAAA,CAAA;QACA,CAAA;QACA,CAAA;QACA,CAAA;QACA,CAAA;QACA,CAAA;QACA,CAAA;QACA,CAAA;QACA,CAAA;QACA,CAAA;QACA,CAAA;QACA,CAAA;QACA,CAAA;QACA,CAAA;QACA,CAAA;QACA,CAAA;QACA,CAAA;QACA,CAAA;IAAA,CAAA;IAGG,CAAA,CAAK,KAAA,IAAS,CAAA,CAAK,MAAA,KAAW,CAAA,CAAK,OAAA,IACtC,CAAA,CAAI,MAAA,CAAO,KAAA,GAAQ,CAAA,CAAK,KAAA,GAAQ,CAAA,CAAI,KAAA,EACpC,CAAA,CAAI,MAAA,CAAO,MAAA,GAAS,CAAA,CAAK,MAAA,GAAS,CAAA,CAAI,KAAA,KAEtC,CAAA,CAAI,MAAA,CAAO,KAAA,GAAQ,CAAA,CAAI,MAAA,CAAO,aAAA,CAAc,WAAA,EAC5C,CAAA,CAAI,MAAA,CAAO,MAAA,GAAS,CAAA,CAAI,MAAA,CAAO,aAAA,CAAc,YAAA;IAG9C,GAAM,CAAA,CAAA,GAAS,CACd;QAAA,CAAA;QACA,CAAA;IAAA,CAAA;IAGG,CAAA,CAAK,KAAA,KACR,CAAA,CAAO,IAAA,CAAK,CAAA,8BACZ,CAAA,CAAO,IAAA,CAAK,CAAA,iCAIb,CAAA,CAAI,MAAA,CAAO,KAAA,GAAQ,CAAA,CAAO,IAAA,CAAK,CAAA,KAC/B,CAAA,CAAI,MAAA,CAAO,YAAA,CAAa,CAAA,WAAY,CAAA;IAEpC,GAAM,CAAA,CAAA,GAAK,CAAA,CAAI,MAAA,CACb,UAAA,CAAW,CAAA,QAAS,CACpB;QAAA,SAAA,GAAW,CAAA;QACX,KAAA,GAAO,CAAA;QACP,OAAA,GAAS,CAAA;QACT,KAAA,GAAO,CAAA;QACP,qBAAA,GAAuB,CAAA;IAAA,CAAA;IAGzB,CAAA,CAAI,OAAA,GAAW,CAAA,iBAAkB,MAAA,IAAW,SAAA,CAAU,cAAA,GAAiB,CAAA,EAEvE,CAAA,CAAI,MAAA,CAAO,gBAAA,CAAiB,CAAA,aAAc,CAAA,GAAM,CAC/C;QAAA,CAAI,KAGH,CAAA,CAAI,QAAA,GAAW,CAAA,CAAK,CAAA,CAAE,OAAA,EAAS,CAAA,CAAE,OAAA,EAAS,KAAA,CAAM,CAAA,GAAI,CAAA,CAAI,KAAA,IAExD,CAAA,CAAI,QAAA,GAAW,CAAA,CAAK,CAAA,CAAE,OAAA,EAAS,CAAA,CAAE,OAAA,EAAS,KAAA,CAAM,CAAA,GAAI,CAAA,CAAI,KAAA,GAEzD,CAAA,CAAI,aAAA,GAAgB,CAAA,CAAK,CAAA,CAAE,SAAA,EAAW,CAAA,CAAE,SAAA,EAAW,KAAA,CAAM,CAAA,GAAI,CAAA,CAAI,KAAA,GACjE,CAAA,CAAI,YAAA,IAAe,CAAA;IAAA,CAAA;IAIpB,GAAM,CAAA,CAAA,GAAe,CACpB;QAAA,CAAA;QACA,CAAA;QACA,CAAA;QACA,CAAA;QACA,CAAA;IAAA,CAAA;IAGD,CAAA,CAAI,MAAA,CAAO,gBAAA,CAAiB,CAAA,aAAc,CAAA,GAAM,CAC/C;QAAA,GAAM,CAAA,CAAA,GAAI,CAAA,CAAa,CAAA,CAAE,MAAA;QACrB,CAAA,KACH,CAAA,CAAI,WAAA,CAAY,CAAA,IAAK,CAAA;IAAA,CAAA,GAIvB,CAAA,CAAI,MAAA,CAAO,gBAAA,CAAiB,CAAA,WAAW,CAAC,GAAM,CAC7C;QAAA,GAAM,CAAA,CAAA,GAAI,CAAA,CAAa,CAAA,CAAE,MAAA;QACzB,CAAI,KACH,CAAA,CAAI,WAAA,CAAY,CAAA,IAAK,CAAA;IAAA,CAAA,GAIvB,CAAA,CAAI,MAAA,CAAO,gBAAA,CAAiB,CAAA,WAAY,CAAA,GAAM,CAE7C;QAAA,GAAM,CAAA,CAAA,GAAI,CAAA,CAAO,CAAA,CAAE,GAAA,KAAQ,CAAA,CAAE,GAAA,CAAI,WAAA;QAE7B,CAAA,CAAmB,QAAA,CAAS,CAAA,KAC/B,CAAA,CAAE,cAAA,IAGC,CAAA,CAAE,MAAA,KAAW,CAAA,IAChB,CAAA,CAAI,YAAA,CAAa,IAAA,CAAK,CAAA,CAAE,GAAA,GAGrB,CAAA,KAAM,CAAA,UACT,CAAA,CAAI,YAAA,CAAa,IAAA,CAAK,CAAA,KAGnB,CAAA,CAAE,MAAA,IACL,CAAA,CAAI,kBAAA,IAAqB,CAAA,EACzB,CAAA,CAAI,SAAA,CAAU,CAAA,IAAK,CAAA,cAEnB,CAAA,CAAI,YAAA,IAAe,CAAA,EACnB,CAAA,CAAI,SAAA,CAAU,CAAA,IAAK,CAAA;IAAA,CAAA,GAKrB,CAAA,CAAI,MAAA,CAAO,gBAAA,CAAiB,CAAA,SAAU,CAAA,GAAqB,CAC1D;QAAA,GAAM,CAAA,CAAA,GAAI,CAAA,CAAO,CAAA,CAAE,GAAA,KAAQ,CAAA,CAAE,GAAA,CAAI,WAAA;QACjC,CAAA,CAAI,SAAA,CAAU,CAAA,IAAK,CAAA;IAAA,CAAA,GAGpB,CAAA,CAAI,MAAA,CAAO,gBAAA,CAAiB,CAAA,cAAe,CAAA,GAAM,CAChD;QAAA,EAAA,GAAK,CAAA,CAAK,YAAA,EAAc,MAAA;QAExB,CAAA,CAAE,cAAA;QACF,GAAM,CAAA,CAAA,GAAI,CAAA,CAAE,OAAA,CAAQ,CAAA;QACpB,CAAA,CAAI,QAAA,GAAW,CAAA,CAAK,CAAA,CAAE,OAAA,EAAS,CAAA,CAAE,OAAA,EAAS,KAAA,CAAM,CAAA,GAAI,CAAA,CAAI,KAAA,GACxD,CAAA,CAAI,WAAA,CAAY,IAAA,GAAU,CAAA;IAAA,CAAA,GAG3B,CAAA,CAAI,MAAA,CAAO,gBAAA,CAAiB,CAAA,aAAc,CAAA,GAAM,CAC/C;QAAA,EAAA,GAAK,CAAA,CAAK,YAAA,EAAc,MAAA;QAExB,CAAA,CAAE,cAAA;QACF,GAAM,CAAA,CAAA,GAAI,CAAA,CAAE,OAAA,CAAQ,CAAA;QACpB,CAAA,CAAI,QAAA,GAAW,CAAA,CAAK,CAAA,CAAE,OAAA,EAAS,CAAA,CAAE,OAAA,EAAS,KAAA,CAAM,CAAA,GAAI,CAAA,CAAI,KAAA,GACxD,CAAA,CAAI,YAAA,IAAe,CAAA;IAAA,CAAA,GAGpB,CAAA,CAAI,MAAA,CAAO,gBAAA,CAAiB,CAAA,YAAY,CAAC,GAAM,CAC1C;SAAC,CAAA,CAAK,YAAA,KACV,CAAA,CAAI,WAAA,CAAY,IAAA,GAAU,CAAA;IAAA,CAAA,GAG3B,CAAA,CAAI,MAAA,CAAO,gBAAA,CAAiB,CAAA,eAAgB,CAAA,GAAM,CACjD;SAAK,CAAA,CAAK,YAAA,KACV,CAAA,CAAI,WAAA,CAAY,IAAA,GAAU,CAAA;IAAA,CAAA,GAG3B,CAAA,CAAI,MAAA,CAAO,gBAAA,CAAiB,CAAA,cAAe,QAAA,CAAU,CAAA,EAAG,CACvD;QAAA,CAAA,CAAE,cAAA;IAAA,CAAA,GAGH,QAAA,CAAS,gBAAA,CAAiB,CAAA,uBAA0B,CAvTrD;QAAA,GAAA,CAAA,CAAA,EAAA,CAAA;QAwTE,MAAA,CAAQ,QAAA,CAAS,eAAA;YAAA,IACX,CAAA,CAAA;gBAEJ,CAAA,CAAI,QAAA,IAAW,CAAA,GAEf,CAAA,GAAA,CAAA,CAAK,QAAA,KAAL,IAAA,IAAA,CAAA,CAAe,MAAA;gBACf,KAAA;YAAA,IACI,CAAA,CAAA;iBACJ,CAAA,GAAA,CAAA,CAAK,QAAA,KAAL,IAAA,IAAA,CAAA,CAAe,OAAA;gBACf,KAAA;;IAAA,CAAA;aAYH,CAAA,GAA0B,CACzB;QAAA,MAAO,CAAA,CAAA,CAAI,QAAA,CAAS,KAAA;IAAA,CADZ;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAIT,CAAA,GAA+B,CAC9B;QAAA,MAAO,CAAA,CAAA,CAAI,aAAA,CAAc,KAAA;IAAA,CADjB;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAIT,CAAA,CAAwB,CAAA,GAAI,CAAA,OAAiB,CAC5C;QAAA,MAAO,CAAA,CAAA,CAAI,WAAA,CAAY,CAAA,MAAO,CAAA;IAAA,CADtB;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAIT,CAAA,CAAqB,CAAA,GAAI,CAAA,OAAiB,CACzC;QAAA,MAAO,CAAA,CAAA,CAAI,WAAA,CAAY,CAAA,MAAO,CAAA,YAAa,CAAA,CAAI,WAAA,CAAY,CAAA,MAAO,CAAA;IAAA,CAD1D;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAIT,CAAA,CAAyB,CAAA,GAAI,CAAA,OAAiB,CAC7C;QAAA,MAAO,CAAA,CAAA,CAAI,WAAA,CAAY,CAAA,MAAO,CAAA;IAAA,CADtB;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAIT,EAAA,GAAiC,CAChC;QAAA,MAAO,CAAA,CAAA,CAAI,YAAA;IAAA,CADH;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAIT,CAAA,CAAsB,CAAA,EAAqB,CAC1C;QAAA,MAAI,CAAA,CAAA,KAAM,IAAA,CAAA,CAAA,GACF,CAAA,CAAI,YAAA,GAEJ,CAAA,CAAI,SAAA,CAAU,CAAA,MAAO,CAAA;IAAA,CAJrB;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAQT,EAAA,CAA4B,CAAA,EAAoB,CAC/C;QAAA,MAAI,CAAA,CAAA,KAAM,IAAA,CAAA,CAAA,GACF,CAAA,CAAI,kBAAA,GAEJ,CAAA,CAAI,SAAA,CAAU,CAAA,MAAO,CAAA,YAAa,CAAA,CAAI,SAAA,CAAU,CAAA,MAAO,CAAA;IAAA,CAJvD;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAQT,CAAA,CAAmB,CAAA,EAAoB,CACtC;QAAA,MAAO,CAAA,CAAA,CAAI,SAAA,CAAU,CAAA,MAAO,CAAA,YACxB,CAAA,CAAI,SAAA,CAAU,CAAA,MAAO,CAAA,aACrB,CAAA,CAAI,SAAA,CAAU,CAAA,MAAO,CAAA;IAAA,CAHjB;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAMT,EAAA,CAAuB,CAAA,EAAoB,CAC1C;QAAA,MAAO,CAAA,CAAA,CAAI,SAAA,CAAU,CAAA,MAAO,CAAA;IAAA,CADpB;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAIT,CAAA,GAAkC,CACjC;QAAA,MAAO,CAAA,CAAC;eAAG,CAAA,CAAI,YAAA;QAAA,CAAA;IAAA,CADP;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAKT,EAAA,GAAsB,CACrB;QAAA,MAAO,CAAA,CAAA,CAAI,EAAA;IAAA,CADH;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAKT,CAAA,GAAwB,CACvB;QAAA,MAAO,CAAA,CAAA,CAAI,IAAA;IAAA,CADH;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAIT,CAAA,GAAuB,CACtB;QAAA,MAAO,CAAA,CAAA,CAAI,GAAA;IAAA,CADH;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAKT,CAAA,GAA8B,CAC7B;QAAA,MAAO,CAAA,CAAA,CAAI,MAAA,CAAO,SAAA;IAAA,CADV;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAKT,CAAA,CAAgB,CAAA,EAAoB,CACnC;QAAA,MAAI,CAAA,CAAA,KACH,CAAA,CAAI,MAAA,CAAO,KAAA,CAAM,MAAA,GAAS,CAAA,GAEpB,CAAA,CAAI,MAAA,CAAO,KAAA,CAAM,MAAA;IAAA,CAJhB;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAOT,CAAA,CAAoB,CAAA,IAAa,CAAA,EAAM,CAClC;QAAA,CAAA,GACH,EAAA,CAAgB,CAAA,CAAI,MAAA,IAEpB,EAAA;IAAA,CAJO;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAQT,CAAA,GAAiC,CAChC;QAAA,MAAO,CAAA,OAAA,CAAQ,EAAA;IAAA,CADP;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAIT,CAAA,CAAa,CAAA,EAAe,CAE3B;QAAA,GAAM,CAAA,CAAA,GAAQ,CAAA,EAAC,EAAA,GAAc,CAE5B;YAAA,EAAA,EAAI,QAAA,CAAS,eAAA,KAAoB,CAAA,UAAW,CAC3C;gBAAA,CAAA,CAAI,MAAA,GAAS,qBAAA,CAAsB,CAAA;gBACnC,MAAA;YAAA,CAGD;YAAA,GAAM,CAAA,EAAA,GAAW,EAAA,GAAI,IAAA,EACf,EAAA,GAAS,EAAA,GAAW,CAAA,CAAI,QAAA;YAE9B,CAAA,CAAI,QAAA,GAAW,EAAA,EAEV,CAAA,CAAI,QAAA,KACR,CAAA,CAAI,EAAA,GAAK,EAAA,EACT,CAAA,CAAI,IAAA,IAAQ,CAAA,CAAI,EAAA,EAChB,CAAA,CAAI,MAAA,CAAO,IAAA,CAAK,CAAA,GAAI,CAAA,CAAI,EAAA,GACxB,CAAA,CAAI,QAAA,IAAY,CAAA,CAAI,EAAA,EAChB,CAAA,CAAI,QAAA,IAAY,CAAA,KACnB,CAAA,CAAI,QAAA,GAAW,CAAA,EACf,CAAA,CAAI,GAAA,GAAM,IAAA,CAAK,KAAA,CAAM,CAAA,CAAI,MAAA,CAAO,MAAA,EAAQ,EAAA,EAAG,EAAA,GAAM,EAAA,GAAI,EAAA;gBAAK,CAAA,CAAI,MAAA,CAAO,MAAA,GACrE,CAAA,CAAI,MAAA,GAAS,CAAA,CAAA,IAIf,CAAA,CAAI,QAAA,IAAW,CAAA,EAEf,CAAA;YAEA,GAAA,CAAA,GAAW,CAAA,GAAA,IAAK,CAAA,CAAI,SAAA,CACnB,CAAA,CAAI,SAAA,CAAU,GAAA,IAAK,EAAA,CAAgB,CAAA,CAAI,SAAA,CAAU,GAAA;YAGlD,GAAA,CAAA,GAAW,CAAA,GAAA,IAAK,CAAA,CAAI,WAAA,CACnB,CAAA,CAAI,WAAA,CAAY,GAAA,IAAK,EAAA,CAAgB,CAAA,CAAI,WAAA,CAAY,GAAA;YAGtD,CAAA,CAAI,YAAA,GAAe,CAAA,CAAA,EACnB,CAAA,CAAI,YAAA,IAAe,CAAA,EACnB,CAAA,CAAI,YAAA,IAAe,CAAA,EACnB,CAAA,CAAI,kBAAA,IAAqB,CAAA,EACzB,CAAA,CAAI,MAAA,GAAS,qBAAA,CAAsB,CAAA;QAAA,CAAA,EAxCtB,CAAA;QA4Cd,CAAA,CAAI,OAAA,IAAU,CAAA,EACd,CAAA,CAAI,MAAA,GAAS,qBAAA,CAAsB,CAAA;IAAA,CA/C3B;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAmDT,CAAA,GAAgB,CACf;QAAA,oBAAA,CAAqB,CAAA,CAAI,MAAA,GACzB,CAAA,CAAI,OAAA,IAAU,CAAA;IAAA,CAFN;IAAA,MAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,QAKF,CACN;QAAA,EAAA,EAAA,CAAA;QACA,QAAA,EAAA,CAAA;QACA,aAAA,EAAA,CAAA;QACA,SAAA,EAAA,CAAA;QACA,YAAA,EAAA,CAAA;QACA,kBAAA,EAAA,EAAA;QACA,aAAA,EAAA,EAAA;QACA,WAAA,EAAA,CAAA;QACA,cAAA,EAAA,CAAA;QACA,eAAA,EAAA,CAAA;QACA,YAAA,EAAA,EAAA;QACA,YAAA,EAAA,CAAA;QACA,MAAA,EAAA,CAAA;QACA,EAAA,EAAA,EAAA;QACA,IAAA,EAAA,CAAA;QACA,GAAA,EAAA,CAAA;QACA,UAAA,EAAA,CAAA;QACA,GAAA,EAAA,CAAA;QACA,IAAA,EAAA,CAAA;QACA,SAAA,MAAiB,QAAA,CAAS,aAAA,KAAkB,CAAA,CAAI,MAAA;;QAChD,KAAA,MAAa,CAAA,CAAI,MAAA,CAAO,KAAA;;QACxB,MAAA,EAAQ,CAAA,CAAI,MAAA;QACZ,OAAA,EAAS,CAAA,CAAI,OAAA;QACb,KAAA,EAAO,CAAA,CAAI,KAAA;QACX,UAAA,EAAA,CAAA;QACA,YAAA,EAAA,CAAA;IAAA,CAAA;AAAA,CA5YO;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;AAAA,GAAA,CAAA,EAAA,GAAA,EAAA,CAAA,CAAA;AC5FT,GAAM,CAAA,EAAA,GAAW,CAAA,EACX,EAAA,GAAW,CAAA,EACX,EAAA,GAAY,CAAA,EACZ,EAAA,GAAY,CAAA,EACZ,EAAA,GAAa,KAAA,EACb,EAAA,GAAa,IAAA;SAKnB,EAAA,GAA4B,CAE3B;IAAA,GAAM,CAAA,CAAA,GAAM,GAA4C,EAAvC,MAAA,CAAO,YAAA,IAAiB,MAAA,CAAe,kBAAA,GAClD,CAAA,GAAa,CAAA,CAAI,UAAA;IACvB,CAAA,CAAW,OAAA,CAAQ,CAAA,CAAI,WAAA;IAGvB,GAAM,CAAA,CAAA,GAAU,CACf;QAAA,GAAA,EAAK,GAAI,CAAA,WAAA,CAAY,CACpB;YAAA,MAAA,EAAQ,CAAA;YACR,gBAAA,EAAkB,CAAA;YAClB,UAAA,EAAY,KAAA;QAAA,CAAA;IAAA,CAAA;IAId,CAAA,CAAI,eAAA,CAAgB,EAAA,CAAU,MAAA,CAAO,KAAA,CAAM,CAAA,IAAI,CAAC,GAAQ,CACvD;QAAA,CAAA,CAAQ,GAAA,GAAM,CAAA;IAAA,CAAA,MACN,CACR;QAAA,KAAM,CAAA,GAAI,CAAA,KAAA,CAAM,CAAA;IAAA,CAAA;aAIjB,CAAA,CAAgB,CAAA,EAAoB,CACnC;QAAA,MAAI,CAAA,CAAA,KAAM,IAAA,CAAA,CAAA,KACT,CAAA,CAAW,IAAA,CAAK,KAAA,GAAQ,EAAA,CAAM,CAAA,EAAG,EAAA,EAAU,EAAA,IAErC,CAAA,CAAW,IAAA,CAAK,KAAA;IAAA,CAJf;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAQT,CAAA,CACC,CAAA,EACA,CAAA,GAAoB,CACnB;QAAA,IAAA,GAAM,CAAA;QACN,MAAA,EAAQ,CAAA;QACR,KAAA,EAAO,CAAA;QACP,MAAA,EAAQ,CAAA;QACR,IAAA,EAAM,CAAA;IAAA,CAAA,EAEK,CArEd;QAAA,GAAA,CAAA,EAAA;QAuEE,GAAI,CAAA,CAAA,IAAU,CAAA,EACV,CAAA,GAAU,CAAA,CAAI,kBAAA;QAElB,CAAA,CAAQ,MAAA,GAAS,CAAA,CAAI,GAAA,EACrB,CAAA,CAAQ,IAAA,KAAO,CAAA,CAAI,IAAA;QAEnB,GAAM,CAAA,CAAA,GAAW,CAAA,CAAI,UAAA;QAErB,CAAA,CAAQ,OAAA,CAAQ,CAAA,GAChB,CAAA,CAAS,OAAA,CAAQ,CAAA;QAEjB,GAAM,CAAA,CAAA,IAAM,EAAA,GAAA,CAAA,CAAI,IAAA,KAAJ,IAAA,GAAA,EAAA,GAAY,CAAA;QAExB,CAAA,CAAQ,KAAA,CAAM,CAAA,EAAG,CAAA;QAEjB,GAAI,CAAA,CAAA,GAAY,CAAA,CAAI,WAAA,GAAc,CAAA,EAC9B,EAAA,GAA0B,IAAA,EAExB,CAAA,GAAS,CAEd;YAAA,IAAA,IAAO,CACN;gBAAA,CAAI,KAGJ,IAAA,CAAK,KAAA,IACL,CAAA,GAAY,CAAA,CAAI,WAAA;YAAA,CAAA;YAGjB,IAAA,EAAK,CAAA,EAAe,CAEnB;gBAAA,EAAA,GAAK,CAAA,EACJ,MAAA;gBAGD,GAAM,CAAA,EAAA,GAAU,CAAA;gBAEhB,CAAA,GAAU,CAAA,CAAI,kBAAA,IACd,CAAA,CAAQ,MAAA,GAAS,EAAA,CAAQ,MAAA,EACzB,CAAA,CAAQ,IAAA,GAAO,EAAA,CAAQ,IAAA,EACvB,CAAA,CAAQ,YAAA,CAAa,KAAA,GAAQ,EAAA,CAAQ,YAAA,CAAa,KAAA,EAE9C,CAAA,CAAQ,MAAA,KACX,CAAA,CAAQ,MAAA,CAAO,KAAA,GAAQ,EAAA,CAAQ,MAAA,CAAO,KAAA,GAGvC,CAAA,CAAQ,OAAA,CAAQ,CAAA;gBAEhB,GAAM,CAAA,CAAA,GAAM,CAAA,IAAA,IAAA,GAAA,CAAA,GAAQ,IAAA,CAAK,IAAA;gBAEzB,CAAA,CAAQ,KAAA,CAAM,CAAA,EAAG,CAAA,GACjB,CAAA,GAAY,CAAA,CAAI,WAAA,GAAc,CAAA,EAC9B,CAAA,IAAU,CAAA,EACV,EAAA,GAAW,IAAA;YAAA,CAAA;YAIZ,KAAA,IAAQ,CACP;gBAAA,CAAI,KAGJ,CAAA,CAAQ,IAAA,IACR,CAAA,IAAU,CAAA,EACV,EAAA,GAAW,CAAA,CAAI,WAAA;YAAA,CAAA;YAGhB,QAAA,IAAoB,CACnB;gBAAA,MAAO,CAAA,CAAA;YAAA,CAAA;YAGR,MAAA,IAAkB,CACjB;gBAAA,MAAO,CAAA,IAAA,CAAK,QAAA;YAAA,CAAA;YAGb,SAAA,IAAqB,CACpB;gBAAA,MAAO,CAAA,CAAA;YAAA,CAAA;YAGR,OAAA,IAAmB,CAClB;gBAAA,MAAO,CAAA,IAAA,CAAK,SAAA;YAAA,CAAA;YAIb,KAAA,EAAM,CAAA,EAAsB,CAC3B;gBAAA,MAAI,CAAA,CAAA,KAAQ,IAAA,CAAA,CAAA,KACX,CAAA,CAAQ,YAAA,CAAa,KAAA,GAAQ,EAAA,CAAM,CAAA,EAAK,EAAA,EAAW,EAAA,IAE7C,CAAA,CAAQ,YAAA,CAAa,KAAA;YAAA,CAAA;YAG7B,MAAA,EAAO,CAAA,EAAsB,CAC5B;gBAAA,MAAK,CAAA,CAAA,CAAQ,MAAA,IAGT,CAAA,KAAQ,IAAA,CAAA,CAAA,KACX,CAAA,CAAQ,MAAA,CAAO,KAAA,GAAQ,EAAA,CAAM,CAAA,EAAK,EAAA,EAAY,EAAA,IAExC,CAAA,CAAQ,MAAA,CAAO,KAAA,IALd,CAAA;YAAA,CAAA;YAQT,MAAA,EAAO,CAAA,EAAsB,CAC5B;gBAAA,MAAI,CAAA,CAAA,KAAQ,IAAA,CAAA,CAAA,KACX,CAAA,CAAS,IAAA,CAAK,KAAA,GAAQ,EAAA,CAAM,CAAA,EAAK,EAAA,EAAU,EAAA,IAErC,CAAA,CAAS,IAAA,CAAK,KAAA;YAAA,CAAA;YAGtB,IAAA,IAAO,CACN;gBAAA,CAAA,CAAQ,IAAA,IAAO,CAAA;YAAA,CAAA;YAGhB,MAAA,IAAS,CACR;gBAAA,CAAA,CAAQ,IAAA,IAAO,CAAA;YAAA,CAAA;YAGhB,QAAA,IAAmB,CAClB;gBAAA,MAAO,CAAA,CAAA,CAAI,GAAA,CAAI,QAAA;YAAA,CAAA;YAGhB,IAAA,IAAe,CACd;gBAAA,MAAI,CAAA,CAAA,GACI,EAAA,GAAW,CAAA,GAEX,CAAA,CAAI,WAAA,GAAc,CAAA;YAAA,CAAA;QAAA,CAAA;QAM5B,MAAA,CAAA,CAAA,CAAO,KAAA,CAAM,CAAA,CAAI,KAAA,GACjB,CAAA,CAAO,MAAA,CAAO,CAAA,CAAI,MAAA,GAClB,CAAA,CAAO,MAAA,CAAO,CAAA,CAAI,MAAA,GAEX,CAAA;IAAA,CA/IC;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAmJT,CAAA,CAAc,CAAA,EAA+B,CAC5C;QAAA,MAAO,CAAA,CAAA,CAAK,CAAA,EAAS,CAAA;IAAA,CADb;IAAA,MAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,QAIF,CACN;QAAA,GAAA,EAAA,CAAA;QACA,UAAA,EAAA,CAAA;QACA,MAAA,EAAA,CAAA;QACA,IAAA,EAAA,CAAA;QACA,IAAA,EAAA,CAAA;IAAA,CAAA;AAAA,CA1LO;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;AAAA,GAAA,CAAA,EAAA,GAAA,CAAA;AAAA,GAAA,CAAA,EAAA,GAAA,CAAA;AAAA,GAAA,CAAA,EAAA,GAAA,CAAA;AAAA,GAAA,CAAA,EAAA,GAAA,CAAA;AAAA,GAAA,CAAA,EAAA,GAAA,CAAA;ACuET,GAAM,CAAA,EAAA,GAAc,CAAA,oGACd,EAAA,GAAc,CAAA;SAEpB,EAAA,CAAiB,CAAA,EAAwC,CACxD;IAAA,GAAM,CAAA,CAAA,GAAM,GAAI,CAAA,KAAA;IAChB,MAAA,CAAA,CAAA,CAAI,GAAA,GAAM,CAAA,EACV,CAAA,CAAI,WAAA,GAAc,CAAA,YACX,GAAI,CAAA,OAAA,EAA2B,CAAA,EAAS,CAAA,GAAW,CACzD;QAAA,CAAA,CAAI,MAAA,OAAe,CAClB;YAAA,CAAA,CAAQ,CAAA;QAAA,CAAA,EAET,CAAA,CAAI,OAAA,OAAgB,CACnB;YAAA,CAAA,EAAO,eAAA,EAAkB,CAAA;QAAA,CAAA;IAAA,CAAA;AAAA,CATnB;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAcT,EAAA,CAAmB,CAAA,EAAsB,CACxC;IAAA,MAAO,CAAA,CAAA,CAAI,UAAA,CAAW,CAAA;AAAA,CADd;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;SAIT,EAAA,CAAoB,CAAA,EAAU,CAAA,EAAc,CAAA,GAAkB,CAAA;AAAA,CAAA,EAAY,CAEzE;IAAA,GAAM,CAAA,CAAA,GAAoB,CACzB;QAAA,YAAA,EAAc,CAAA;QACd,QAAA,EAAU,CAAA;QACV,OAAA,EAAS,CAAA;QAAA,CAAA;QACT,OAAA,EAAS,CAAA;QAAA,CAAA;QACT,MAAA,EAAQ,CAAA;QAAA,CAAA;QACR,KAAA,EAAO,CAAA;QAAA,CAAA;QACP,OAAA,EAAS,CAAA;QAAA,CAAA;IAAA,CAAA;aAGV,CAAA,CAAiB,CAAA,EAA8B,CAtIhD;QAAA,GAAA,CAAA,CAAA;QAuIE,GAAM,CAAA,CAAA,GAAK,CAAA,CAAO,YAAA;QAClB,MAAA,CAAA,CAAA,CAAO,OAAA,CAAQ,CAAA,KAAM,CAAA,EACrB,CAAA,CAAO,YAAA,IACA,CAAA,CACL,KAAA,EAAM,CAAA,GAAA,CAAA,CAAK,UAAA,KAAL,IAAA,GAAA,CAAA,GAAmB,OAAA,CAAQ,KAAA,EACjC,OAAA,KAAc,CAAA,CAAO,OAAA,CAAQ,CAAA,KAAM,CAAA;;IAAA,CAN7B;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAUT,CAAA,GAAgC,CAE/B;QAAA,GAAI,CAAA,CAAA,GAAQ,CAAA,EACR,CAAA,GAAS,CAAA;QAEb,GAAA,CAAA,GAAW,CAAA,CAAA,IAAM,CAAA,CAAO,OAAA,CACvB,CAAA,IAAS,CAAA,EACL,CAAA,CAAO,OAAA,CAAQ,CAAA,MAClB,CAAA,IAAU,CAAA;QAIZ,MAAO,CAAA,CAAA,GAAS,CAAA;IAAA,CAZR;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAiBT,CAAA,CAAkB,CAAA,EAAuB,CACxC;QAAA,MAAI,CAAA,CAAA,KAAS,IAAA,CAAA,CAAA,KACZ,CAAA,CAAO,QAAA,GAAW,CAAA,GAEZ,CAAA,CAAO,QAAA;IAAA,CAJN;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAQT,CAAA,CACC,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,GAAmB,CAAA;IAAA,CAAA,EACC,CACpB;QAAA,MAAO,CAAA,CAAA,CAAK,GAAI,CAAA,OAAA,EAAmB,CAAA,EAAS,CAAA,GAAW,CACtD;YAAA,GAAM,CAAA,CAAA,GAAO,EAAA,CAAU,CAAA,IAAO,CAAA,GAAM,CAAA,CAAO,QAAA,GAAW,CAAA;YACtD,EAAA,CAAQ,CAAA,EACN,IAAA,EAAK,CAAC,GAAQ,CAnLnB;gBAAA,GAAA,CAAA,EAAA;gBAoLK,GAAM,CAAA,CAAA,GAAO,CAAA,CAAI,QAAA,CAAS,CAAA,CAAI,OAAA,CAAQ,CAAA,EAAK,CAAA,GAAM,CAAA,EAAI,CAAA,GAAI,EAAA,GAAA,CAAA,CAAI,KAAA,KAAJ,IAAA,GAAA,EAAA,GAAa,EAAA;gBAClE,CAAA,KACH,CAAA,CAAO,KAAA,CAAM,CAAA,IAAQ,CAAA,GAEtB,CAAA,CAAQ,CAAA;YAAA,CAAA,EAER,KAAA,CAAM,CAAA;QAAA,CAAA;IAAA,CAjBD;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAqBT,CAAA,CAAmB,CAAA,EAAiC,CA9LrD;QAAA,GAAA,CAAA,CAAA;QA+LE,MAAO,EAAA,CAAA,GAAA,CAAA,CAAO,OAAA,CAAQ,CAAA,MAAf,IAAA,GAAA,CAAA,GAAwB,IAAA;IAAA,CADvB;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAIT,CAAA,CAAkB,CAAA,EAAgC,CAlMnD;QAAA,GAAA,CAAA,CAAA;QAmME,MAAO,EAAA,CAAA,GAAA,CAAA,CAAO,MAAA,CAAO,CAAA,MAAd,IAAA,GAAA,CAAA,GAAuB,IAAA;IAAA,CADtB;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAIT,CAAA,CAAiB,CAAA,EAA+B,CAtMjD;QAAA,GAAA,CAAA,CAAA;QAuME,MAAO,EAAA,CAAA,GAAA,CAAA,CAAO,KAAA,CAAM,CAAA,MAAb,IAAA,GAAA,CAAA,GAAsB,IAAA;IAAA,CADrB;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAIT,CAAA,CAAmB,CAAA,EAAiC,CA1MrD;QAAA,GAAA,CAAA,CAAA;QA2ME,MAAO,EAAA,CAAA,GAAA,CAAA,CAAO,OAAA,CAAQ,CAAA,MAAf,IAAA,GAAA,CAAA,GAAwB,IAAA;IAAA,CADvB;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAIT,CAAA,CAAe,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,CAAA,EAAG,CAAA,GAAK,CAAA,EAAG,CAAA,GAAK,CAAA,EAAG,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,CAAA,EAAW,CAClE;QAAA,GAAM,CAAA,CAAA,GAAS,CAAA,CAAA,EACT,CAAA,GAAK,CAAA,GAAI,CAAA,EACT,CAAA,GAAK,CAAA,GAAI,CAAA;QACf,GAAA,CAAA,GAAS,CAAA,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,CAAA,EAAG,CAAA,GACtB,GAAA,CAAA,GAAS,CAAA,EAAA,GAAI,CAAA,EAAG,EAAA,GAAI,CAAA,EAAG,EAAA,GACtB,CAAA,CAAO,IAAA,CAAK,EAAA,CACX,CAAA,GAAK,EAAA,GAAI,CAAA,EACT,CAAA,GAAK,CAAA,GAAI,CAAA,EACT,CAAA,EACA,CAAA;QAIH,MAAO,CAAA,CAAA;IAAA,CAdC;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAiBT,EAAA,CACC,CAAA,EACA,CAAA,EACsC,CACtC;QAAA,MAAI,CAEI,CAAA,CAFJ,MAAO,CAAA,CAAA,IAAS,CAAA,UAEP,KAAA,CAAM,CAAA,KAAa,CAAA,EAC7B,IAAA,EAAM,CAAA,GAAQ,CAAA,CAAI,IAAA;UAClB,IAAA,EAAM,CAAA,GAAU,EAAA,CAAgB,CAAA,EAAK,CAAA;YAE5B,CAAA,CAAW,IAAA,EAAM,CAAA,EAAK,IAAA,EAAK,CAAC,GAAU,CACjD;YAAA,GAAM,CAAA,CAAA,GAAM,CAAA;YAAA,CAAA,EACN,CAAA,GAAI,CAAA,CAAM,GAAA,CAAI,KAAA,EACd,CAAA,GAAI,CAAA,CAAM,GAAA,CAAI,MAAA;YACpB,GAAA,CAAA,GAAW,CAAA,CAAA,IAAQ,CAAA,CAAM,CACxB;gBAAA,GAAM,CAAA,CAAA,GAAO,CAAA,CAAK,CAAA,GACZ,CAAA,GAAM,CACX;oBAAA,GAAA,EAAK,CAAA,CAAM,GAAA;oBACX,MAAA,EAAQ,CAAA,CAAM,CAAA,CAAK,MAAA,EAAQ,CAAA,CAAK,MAAA,EAAQ,CAAA,CAAK,CAAA,GAAI,CAAA,EAAG,CAAA,CAAK,CAAA,GAAI,CAAA,EAAG,CAAA,CAAK,KAAA,GAAQ,CAAA,EAAG,CAAA,CAAK,MAAA,GAAS,CAAA;oBAC9F,KAAA,EAAO,CAAA,CAAK,KAAA;gBAAA,CAAA;gBAEb,CAAA,CAAO,OAAA,CAAQ,CAAA,IAAQ,CAAA,EACvB,CAAA,CAAI,CAAA,IAAQ,CAAA;YAAA,CAEb;YAAA,MAAO,CAAA,CAAA;QAAA,CAAA;IAAA,CAxBA;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aA6BT,CAAA,CACC,CAAA,EACA,CAAA,EACA,CAAA,GAAqB,CACpB;QAAA,MAAA,EAAQ,CAAA;QACR,MAAA,EAAQ,CAAA;QACR,KAAA,EAAO,CAAA;QAAA,CAAA;IAAA,CAAA,EAEc,CAGtB;iBAAA,CAAA,CACC,CAAA,EACA,CAAA,EACA,CAAA,GAAqB,CACpB;YAAA,MAAA,EAAQ,CAAA;YACR,MAAA,EAAQ,CAAA;YACR,KAAA,EAAO,CAAA;YAAA,CAAA;QAAA,CAAA,EAEP,CAED;YAAA,GAAM,CAAA,CAAA,GAAM,CAAA,CAAI,OAAA,CAAQ,CAAA,EAAK,CAAA,GACvB,CAAA,GAAS,CAAA,CAAM,CAAA,CAAI,MAAA,IAAU,CAAA,EAAG,CAAA,CAAI,MAAA,IAAU,CAAA,GAE9C,CAAA,GAAS,CACd;gBAAA,GAAA,EAAK,CAAA;gBACL,MAAA,EAAQ,CAAA;gBACR,KAAA,EAAO,CAAA,CAAI,KAAA,IAAS,CAAA;gBAAA,CAAA;YAAA,CAAA;YAGrB,MAAI,CAAA,CAAA,KACH,CAAA,CAAO,OAAA,CAAQ,CAAA,IAAQ,CAAA,GAGjB,CAAA;QAAA,CAvBC;QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,iBA2BF,CAAA,CAAK,GAAI,CAAA,OAAA,EAAqB,CAAA,EAAS,CAAA,GAAW,CAExD;YAAA,EAAA,GAAK,CAAA,EACJ,MAAO,CAAA,CAAA,EAAO,yBAAA,EAA4B,CAAA,CAAA,CAAA;YAI3C,EAAA,EAAI,MAAO,CAAA,CAAA,IAAS,CAAA,SAAU,CAC7B;gBAAA,GAAM,CAAA,CAAA,GAAO,EAAA,CAAU,CAAA,IAAO,CAAA,GAAM,CAAA,CAAO,QAAA,GAAW,CAAA;gBACtD,EAAA,CAAQ,CAAA,EACN,IAAA,EAAM,CAAA,GAAQ,CAAA,CAAQ,CAAA,CAAc,CAAA,EAAM,CAAA,EAAK,CAAA;kBAC/C,KAAA,CAAM,CAAA;YAAA,CAAA,MAER,CAAA,CAAQ,CAAA,CAAc,CAAA,EAAM,CAAA,EAAK,CAAA;QAAA,CAAA;IAAA,CAnD3B;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aA2DT,EAAA,CAAmB,CAAA,EAAc,CAAA,EAAkC,CAElE;QAAA,MAAO,CAAA,CAAA,CAAK,GAAI,CAAA,OAAA,EAAqB,CAAA,EAAS,CAAA,GAAW,CAExD;YAAA,KAAA,CAAM,CAAA,KAAa,CAAA,EACjB,IAAA,EAAK,CAAC,GAAQ,CAAA,CAAI,IAAA;cAClB,IAAA,EAAK,CAAO,GAAS,EAAA,CAAA,IAAA,EAAA,IAAA,EAAA,QAAA,IAAA,CAErB;oBAAA,GAAM,CAAA,CAAA,SAAe,OAAA,CAAQ,GAAA,CAAI,CAAA,CAAK,MAAA,CAAO,GAAA,CAAI,EAAA,IAC3C,CAAA,GAAS,QAAA,CAAS,aAAA,CAAc,CAAA;oBACtC,CAAA,CAAO,KAAA,GAAQ,CAAA,CAAK,KAAA,EACpB,CAAA,CAAO,MAAA,GAAS,CAAA,CAAK,MAAA,GAAS,CAAA,CAAK,MAAA,CAAO,MAAA;oBAE1C,GAAM,CAAA,CAAA,GAAM,CAAA,CAAO,UAAA,CAAW,CAAA;oBAE9B,MAAA,CAAA,CAAA,CAAO,OAAA,EAAS,CAAA,EAAuB,CAAA,GAAM,CAC5C;wBAAA,CAAA,CAAI,SAAA,CAAU,CAAA,EAAK,CAAA,EAAG,CAAA,GAAI,CAAA,CAAK,MAAA;oBAAA,CAAA,GAGzB,CAAA,CAAW,CAAA,EAAM,CAAA,EAAQ,CAC/B;wBAAA,MAAA,EAAQ,CAAA,CAAK,MAAA,CAAO,MAAA;wBACpB,KAAA,EAAO,CAAA,CAAK,KAAA;oBAAA,CAAA;gBAAA,CAAA;cAGb,IAAA,CAAK,CAAA,EACL,KAAA,CAAM,CAAA;QAAA,CAAA;IAAA,CAzBD;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAiCT,CAAA,CACC,CAAA,EACA,CAAA,EACA,CAAA,EACsB,CAEtB;QAAA,MAAO,CAAA,CAAA,CAAK,GAAI,CAAA,OAAA,EAAqB,CAAA,EAAS,CAAA,GAAW,CAExD;YAAA,GAAM,CAAA,CAAA,GAAW,CAAA,KAAa,CAAA;YAE9B,CAAA,CAAW,CAAA,EAAM,CAAA,EACf,IAAA,EAAK,CAAC,GAAuB,CAC7B;gBAAA,KAAA,CAAM,CAAA,EACJ,IAAA,EAAM,CAAA,GAAQ,CAAA,CAAI,IAAA;kBAClB,IAAA,EAAK,CAAC,GAAS,CACf;oBAAA,GAAM,CAAA,CAAA,GAAO,CAAA,CAAK,IAAA,CAAK,IAAA;oBACvB,CAAA,CAAO,MAAA,GAAS,CAAA,CAAK,MAAA,CAAO,GAAA,EAAI,CAAC,GACzB,EAAA,CACN,CAAA,CAAE,KAAA,CAAM,CAAA,GAAI,CAAA,CAAK,CAAA,EACjB,CAAA,CAAE,KAAA,CAAM,CAAA,GAAI,CAAA,CAAK,CAAA,EACjB,CAAA,CAAE,KAAA,CAAM,CAAA,GAAI,CAAA,CAAK,CAAA,EACjB,CAAA,CAAE,KAAA,CAAM,CAAA,GAAI,CAAA,CAAK,CAAA;;oBAGnB,GAAA,EAAA,GAAW,CAAA,EAAA,IAAQ,CAAA,CAAK,IAAA,CAAK,SAAA,CACxB,EAAA,CAAK,IAAA,KAAS,EAAA,CAAK,EAAA,GACtB,CAAA,CAAO,KAAA,CAAM,EAAA,CAAK,IAAA,IAAQ,EAAA,CAAK,IAAA,GAE/B,CAAA,CAAO,KAAA,CAAM,EAAA,CAAK,IAAA,IAAQ,CACzB;wBAAA,IAAA,EAAM,EAAA,CAAK,IAAA;wBACX,EAAA,EAAI,EAAA,CAAK,EAAA;wBAET,KAAA,EAAO,EAAA;wBACP,IAAA,GAAM,CAAA;oBAAA,CAAA;oBAIT,CAAA,CAAQ,CAAA;gBAAA,CAAA,EAER,KAAA,CAAM,CAAA;YAAA,CAAA,EAGR,KAAA,CAAM,CAAA;QAAA,CAAA;IAAA,CA1CD;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAgDT,EAAA,CACC,CAAA,EACA,CAAA,EACA,CAAA,EACA,CAAA,IAAiB,CAAA,EACK,CAEtB;iBAAA,CAAA,CACC,CAAA,EACA,CAAA,EACA,CAAA,EACa,CACb;YAAA,GAAM,CAAA,CAAA,GAAS,CAAA,CAAI,UAAA,CAAW,CAAA,EAAM,CAAA;YACpC,MAAI,CAAA,CAAA,KACH,CAAA,CAAO,OAAA,CAAQ,CAAA,IAAQ,CAAA,GAEjB,CAAA;QAAA,CATC;QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,iBAYF,CAAA,CAAK,GAAI,CAAA,OAAA,EAAqB,CAAA,EAAS,CAAA,GAAW,CAExD;YAAA,EAAA,GAAK,CAAA,KAAS,CAAA,EACb,MAAO,CAAA,CAAA,CAAO,CAAA;qBAGf,CAAA,CAAoB,CAAA,EAAc,CACjC;gBAAA,MAAO,CAAA,CAAA,GACN,KAAA,CAAM,CAAA,CAAO,QAAA,GAAW,CAAA,EACtB,IAAA,EAAM,CAAA,GAAM,CACZ;oBAAA,EAAA,EAAI,CAAA,CAAE,EAAA,EACL,MAAO,CAAA,CAAA,CAAE,IAAA;oBAET,KAAM,CAAA,GAAI,CAAA,KAAA,EAAM,eAAA,EAAkB,CAAA;gBAAA,CAAA,EAGnC,KAAA,CAAM,CAAA,IACN,GAAI,CAAA,OAAA,EAAQ,CAAC,GAAM,CAAA,CAAE,IAAA;;YAAA,CAGzB;YAAA,EAAA,EAdS,CAAA,CAAA,CAAA,EAAA,CAAA,cAcL,CAAA,EACH,OAAA,CAAQ,GAAA,CAAI,CAAC;gBAAA,CAAA,CAAW,CAAA;gBAAO,CAAA,CAAW,CAAA;YAAA,CAAA,EACxC,IAAA,GAAO,CAAA,EAAO,CAAA,IAA2C,CACzD;gBAAA,CAAA,CAAQ,CAAA,CAAc,CAAA,EAAM,CAAA,EAAO,CAAA;YAAA,CAAA,EAEnC,KAAA,CAAM,CAAA;iBAER,GAAI,CAAA,CACH;gBAAA,CAAA,CAAQ,CAAA,CAAc,CAAA,EAAM,CAAA,EAAM,CAAA;YAAA,CAAA,CAAA,KAAA,EAC1B,CAAA,EAAP,CACD;gBAAA,CAAA,CAAO,CAAA;YAAA,CAAA;QAAA,CAAA;IAAA,CAjDF;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aA2DT,CAAA,CACC,CAAA,EACA,CAAA,EACqB,CAErB;QAAA,GAAM,CAAA,CAAA,GAAM,CAAA,CAAO,QAAA,GAAW,CAAA;QAE9B,MAAO,CAAA,CAAA,CAAK,GAAI,CAAA,OAAA,EAAoB,CAAA,EAAS,CAAA,GAAW,CAEvD;YAAA,EAAA,GAAK,CAAA,EACJ,MAAO,CAAA,CAAA,EAAO,wBAAA,EAA2B,CAAA,CAAA,CAAA;YAI1C,MAAW,CAAA,CAAA,IAAS,CAAA,WACnB,KAAA,CAAM,CAAA,EACJ,IAAA,EAAM,CAAA,GAAQ,CACd;gBAAA,EAAA,EAAI,CAAA,CAAI,EAAA,EACP,MAAO,CAAA,CAAA,CAAI,WAAA;gBAEX,KAAM,CAAA,GAAI,CAAA,KAAA,EAAM,eAAA,EAAkB,CAAA;YAAA,CAAA,EAGnC,IAAA,EAAM,CAAA,GACC,GAAI,CAAA,OAAA,EAAS,CAAA,EAAU,CAAA,GAAY,CACzC;oBAAA,CAAA,CAAM,GAAA,CAAI,eAAA,CAAgB,CAAA,EAAM,CAAA,EAAU,CAAA;gBAAA,CAAA;cAG3C,IAAA,EAAM,CAAA,GAAqB,CAC3B;gBAAA,GAAM,CAAA,CAAA,GAAM,CACX;oBAAA,GAAA,EAAK,CAAA;gBAAA,CAAA;gBAEN,CAAI,KACH,CAAA,CAAO,MAAA,CAAO,CAAA,IAAQ,CAAA,GAEvB,CAAA,CAAQ,CAAA;YAAA,CAAA,EAER,KAAA,CAAM,CAAA;QAAA,CAAA;IAAA,CArCF;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aA4CT,EAAA,CAAkB,CAAA,GAAe,CAAA,OAA6B,CAC7D;QAAA,MAAO,CAAA,CAAA,CAAW,CAAA,EAAM,EAAA;IAAA,CADhB;IAAA,MAAA,CAAA,CAAA,CAAA,EAAA,EAAA,CAAA,YAIT,CAAA,CACC,CAAA,SACA,EAAA,EACA,EAAA,EACA,EAAA,GAGD,CAAA,CACC,CAAA,UACA,EAAA,EACA,EAAA,EACA,EAAA,GAGD,CAAA,CACC,CAAA,OACA,EAAA,EACA,CAAA,EACA,CAAA,EACA,CACC;QAAA,KAAA,EAAO,CAAA;IAAA,CAAA,GAIT,CAAA,CACC,CAAA,QACA,EAAA,EACA,CAAA,EACA,EAAA,GAGM,CACN;QAAA,QAAA,EAAA,CAAA;QACA,UAAA,EAAA,CAAA;QACA,eAAA,EAAA,EAAA;QACA,SAAA,EAAA,EAAA;QACA,YAAA,EAAA,CAAA;QACA,QAAA,EAAA,EAAA;QACA,SAAA,EAAA,CAAA;QACA,QAAA,EAAA,CAAA;QACA,UAAA,EAAA,EAAA;QACA,YAAA,EAAA,CAAA;QACA,IAAA,EAAA,CAAA;QACA,OAAA,EAAS,CAAA,CAAO,OAAA;QAChB,KAAA,EAAO,CAAA,CAAO,KAAA;QACd,MAAA,EAAQ,CAAA,CAAO,MAAA;QACf,OAAA,EAAS,CAAA,CAAO,OAAA;IAAA,CAAA;AAAA,CAvaT;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;AC3FT,GAAM,CAAA,EAAA,GAAW,EAAA;SAEjB,EAAA,CAAoB,CAAA,EAAU,CAAA,EAAgB,CAAA,GAAiB,CAAA;AAAA,CAAA,EAAY,CAjC3E;IAAA,GAAA,CAAA,CAAA;IAmCC,GAAI,CAAA,CAAA,GAAc,CAAA,CAAA,EACZ,CAAA,IAAM,CAAA,GAAA,CAAA,CAAI,GAAA,KAAJ,IAAA,GAAA,CAAA,GAAW,CAAA;aAGvB,CAAA,GAAgB,CAEf;QAAA,CAAI,CAAK,MAAA,GAAS,CAAA,KACjB,CAAA,GAAO,CAAA,CAAK,KAAA,CAAM,CAAA,EAAG,CAAA;QAGtB,GAAM,CAAA,CAAA,GAAM,CAAA,CAAK,CAAA,EAAG,CAAA,CAAI,MAAA;QAExB,CAAA,CAAK,OAAA,EAAS,CAAA,EAAK,CAAA,GAAM,CAExB;YAAA,GAAM,CAAA,EAAA,GAAW,EAAA,CAAI,CAAA,EAAG,CAAA,EAAG,CAAA,EAAK,CAAA,EAAG,GAAA,GAC7B,CAAA,GAAU,EAAA,CAAI,CAAA,EAAG,CAAA,EAAG,CAAA,EAAK,GAAA,EAAK,GAAA,GAE9B,EAAA,QAAa,CAClB;gBAAA,MAAA,CAAQ,CAAA,CAAI,IAAA;oBAAA,IACN,CAAA,CAAA;wBAAQ,MAAO,CAAA,CAAA,CAAI,GAAA,EAAK,GAAA,EAAK,GAAA;oBAAA,IAC7B,CAAA,CAAA;wBAAS,MAAO,CAAA,CAAA,CAAI,GAAA,EAAK,CAAA,EAAG,GAAA;;YAAA,CAAA,KAI7B,CAAA,GAAQ,CAAA,CAAI,OAAA,CAAQ,CACzB;gBAAA,IAAA,EAAM,CAAA,CAAI,GAAA;gBACV,IAAA,EAAM,CAAA,CAAO,KAAA,CAAM,IAAA;gBACnB,GAAA,EAAK,CAAA;gBACL,MAAA,EAAQ,CAAA;gBACR,KAAA,EAAO,EAAA;gBACP,IAAA,EAAM,EAAA,GAAW,CAAA,CAAI,KAAA;gBACrB,KAAA,EAAO,CAAA,CAAI,KAAA;gBACX,OAAA,EAAS,EAAA;YAAA,CAAA;YAGV,CAAA,CAAI,QAAA,CAAS,CACZ;gBAAA,GAAA,EAAK,CAAA;gBACL,KAAA,EAAO,CAAA,CAAM,KAAA;gBACb,MAAA,EAAQ,CAAA,CAAM,MAAA;gBACd,MAAA,EAAQ,CAAA;gBACR,KAAA,EAAO,CAAA,CAAI,CAAA,EAAG,CAAA,EAAG,CAAA;gBACjB,OAAA,EAAS,CAAA;YAAA,CAAA,GAGV,CAAA,CAAI,WAAA,CAAY,CAAA,GAChB,CAAA,CAAI,CAAA,IAAK,CAAA,CAAM,MAAA;QAAA,CAAA;IAAA,CAzCR;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aA+CT,CAAA,CAAe,CAAA,EAAa,CAC3B;QAAA,CAAA,CAAK,OAAA,CAAQ,CACZ;YAAA,IAAA,EAAM,CAAA;YACN,GAAA,EAAK,CAAA;QAAA,CAAA;IAAA,CAHE;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAOT,CAAA,CAAc,CAAA,EAAa,CAC1B;QAAA,CAAA,CAAK,OAAA,CAAQ,CACZ;YAAA,IAAA,EAAM,CAAA;YACN,GAAA,EAAK,CAAA;QAAA,CAAA;IAAA,CAHE;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAOT,CAAA,GAAiB,CAChB;QAAA,CAAA,GAAO,CAAA,CAAA;IAAA,CADC;IAAA,MAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,SAIF,CACN;QAAA,IAAA,EAAA,CAAA;QACA,KAAA,EAAA,CAAA;QACA,IAAA,EAAA,CAAA;QACA,KAAA,EAAA,CAAA;IAAA,CAAA;AAAA,CA3EO;AAAA,CAAA,CAAA,EAAA,EAAA,CAAA;AAAA,GAAA,CAAA,EAAA,GAAA,CAAA;AAAA,GAAA,CAAA,EAAA,GAAA,CAAA;ACcT,GAAO,CAAA,EAAA,GAAQ,CAAA,EAAC,CAAA,GAAiB,CAEhC;aAAA,CAAA,CAAiB,CAAA,GAAgB,CAAA,EAAG,CAAA,GAAe,CAAA,EAAgB,CAClE;QAAA,GAAI,CAAA,CAAA,GAAO,CAAA;QACX,MAAO,CAAA,CACN;YAAA,EAAA,EAAI,CAAA;YACJ,OAAA,EAAS,CAAE;gBAAA,CAAA;YAAA,CAAA;YACX,MAAA,IAAS,CACR;gBAAA,GAAM,CAAA,CAAA,GAAI,IAAA,CAAK,GAAA,CAAI,CAAA,GAAO,CAAA,IAAS,CAAA;gBACnC,CAAI,GAAI,CAAA,IACP,CAAA,CAAE,OAAA,CAAQ,IAAA,GAEX,IAAA,CAAK,KAAA,GAAQ,CAAA,CAAE,IAAA,CAAK,CAAA,GACpB,CAAA,IAAQ,CAAA,CAAE,EAAA;YAAA,CAAA;QAAA,CAAA;IAAA,CAXJ;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;IAgBT,GAAI,CAAA,CAAA,GAAW,IAAA,EACX,CAAA,GAAa,IAAA;IAEjB,CAAA,CAAE,UAAA,CAAW,IAAA,EAAM,EAAA,EAAO,IAAA,EAAM,CAAA,GAAQ,CAAA,GAAW,CAAA;OACnD,CAAA,CAAE,UAAA,CAAW,IAAA,EAAM,EAAA,EAAS,IAAA,EAAM,CAAA,GAAQ,CAAA,GAAa,CAAA;;aAEvD,CAAA,CAAmB,CAAA,EAAW,CAAA,GAAe,CAAA;IAAA,CAAA,EAAY,CAvE1D;QAAA,GAAA,CAAA,CAAA,EAAA,CAAA;QAyEE,GAAM,CAAA,CAAA,IAAS,CAAA,CAAI,KAAA,IAAS,CAAA,IAAK,CAAA,EAC3B,CAAA,GAAQ,CAAA,CAAI,KAAA,IAAS,CAAA,EAErB,CAAA,GAAO,CAAA,CAAE,GAAA,CAAI,CAClB;YAAA,CAAA,CAAE,GAAA,CAAI,CAAA;YACN,CAAA,CAAE,MAAA,CAAO,CAAA;YACT,CAAA,CAAE,KAAA,CAAM,CAAA;YACR,CAAA,CAAE,IAAA;YACF,CAAA,CAAE,MAAA,CAAO,CAAA;YACT,CAAA,CAAQ,CAAA,EAAO,CAAA;iBACX,CAAA,GAAA,CAAA,CAAI,SAAA,KAAJ,IAAA,GAAA,CAAA,OAAwB,CAAA,CAAA;;QAAA,CAAA,GAGvB,CAAA,GAAK,CAAA,CAAE,GAAA,CAAI,CAChB;YAAA,CAAA,CAAE,GAAA,CAAI,CAAA;YACN,CAAA,CAAE,MAAA,CAAO,CAAA;YACT,CAAA,CAAE,KAAA,CAAM,CAAA;YACR,CAAA,CAAE,IAAA;YACF,CAAA,CAAE,MAAA,CAAO,CAAA;YACT,CAAA,CAAE,KAAA,CAAM,GAAA,GAAM,CAAA,MAAa,CAAA,CAAG,GAAA,CAAI,CAAA,CAAQ,CAAA,EAAO,CAAA;;iBAC7C,CAAA,GAAA,CAAA,CAAI,OAAA,KAAJ,IAAA,GAAA,CAAA,OAAsB,CAAA,CAAA;;QAAA,CAAA;QAG3B,MAAO,CAAA,CACN;YAAA,OAAA,IAAU,CACT;gBAAA,CAAA,CAAE,OAAA,CAAQ,CAAA,GACV,CAAA,CAAE,OAAA,CAAQ,CAAA;YAAA,CAAA;QAAA,CAAA;IAAA,CA5BJ;IAAA,MAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,aAkCF,CACN;QAAA,SAAA,EAAA,CAAA;IAAA,CAAA;AAAA,CAAA,EA3Da,CAAA;ACiGf,GAAO,CAAA,EAAA,GAAQ,CAAA,EAAC,CAAA,GAAkB,CAAA;AAAA,CAAA,GAAkB,CAhJpD;IAAA,GAAA,CAAA,EAAA;IAkJA,GAAM,CAAA,CAAA,GAAQ,EAAA,IAER,CAAA,GAAM,EAAA,CAAQ,CACnB;QAAA,KAAA,EAAO,CAAA,CAAK,KAAA;QACZ,MAAA,EAAQ,CAAA,CAAK,MAAA;QACb,KAAA,EAAO,CAAA,CAAK,KAAA;QACZ,KAAA,EAAO,CAAA,CAAK,KAAA;QACZ,MAAA,EAAQ,CAAA,CAAK,MAAA;QACb,IAAA,EAAM,CAAA,CAAK,IAAA;QACX,OAAA,EAAS,CAAA,CAAK,OAAA;QACd,YAAA,GAAc,EAAA,GAAA,CAAA,CAAK,YAAA,KAAL,IAAA,GAAA,EAAA,IAAqB,CAAA;QACnC,QAAA,EAAU,CAAA,CAAM,GAAA;IAAA,CAAA,GAGX,CAAA,GAAM,EAAA,CAAQ,CAAA,CAAI,EAAA,EAAI,CAC3B;QAAA,UAAA,EAAY,CAAA,CAAK,UAAA,GAAa,CAAA,CAAI,CAAA,CAAK,UAAA,IAAc,IAAA,CAAA,CAAA;QACrD,KAAA,EAAO,CAAA,CAAK,KAAA;QACZ,MAAA,EAAQ,CAAA,CAAK,MAAA;QACb,KAAA,EAAO,CAAA,CAAK,KAAA;QACZ,SAAA,EAAW,CAAA,CAAK,SAAA;QAChB,OAAA,EAAS,CAAA,CAAK,OAAA;QACd,SAAA,EAAW,CAAA,CAAK,SAAA;IAAA,CAAA,GAGX,CACL,CAAA,KAAA,EAAA,CAAA,GACA,MAAA,EAAA,CAAA,EAAA,CAAA,GACG,CAAA,EAEE,CAAA,GAAS,EAAA,CAAW,CAAA,EAAK,CAAA,EAAO,CACrC;QAAA,UAAA,GAAa,CAAA,GAAgB,CAC5B;YAAA,CAAA,CAAO,KAAA,CAAM,CAAA;QAAA,CAAA;IAAA,CAAA,GAIT,CAAA,GAAS,EAAA,CAAW,CAAA,EAAK,CAAA,EAAQ,CACtC;QAAA,GAAA,EAAK,CAAA,CAAK,MAAA;IAAA,CAAA,GAGL,CAAA,GAAW,CAAA,UACX,CAAA,GAAW,CAAA;aAEjB,CAAA,GAAc,CACb;QAAA,MAAO,CAAA,CAAA,CAAI,EAAA,KAAO,CAAA,CAAM,SAAA;IAAA,CADhB;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAKT,CAAA,CAAc,CAAA,EAAY,CAAA,GAAoB,CAAA;IAAA,CAAA,EAAe,CAC5D;QAAA,GAAM,CAAA,CAAA,GAAK,CAAA,CAAM,IAAA,CAAK,CACrB;YAAA,GAAA,EAAK,GAAI,CAAA,WAAA,CAAY,CACpB;gBAAA,MAAA,EAAQ,CAAA;gBACR,gBAAA,EAAkB,CAAA;gBAClB,UAAA,EAAY,KAAA;YAAA,CAAA;QAAA,CAAA;QAGd,MAAA,CAAA,EAAA,KAAa,CACZ;YAAA,GAAM,CAAA,CAAA,GAAM,CAAA,CAAO,MAAA,CAAO,CAAA;YAC1B,EAAA,GAAK,CAAA,EACJ,KAAM,CAAA,GAAI,CAAA,KAAA,EAAM,kBAAA,EAAqB,CAAA,CAAA,CAAA;YAEtC,GAAM,CAAA,CAAA,GAAM,CAAA,CAAM,IAAA,CAAK,CAAA,EAAK,CAAA;YAC5B,GAAA,CAAA,GAAW,CAAA,CAAA,IAAK,CAAA,CACf,CAAA,CAAG,CAAA,IAAK,CAAA,CAAI,CAAA;QAAA,CAAA,GAGP,CAAA;IAAA,CAlBC;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAqBT,CAAA,GAA0B,CACzB;QAAA,MAAO,CAAA,CAAA,CAAI,QAAA;IAAA,CADH;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAIT,EAAA,GAA+B,CAC9B;QAAA,MAAO,CAAA,CAAA,CAAK,WAAA;IAAA,CADJ;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAKT,CAAA,CAAoB,CAAA,EAAoB,CA/NxC;QAAA,GAAA,CAAA,CAAA,EAAA,CAAA;QAgOC,EAAA,GAAK,CAAA,CAAI,MAAA,EACR,KAAM,CAAA,GAAI,CAAA,KAAA,CAAM,CAAA;QAEjB,GAAM,CAAA,CAAA,QACD,MAAO,CAAA,CAAA,CAAI,MAAA,IAAW,CAAA,UAClB,CAAA,CAAO,OAAA,CAAQ,CAAA,CAAI,MAAA,IAEnB,CAAA,CAAI,MAAA;;QAGb,EAAA,GAAK,CAAA,EACJ,KAAM,CAAA,GAAI,CAAA,KAAA,EAAM,mBAAA,EAAsB,CAAA,CAAI,MAAA,CAAA,CAAA;QAE3C,GAAM,CAAA,CAAA,GAAI,CAAA,CAAI,MAAA,EAAO,CAAA,GAAA,CAAA,CAAI,KAAA,KAAJ,IAAA,GAAA,CAAA,GAAa,CAAA;QAClC,EAAA,GAAK,CAAA,EACJ,KAAM,CAAA,GAAI,CAAA,KAAA,EAAM,iBAAA,GAAoB,CAAA,GAAA,CAAA,CAAI,KAAA,KAAJ,IAAA,GAAA,CAAA,GAAa,CAAA;QAElD,CAAA,CAAI,WAAA,CAAY,EAAA,CAAA,EAAA,CAAA,CAAA;QAAA,CAAA,EACZ,CAAA,GADY,CAEf;YAAA,GAAA,EAAK,CAAA,CAAI,GAAA;YACT,IAAA,EAAM,CAAA,CAAE,KAAA,CAAM,CAAA,CAAI,IAAA,IAAQ,EAAA,CAAK,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA;QAAA,CAAA;IAAA,CArBjC;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aA0BT,EAAA,CAAkB,CAAA,EAAkB,CAzPpC;QAAA,GAAA,CAAA,CAAA;QA2PC,GAAM,CAAA,CAAA,IAAM,CAAA,GAAA,CAAA,CAAI,IAAA,KAAJ,IAAA,GAAA,CAAA,GAAY,CAAA,EAClB,CAAA,GAAO,CAAA,CAAO,KAAA,CAAM,CAAA;QAC1B,EAAA,GAAK,CAAA,EACJ,KAAM,CAAA,GAAI,CAAA,KAAA,EAAM,gBAAA,EAAmB,CAAA;QAEpC,CAAA,CAAI,QAAA,CAAS,EAAA,CAAA,EAAA,CAAA,CAAA;QAAA,CAAA,EACT,CAAA,GADS,CAEZ;YAAA,IAAA,EAAM,CAAA;QAAA,CAAA;IAAA,CATC;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;IAaT,GAAM,CAAA,CAAA,GAAc,IAAA,EACd,EAAA,GAAa,CAAA,UAkDb,CAAA,GAAa,CAElB;QAAA,MAAA,GAAQ,CAAA;QAGR,MAAA,EAAQ,CAAA;QAAA,CAAA;QACR,SAAA,EAAW,CAAA;QAAA,CAAA;QAGX,IAAA,EAAM,GAAI,CAAA,EAAA;QACV,MAAA,EAAQ,GAAI,CAAA,EAAA;QAGZ,GAAA,EAAK,CACJ;YAAA,GAAA,EAAK,EAAA;YACL,KAAA,EAAO,CAAA,CAAK,CAAA;YACZ,KAAA,EAAO,CAAA;YACP,KAAA,EAAO,CAAA;QAAA,CAAA;QAGR,WAAA,EAAa,CAAA,CAAI,QAAA;QACjB,SAAA,EAAW,EAAA;QAGX,MAAA,EAAQ,CAAA;QAAA,CAAA;QACR,QAAA,EAAU,IAAA;QACV,OAAA,EAAS,CAAA;QAET,EAAA,EAAM,CAAA,EAAY,CAAA,EAAuB,CACxC;YAAA,MAAK,CAAA,IAAA,CAAK,MAAA,CAAO,CAAA,MAChB,IAAA,CAAK,MAAA,CAAO,CAAA,IAAM,GAAI,CAAA,EAAA,GAEhB,IAAA,CAAK,MAAA,CAAO,CAAA,EAAI,KAAA,CAAM,CAAA;QAAA,CAAA;QAG9B,OAAA,EAAQ,CAAA,KAAe,CAAA,EAAM,CAC5B;YAAA,IAAI,CAAK,MAAA,CAAO,CAAA,KACf,IAAA,CAAK,MAAA,CAAO,CAAA,EAAI,OAAA,EAAQ,CAAC,GAAO,CAAA,IAAM,CAAA;;QAAA,CAAA;QAIxC,MAAA,EAAQ,CAAA;QAAA,CAAA;QACR,MAAA,GAAQ,CAAA;IAAA,CAAA;aAIT,EAAA,CAAgB,CAAA,EAAgB,CAAA,EAAc,CAE7C;QAAA,CAAA,CAAK,OAAA,EAAS,CAAA,EAAM,CAAA,GAAQ,CAC3B;YAAA,CAAA,CAAK,MAAA,CAAO,CAAA,IAAQ,CAAA,GAAM,CAAA;QAAA,CAAA,GAGvB,CAAA,KACH,CAAA,CAAK,QAAA,GAAW,CAAA;IAAA,CAPT;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAYT,CAAA,IAAmB,CAAA,EAAW,CAC7B;QAAA,MAAI,CAAA,CAAA,CAAI,MAAA,GAAS,CAAA,KAChB,CAAA,CAAK,GAAA,CAAI,GAAA,GAAM,CAAA,IAAQ,CAAA,IAEjB,CAAA,CAAK,GAAA,CAAI,GAAA,CAAI,KAAA;IAAA,CAJZ;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAOT,CAAA,IAAqB,CAAA,EAAa,CACjC;QAAA,MAAI,CAAA,CAAA,CAAM,MAAA,GAAS,CAAA,KAClB,CAAA,CAAK,GAAA,CAAI,KAAA,GAAQ,CAAA,IAAQ,CAAA,IAEnB,CAAA,CAAK,GAAA,CAAI,KAAA,CAAM,KAAA;IAAA,CAJd;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAOT,CAAA,CAAgB,CAAA,EAAuB,CACtC;QAAA,MAAI,CAAA,CAAA,KAAU,IAAA,CAAA,CAAA,KACb,CAAA,CAAK,GAAA,CAAI,KAAA,GAAQ,CAAA,GAEX,CAAA,CAAK,GAAA,CAAI,KAAA;IAAA,CAJR;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAOT,CAAA,CAAe,CAAA,GAAoB,EAAA,EAAI,CACtC;QAAA,CAAA,CAAK,GAAA,CAAI,KAAA,GAAQ,CAAA;IAAA,CADT;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAIT,CAAA,CAAkB,CAAA,EAAe,CAChC;QAAA,MAAO,CAAA,CAAA,CAAK,SAAA,CAAU,QAAA,CAAS,CAAA;IAAA,CADvB;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAIT,CAAA,CAAiB,CAAA,EAAe,CAC/B;QAAA,MAAO,CAAA,CAAA,CAAK,SAAA,CAAU,MAAA,GAAS,QAAA,CAAS,CAAA;IAAA,CADhC;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;IAIT,GAAM,CAAA,CAAA,GAAY,GAAI,CAAA,GAAA,CAAI,CACzB;QAAA,CAAA;QACA,CAAA;IAAA,CAAA,GAGK,CAAA,GAAc,GAAI,CAAA,GAAA,CAAI,CAC3B;QAAA,CAAA;QACA,CAAA;QACA,CAAA;QACA,CAAA;QACA,CAAA;QACA,CAAA;IAAA,CAAA;aAGD,CAAA,CAAiB,CAAA,EAAgC,CAEhD;QAAA,GAAM,CAAA,CAAA,GAAa,GAAI,CAAA,GAAA,EACjB,CAAA,GAAc,CAAA;QAAA,CAAA,EACd,CAAA,GAAS,CAAA;QAAA,CAAA,EAET,CAAA,GAAM,CAEX;YAAA,GAAA,EAAK,IAAA;YACL,MAAA,GAAQ,CAAA;YACR,MAAA,GAAQ,CAAA;YAGR,GAAA,EAAI,CAAA,EAAkB,CAErB;gBAAA,EAAA,GAAK,CAAA,EACJ,MAAA;gBAID,EAAA,EAAI,MAAO,CAAA,CAAA,IAAS,CAAA,SACnB,MAAO,CAAA,IAAA,CAAK,GAAA,CAAI,CACf;oBAAA,EAAA,EAAI,CAAA;gBAAA,CAAA;gBAKN,CAAI,CAAK,EAAA,KACR,IAAA,CAAK,KAAA,CAAM,CAAA,CAAK,EAAA,GAChB,CAAA,CAAW,GAAA,CAAI,CAAA,CAAK,EAAA,EAAI,CAAA;gBAAA,CAAA;gBAIzB,GAAM,CAAA,CAAA,GAAQ,CAAA,CAAK,EAAA,GAAK,CAAA,CAAW,GAAA,CAAI,CAAA,CAAK,EAAA,IAAM,CAAA;gBAElD,CAAA,CAAM,QAAA,GAAW,CAAA,CAAA;gBAEjB,GAAA,CAAA,GAAW,CAAA,EAAA,IAAK,CAAA,CAEf,EAAA,GAAI,CAAA,CAAU,GAAA,CAAI,EAAA,GAKlB,CAAA;oBAAA,EAAA,EAAI,MAAO,CAAA,CAAA,CAAK,EAAA,KAAO,CAAA,WAAY,CAClC;wBAAA,GAAM,CAAA,CAAA,GAAO,CAAA,CAAK,EAAA,EAAG,IAAA,CAAK,IAAA;wBAC1B,EAAA,EAAI,CAAA,CAAY,GAAA,CAAI,EAAA,GAAI,CACvB;4BAAA,CAAA,CAAM,QAAA,CAAS,IAAA,CAAK,IAAA,CAAK,EAAA,CAAG,EAAA,EAAG,CAAA,IAC/B,CAAA,CAAM,EAAA,IAAK,CAAA;4BACX,QAAA;wBAAA,CAAA,MAEA,CAAA,CAAM,EAAA,IAAK,CAAA;oBAAA,CAAA,MAGZ,CAAA,CAAM,EAAA,IAAK,CAAA,CAAK,EAAA;oBAGjB,IAAI,CAAK,EAAA,MAAO,IAAA,CAAA,CAAA,IAEf,MAAA,CAAO,cAAA,CAAe,IAAA,EAAM,EAAA,EAAG,CAC9B;wBAAA,GAAA,MAAW,CAAA,CAAM,EAAA;;wBACjB,GAAA,GAAM,CAAA,GAAQ,CAAA,CAAM,EAAA,IAAK,CAAA;;wBACzB,YAAA,GAAc,CAAA;wBACd,UAAA,GAAY,CAAA;oBAAA,CAAA;gBAAA,CAMf;gBAAA,GAAM,CAAA,CAAA,GAAY,CAAA,KAAM,CACvB;oBAAA,EAAA,IAAK,CAAA,CAAK,OAAA,EAAA,CAGV;wBAAA,GAAA,EAAA,GAAW,CAAA,CAAA,IAAO,CAAA,CAAK,OAAA,CACtB,EAAA,GAAK,IAAA,CAAK,CAAA,CAAE,CAAA,GACX,KAAM,CAAA,GAAI,CAAA,KAAA,EAAM,MAAA,EAAS,CAAA,CAAK,EAAA,CAAA,iBAAA,EAAsB,CAAA,CAAA,CAAA;oBAAA,CAAA;gBAAA,CAAA,EANrC,CAAA;gBAYd,IAAA,CAAK,MAAA,MACJ,CAAA,CAAK,GAAA,IACR,CAAA,CAAK,GAAA,CAAI,IAAA,CAAK,IAAA,GAEX,CAAA,CAAK,IAAA,IACR,EAAA,KAAa,CAAA,CAAK,IAAA,CAAK,IAAA,CAAK,IAAA;mBAE7B,CAAA,MAEI,CAAA,CAAK,OAAA,IACR,CAAA,CAAM,QAAA,CAAS,IAAA,CAAK,IAAA,CAAK,EAAA,CAAG,CAAA,UAAa,CACxC;oBAAA,CAAA;gBAAA,CAAA;YAAA,CAAA;YAOJ,KAAA,EAAM,CAAA,EAAS,CACd;gBAAA,EAAA,EAAI,CAAA,CAAW,GAAA,CAAI,CAAA,GAAK,CACvB;oBAAA,GAAM,CAAA,CAAA,GAAO,CAAA,CAAW,GAAA,CAAI,CAAA;oBAC5B,CAAA,CAAK,QAAA,CAAS,OAAA,EAAQ,CAAC,GAAM,CAAA;;oBAC7B,GAAA,CAAA,GAAW,CAAA,EAAA,IAAK,CAAA,CACf,MAAO,CAAA,CAAA,CAAK,EAAA;gBAAA,CAGd;gBAAA,CAAA,CAAW,MAAA,CAAO,CAAA;YAAA,CAAA;YAGnB,CAAA,EAAE,CAAA,EAAe,CAChB;gBAAA,MAAO,CAAA,CAAA,CAAW,GAAA,CAAI,CAAA;YAAA,CAAA;YAGvB,MAAA,IAAkB,CACjB;gBAAA,MAAO,CAAA,IAAA,CAAK,GAAA,KAAQ,IAAA;YAAA,CAAA;YAGrB,EAAA,EAAG,CAAA,EAA2B,CAC7B;gBAAA,EAAA,EAAI,CAAA,KAAQ,CAAA,IACX,MAAO,EAAA,CAAA;gBAER,EAAA,EAAI,KAAA,CAAM,OAAA,CAAQ,CAAA,GAAM,CACvB;oBAAA,GAAA,EAAA,GAAW,CAAA,CAAA,IAAK,CAAA,CACf,EAAA,GAAK,IAAA,CAAK,CAAA,CAAE,CAAA,GACX,MAAO,EAAA,CAAA;oBAGT,MAAO,EAAA,CAAA;gBAAA,CAAA,MAEP,MAAO,CAAA,IAAA,CAAK,CAAA,CAAE,CAAA,KAAQ,IAAA;YAAA,CAAA;YAIxB,EAAA,EAAG,CAAA,EAAY,CAAA,EAAoB,CAClC;gBAAA,MAAK,CAAA,CAAA,CAAO,CAAA,MACX,CAAA,CAAO,CAAA,IAAM,GAAI,CAAA,EAAA,GAEX,CAAA,CAAO,CAAA,EAAI,KAAA,CAAM,CAAA;YAAA,CAAA;YAGzB,MAAA,KAAU,CAAA,EAAsB,CAC/B;gBAAA,MAAO,CAAA,IAAA,CAAK,QAAA,IAAY,CAAA;YAAA,CAAA;YAGzB,OAAA,EAAQ,CAAA,KAAe,CAAA,EAAY,CAE9B;gBAAA,CAAA,CAAO,CAAA,KACV,CAAA,CAAO,CAAA,EAAI,OAAA,EAAS,CAAA,GAAO,CAAA,CAAG,IAAA,CAAK,IAAA,KAAS,CAAA;;gBAG7C,GAAM,CAAA,CAAA,GAAU,CAAA,CAAK,SAAA,CAAU,CAAA;gBAE/B,CAAI,IACH,CAAA,CAAQ,OAAA,EAAQ,CAAC,GAAM,CAClB;oBAAA,IAAA,CAAK,EAAA,CAAG,CAAA,CAAE,GAAA,KACb,CAAA,CAAE,EAAA,CAAG,IAAA,KAAS,CAAA;gBAAA,CAAA;YAAA,CAAA;YAOlB,OAAA,IAAU,CAET;iBAAK,IAAA,CAAK,MAAA,OAIV,IAAA,CAAK,OAAA,CAAQ,CAAA,WACb,CAAA,CAAK,IAAA,CAAK,MAAA,CAAO,IAAA,CAAK,GAAA,GACtB,IAAA,CAAK,GAAA,GAAM,IAAA;YAAA,CAAA;YAIZ,OAAA,IAAU,CACT;gBAAA,GAAM,CAAA,CAAA,GAAO,CAAA;gBAAA,CAAA;gBACb,GAAA,EAAA,GAAiB,EAAL,CAAA,EAAK,CAAA,KAAS,CAAA,CACzB,CAAA,CAAK,CAAA,IAAO,CAAA,CAAK,OAAA,GAAU,CAAA,CAAK,OAAA,KAAY,IAAA;gBAE7C,MAAO,CAAA,CAAA;YAAA,CAAA;YAGR,QAAA,EAAS,CAAA,EAAgC,CACxC;gBAAA,MAAO,CAAA,IAAA,CAAK,EAAA,CAAG,CAAA,SAAU,CAAA;YAAA,CAAA;YAG1B,MAAA,EAAO,CAAA,EAAgC,CACtC;gBAAA,MAAO,CAAA,IAAA,CAAK,EAAA,CAAG,CAAA,OAAQ,CAAA;YAAA,CAAA;YAGxB,SAAA,EAAU,CAAA,EAAoC,CAC7C;gBAAA,MAAO,CAAA,IAAA,CAAK,EAAA,CAAG,CAAA,UAAW,CAAA;YAAA,CAAA;QAAA,CAAA;QAK5B,GAAA,EAAA,GAAW,CAAA,EAAA,IAAQ,CAAA,CAClB,CAAA,CAAI,GAAA,CAAI,EAAA;QAGT,MAAO,CAAA,CAAA;IAAA,CAzMC;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aA6MT,CAAA,CAAgB,CAAA,EAAgC,CAC/C;QAAA,GAAM,CAAA,CAAA,GAAM,CAAA,CAAK,CAAA;QACjB,MAAA,CAAA,CAAA,CAAI,GAAA,GAAM,CAAA,CAAK,IAAA,CAAK,IAAA,CAAK,CAAA,GACzB,CAAA,CAAI,OAAA,CAAQ,CAAA,OACZ,EAAA,KAAa,CAAA,CAAI,OAAA,CAAQ,CAAA;WAClB,CAAA;IAAA,CALC;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAQT,EAAA,CAAe,CAAA,EAAuB,CACrC;QAAA,EAAA,IAAK,CAAA,CAAI,MAAA,IAGT,MAAA,CAAA,CAAA,CAAK,IAAA,CAAK,MAAA,CAAO,CAAA,CAAI,GAAA,GACrB,CAAA,CAAI,GAAA,GAAM,CAAA,CAAK,IAAA,CAAK,IAAA,CAAK,CAAA,GAClB,CAAA;IAAA,CANC;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAUT,CAAA,CAAY,CAAA,EAAe,CAAA,EAAU,CAAA,EAAqD,CACzF;QAAA,MAAK,CAAA,CAAA,CAAK,SAAA,CAAU,CAAA,MACnB,CAAA,CAAK,SAAA,CAAU,CAAA,IAAS,GAAI,CAAA,EAAA,GAEtB,CAAA,CAAK,SAAA,CAAU,CAAA,EAAO,KAAA,CAAM,CAClC;YAAA,GAAA,EAAK,CAAA;YACL,EAAA,EAAI,CAAA;QAAA,CAAA;IAAA,CANG;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAYT,CAAA,CAAkB,CAAA,EAAyB,CAAA,EAA6C,CACvF;QAAA,EAAA,EAAI,MAAO,CAAA,CAAA,IAAQ,CAAA,aAAc,CAAA,KAAO,IAAA,CAAA,CAAA,EACvC,MAAO,CAAA,CAAA,CAAI,CAAC;YAAA,CAAE;gBAAA,MAAA,EAAQ,CAAA;YAAA,CAAA;QAAA,CAAA,EAAS,OAAA;QACzB,EAAA,EAAI,MAAO,CAAA,CAAA,IAAQ,CAAA,SACzB,MAAO,CAAA,CAAA,CAAG,CAAA,SAAU,CAAA,EAAK,CAAA;IAAA,CAJlB;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAST,EAAA,CAAgB,CAAA,EAAyB,CAAA,EAA6B,CACrE;QAAA,EAAA,EAAI,MAAO,CAAA,CAAA,IAAQ,CAAA,aAAc,CAAA,KAAO,IAAA,CAAA,CAAA,EACvC,MAAO,CAAA,CAAA,CAAI,CAAC;YAAA,CAAE;gBAAA,IAAA,EAAM,CAAA;YAAA,CAAA;QAAA,CAAA,EAAS,OAAA;QACvB,EAAA,EAAI,MAAO,CAAA,CAAA,IAAQ,CAAA,SACzB,MAAO,CAAA,CAAA,CAAG,CAAA,OAAQ,CAAA,EAAK,CAAA;IAAA,CAJhB;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAST,EAAA,CACC,CAAA,EACA,CAAA,EACA,CAAA,EACiB,CACjB;QAAA,GAAM,CAAA,CAAA,GAAK,CAAA,CAAG,CAAA,UAAW,CAAA,GAAK,CAAA,EAAG,CAAA,EAAG,CAAA,GAAQ,CAAA,CAAE,EAAA,CAAG,CAAA,KAAO,CAAA,CAAE,CAAA,EAAG,CAAA,EAAG,CAAA;WAC1D,CAAA,GAAK,CAAA,CAAG,CAAA,UAAW,CAAA,GAAK,CAAA,EAAG,CAAA,EAAG,CAAA,GAAQ,CAAA,CAAE,EAAA,CAAG,CAAA,KAAO,CAAA,CAAE,CAAA,EAAG,CAAA,EAAG,CAAA;WAC1D,CAAA,GAAK,CAAA,CAAS,CAAA,GAAI,CAAC,GAAgB,CACxC;YAAA,EAAA,GAAK,CAAA,CAAG,IAAA,EACP,KAAM,CAAA,GAAI,CAAA,KAAA,CAAM,CAAA;YAEjB,CAAA,CAAG,gBAAA,CAAiB,CAAA,GAAK,CAAA,GAAO,CAC/B;gBAAA,CAAA,CAAE,CAAA,EAAI,CAAA;YAAA,CAAA;QAAA,CAAA;QAGR,MAAO,KAAM,CAAC;gBAAA,CAAA;gBAAI,CAAA;gBAAI,CAAA;YAAA,CAAA,CAAI,OAAA,EAAS,CAAA,GAAM,CAAA;;;IAAA,CAfjC;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAmBT,EAAA,CAAiB,CAAA,EAAyB,CAAA,EAA6C,CACtF;QAAA,MAAI,CAAA,MAAO,CAAA,CAAA,IAAQ,CAAA,YACX,CAAA,CAAa,CAAA,IAEb,CAAA,CAAS,CAAA,GAAK,CAAC,GAAe,CACpC;YAAA,EAAA,GAAK,CAAA,CAAE,IAAA,EAAM,KAAM,CAAA,GAAI,CAAA,KAAA,CAAM,CAAA;YAC7B,CAAI,CAAE,SAAA,MACL,CAAA,CAAG,CAAA;QAAA,CAAA;IAAA,CAPE;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAcT,EAAA,CAAiB,CAAA,EAAW,CAAA,EAAiC,CAAA,EAAqD,CACjH;QAAA,MAAO,CAAA,CAAA,CAAS,CAAA,GAAI,CAAA,GAAe,CAClC;YAAA,EAAA,GAAK,CAAA,CAAE,IAAA,EAAM,KAAM,CAAA,GAAI,CAAA,KAAA,CAAM,CAAA;YACzB,CAAA,CAAE,UAAA,KACL,CAAA,CAAQ,CAAA,IAEJ,CAAA,IACH,CAAA,CAAW,CAAA;QAAA,CAAA;IAAA,CAPN;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAcT,EAAA,CAAc,CAAA,EAAW,CAAA,EAA+B,CACvD;QAAA,MAAO,CAAA,GAAI,CAAA,OAAA,EAAQ,CAAC,GAAY,CAC/B;YAAA,CAAA,CAAK,MAAA,CAAO,IAAA,CAAK,CAChB;gBAAA,IAAA,EAAM,CAAA;gBACN,MAAA,MAAc,CACb;oBAAA,CAAI,IACH,CAAA,IAED,CAAA;gBAAA,CAAA;YAAA,CAAA;QAAA,CAAA;IAAA,CARK;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAeT,EAAA,CAAc,CAAA,EAAW,CAAA,EAA+B,CAEvD;QAAA,GAAI,CAAA,CAAA,IAAU,CAAA,EAER,CAAA,GAAO,CAAA,KAAM,CAClB;YAAA,CAAI,KAGJ,CAAA,IACA,EAAA,CAAK,CAAA,EAAG,CAAA;QAAA,CAAA,EALI,CAAA;QAQb,MAAA,CAAA,CAAA,QAEa,CAAA,IAAU,CAAA;;IAAA,CAdf;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAmBT,CAAA,CAAmB,CAAA,EAAgB,CAAA,EAA+B,CACjE;QAAA,EAAA,EAAI,KAAA,CAAM,OAAA,CAAQ,CAAA,GAAI,CACrB;YAAA,GAAM,CAAA,CAAA,GAAa,CAAA,CAAE,GAAA,EAAK,CAAA,GAAQ,CAAA,CAAU,CAAA,EAAK,CAAA;;YACjD,MAAO,KAAM,CAAA,CAAW,OAAA,EAAQ,CAAC,GAAO,CAAA;;;QAAA,CAExC;QAAA,MAAO,CAAA,CAAA,CAAK,EAAA,CAAG,CAAA,YAAe,CAAA,CAAI,SAAA,CAAU,CAAA,KAAM,CAAA;;IAAA,CAL3C;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAST,CAAA,CAAoB,CAAA,EAA+B,CAAA,EAAgC,CAClF;QAAA,EAAA,EAAI,KAAA,CAAM,OAAA,CAAQ,CAAA,GAAI,CACrB;YAAA,GAAM,CAAA,CAAA,GAAa,CAAA,CAAE,GAAA,EAAI,CAAC,GAAQ,CAAA,CAAW,CAAA,EAAK,CAAA;;YAClD,MAAO,KAAM,CAAA,CAAW,OAAA,EAAQ,CAAC,GAAO,CAAA;;;QAAA,CAAA,MAClC,MAAI,CAAA,MAAO,CAAA,CAAA,IAAM,CAAA,YAChB,CAAA,CAAK,EAAA,CAAG,CAAA,YAAe,CAAA,CAAI,YAAA,MAAkB,CAAA;YAE7C,CAAA,CAAK,EAAA,CAAG,CAAA,YAAe,CAAA,CAAI,YAAA,CAAa,CAAA,KAAM,CAAA;;IAAA,CAP9C;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAWT,CAAA,CAA0B,CAAA,EAA+B,CAAA,EAAgC,CACxF;QAAA,EAAA,EAAI,KAAA,CAAM,OAAA,CAAQ,CAAA,GAAI,CACrB;YAAA,GAAM,CAAA,CAAA,GAAa,CAAA,CAAE,GAAA,EAAI,CAAC,GAAQ,CAAA,CAAiB,CAAA,EAAK,CAAA;;YACxD,MAAO,KAAM,CAAA,CAAW,OAAA,EAAQ,CAAC,GAAO,CAAA;;;QAAA,CAAA,MAClC,MAAI,CAAA,MAAO,CAAA,CAAA,IAAM,CAAA,YAChB,CAAA,CAAK,EAAA,CAAG,CAAA,YAAe,CAAA,CAAI,YAAA,MAAkB,CAAA;YAE7C,CAAA,CAAK,EAAA,CAAG,CAAA,YAAe,CAAA,CAAI,kBAAA,CAAmB,CAAA,KAAM,CAAA;;IAAA,CAPpD;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAWT,CAAA,CAAsB,CAAA,EAA+B,CAAA,EAAgC,CACpF;QAAA,EAAA,EAAI,KAAA,CAAM,OAAA,CAAQ,CAAA,GAAI,CACrB;YAAA,GAAM,CAAA,CAAA,GAAa,CAAA,CAAE,GAAA,EAAI,CAAC,GAAQ,CAAA,CAAa,CAAA,EAAK,CAAA;;YACpD,MAAO,KAAM,CAAA,CAAW,OAAA,EAAS,CAAA,GAAO,CAAA;;;QAAA,CAAA,MAClC,MAAI,CAAA,MAAO,CAAA,CAAA,IAAM,CAAA,YAChB,CAAA,CAAK,EAAA,CAAG,CAAA,YAAe,CAAA,CAAI,aAAA,MAAmB,CAAA;YAE9C,CAAA,CAAK,EAAA,CAAG,CAAA,YAAe,CAAA,CAAI,aAAA,CAAc,CAAA,KAAM,CAAA;;IAAA,CAP/C;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAWT,CAAA,CACC,CAAA,EACA,CAAA,EACiB,CACjB;QAAA,MAAI,CAAA,MAAO,CAAA,CAAA,IAAM,CAAA,YACT,CAAA,CAAK,EAAA,CAAG,CAAA,YAAe,CAAA,CAAI,WAAA,MAAiB,CAAA,CAAE,CAAA;YAE9C,CAAA,CAAK,EAAA,CAAG,CAAA,YAAe,CAAA,CAAI,WAAA,CAAY,CAAA,KAAM,CAAA,CAAO,CAAA;;IAAA,CAPpD;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAWT,CAAA,CACC,CAAA,EACA,CAAA,EACiB,CACjB;QAAA,MAAI,CAAA,MAAO,CAAA,CAAA,IAAM,CAAA,YACT,CAAA,CAAK,EAAA,CAAG,CAAA,YAAe,CAAA,CAAI,cAAA,MAAoB,CAAA,CAAE,CAAA;YAEjD,CAAA,CAAK,EAAA,CAAG,CAAA,YAAe,CAAA,CAAI,cAAA,CAAe,CAAA,KAAM,CAAA,CAAO,CAAA;;IAAA,CAPvD;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAWT,CAAA,CACC,CAAA,EACA,CAAA,EACiB,CACjB;QAAA,MAAI,CAAA,MAAO,CAAA,CAAA,IAAM,CAAA,YACT,CAAA,CAAK,EAAA,CAAG,CAAA,YAAe,CAAA,CAAI,eAAA,MAAqB,CAAA,CAAE,CAAA;YAElD,CAAA,CAAK,EAAA,CAAG,CAAA,YAAe,CAAA,CAAI,eAAA,CAAgB,CAAA,KAAM,CAAA,CAAO,CAAA;;IAAA,CAPxD;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAWT,CAAA,CAAqB,CAAA,EAAoD,CACxE;QAAA,MAAO,CAAA,CAAA,CAAK,EAAA,CAAG,CAAA,YAAe,CAAA,CAAI,YAAA,MAAkB,CAAA,CAAE,CAAA,IAAY,CAAA,CAAI,aAAA;;IAAA,CAD9D;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAIT,CAAA,CAAqB,CAAA,EAAyC,CAC7D;QAAA,MAAO,CAAA,CAAA,CAAK,EAAA,CAAG,CAAA,YAAe,CAAA,CAAI,YAAA,GAAe,OAAA,EAAS,CAAA,GAAO,CAAA,CAAE,CAAA;;;IAAA,CAD3D;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA,eAKT,CAAA,CAAI,MAAA,CAAO,gBAAA,CAAiB,CAAA,cAAc,CAAC,GAAM,CAChD;QAAA,CAAC;eAAG,CAAA,CAAE,cAAA;QAAA,CAAA,CAAgB,OAAA,EAAS,CAAA,GAAM,CACpC;YAAA,CAAA,CAAK,OAAA,CAAQ,CAAA,eAAgB,CAAA,CAAE,UAAA,EAAY,CAAA,CAAK,CAAA,CAAE,OAAA,EAAS,CAAA,CAAE,OAAA,EAAS,KAAA,CAAM,CAAA,GAAI,CAAA,CAAI,KAAA;QAAA,CAAA;IAAA,CAAA,GAItF,CAAA,CAAI,MAAA,CAAO,gBAAA,CAAiB,CAAA,aAAc,CAAA,GAAM,CAC/C;QAAA,CAAC;eAAG,CAAA,CAAE,cAAA;QAAA,CAAA,CAAgB,OAAA,EAAQ,CAAC,GAAM,CACpC;YAAA,CAAA,CAAK,OAAA,CAAQ,CAAA,cAAe,CAAA,CAAE,UAAA,EAAY,CAAA,CAAK,CAAA,CAAE,OAAA,EAAS,CAAA,CAAE,OAAA,EAAS,KAAA,CAAM,CAAA,GAAI,CAAA,CAAI,KAAA;QAAA,CAAA;IAAA,CAAA,GAIrF,CAAA,CAAI,MAAA,CAAO,gBAAA,CAAiB,CAAA,aAAc,CAAA,GAAM,CAC/C;QAAA,CAAC;eAAG,CAAA,CAAE,cAAA;QAAA,CAAA,CAAgB,OAAA,EAAS,CAAA,GAAM,CACpC;YAAA,CAAA,CAAK,OAAA,CAAQ,CAAA,aAAc,CAAA,CAAE,UAAA,EAAY,CAAA,CAAK,CAAA,CAAE,OAAA,EAAS,CAAA,CAAE,OAAA,EAAS,KAAA,CAAM,CAAA,GAAI,CAAA,CAAI,KAAA;QAAA,CAAA;IAAA,CAAA;aAIpF,EAAA,CAAsB,CAAA,EAAqD,CAC1E;QAAA,MAAO,CAAA,CAAA,CAAK,EAAA,CAAG,CAAA,eAAgB,CAAA;IAAA,CADvB;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAIT,CAAA,CAAqB,CAAA,EAAqD,CACzE;QAAA,MAAO,CAAA,CAAA,CAAK,EAAA,CAAG,CAAA,cAAe,CAAA;IAAA,CADtB;IAAA,CAAA,CAAA,CAAA,EAAA,CAAA;aAIT,EAAA,CAAoB,CAAA,EAAqD,CACxE;QAAA,MAAO,CAAA,CAAA,CAAK,EAAA,CAAG,CAAA,aAAc,CAAA;IAAA,CADrB;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAIT,EAAA,GAA0B,CAEzB;QAAA,CAAA,CAAW,CAAA,SAAY,CACtB;YAAA,CAAA,CAAM,OAAA,IAAW,CAAA,CAAM,OAAA;QAAA,CAAA,GAGxB,CAAA,CAAW,CAAA,SAAY,CACtB;YAAA,CAAA,CAAM,QAAA;QAAA,CAAA,GAGP,CAAA,CAAW,CAAA,SAAY,CACtB;YAAA,CAAA,CAAM,MAAA,IAAU,CAAA,CAAM,MAAA;QAAA,CAAA,GAGvB,CAAA,CAAW,CAAA,SAAY,CACtB;YAAA,CAAA,CAAM,SAAA,GAAY,EAAA,CAAQ,EAAA,CAAM,CAAA,CAAM,SAAA,GAAY,GAAA,EAAK,CAAA,EAAG,CAAA,GAAI,CAAA;QAAA,CAAA,GAG/D,CAAA,CAAW,CAAA,SAAY,CACtB;YAAA,CAAA,CAAM,SAAA,GAAY,EAAA,CAAQ,EAAA,CAAM,CAAA,CAAM,SAAA,GAAY,GAAA,EAAK,CAAA,EAAG,CAAA,GAAI,CAAA;QAAA,CAAA,GAG/D,CAAA,CAAW,CAAA,UAAa,CACvB;YAAA,CAAA,CAAM,SAAA;QAAA,CAAA,GAGP,CAAA,CAAW,CAAA,SAAY,CACtB;YAAA,EAAA,CAAY,CAAA,CAAI,UAAA,IAAc,CAAA;QAAA,CAAA,GAG/B,CAAA,CAAW,CAAA,SAAY,CAClB;YAAA,CAAA,CAAM,YAAA,IACT,CAAA,CAAM,YAAA,CAAa,QAAA,IACnB,CAAA,CAAM,YAAA,GAAe,IAAA,IAErB,CAAA,CAAM,YAAA,GAAe,EAAA;QAAA,CAAA;IAAA,CAnCf;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAyCT,EAAA,GAAyB,CACxB;QAAA,CAAA,CAAW,CAAA,IAAK,CAAA,CAAM,IAAA;IAAA,CADd;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAMT,EAAA,CAAa,CAAA,EAA4B,CAExC;QAAA,GAAM,CAAA,CAAA,GAAO,CAAC;eAAG,CAAA,CAAK,IAAA,CAAK,MAAA;QAAA,CAAA,CAAU,IAAA,EAAM,CAAA,EAAI,CAAA,GAAO,CAn5BvD;YAAA,GAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA;YAq5BE,GAAM,CAAA,CAAA,IAAK,CAAA,GAAA,CAAA,CAAK,MAAA,EAAO,CAAA,GAAA,CAAA,CAAG,KAAA,KAAH,IAAA,GAAA,CAAA,GAAY,CAAA,CAAK,QAAA,MAA7B,IAAA,GAAA,CAAA,GAA0C,CAAA,EAC/C,CAAA,IAAK,CAAA,GAAA,CAAA,CAAK,MAAA,EAAO,CAAA,GAAA,CAAA,CAAG,KAAA,KAAH,IAAA,GAAA,CAAA,GAAY,CAAA,CAAK,QAAA,MAA7B,IAAA,GAAA,CAAA,GAA0C,CAAA;YAGrD,MAAI,CAAA,CAAA,IAAM,CAAA,KACD,CAAA,GAAA,CAAA,CAAG,CAAA,KAAH,IAAA,GAAA,CAAA,GAAQ,CAAA,MAAM,CAAA,GAAA,CAAA,CAAG,CAAA,KAAH,IAAA,GAAA,CAAA,GAAQ,CAAA,IAEvB,CAAA,GAAK,CAAA;QAAA,CAAA;QAKd,MAAK,CAAA,CAAA,GAGG,CAAA,CAAK,MAAA,EAAO,CAAA,GAAO,CAAA,CAAI,EAAA,CAAG,CAAA;YAF1B,CAAA;IAAA,CAjBA;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAyBT,EAAA,CAAkB,CAAA,EAAwC,CAAA,EAAyB,CAClF;QAAA,EAAA,EAAI,MAAO,CAAA,CAAA,IAAM,CAAA,aAAc,CAAA,KAAM,IAAA,CAAA,CAAA,EACpC,MAAO,CAAA,EAAA,GAAM,OAAA,EAAQ,CAAC,GAAQ,CAAA,CAAI,MAAA,MAAY,CAAA,CAAE,CAAA;;QAC1C,EAAA,EAAI,MAAO,CAAA,CAAA,IAAM,CAAA,WAAY,KAAA,CAAM,OAAA,CAAQ,CAAA,GACjD,MAAO,CAAA,EAAA,CAAI,CAAA,EAAG,OAAA,EAAQ,CAAC,GAAQ,CAAA,CAAI,MAAA,MAAY,CAAA,CAAE,CAAA;;IAAA,CAJ1C;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAST,EAAA,CAAmB,CAAA,EAAwC,CAAA,EAAyB,CACnF;QAAA,EAAA,EAAI,MAAO,CAAA,CAAA,IAAM,CAAA,aAAc,CAAA,KAAM,IAAA,CAAA,CAAA,EACpC,MAAO,CAAA,EAAA,GAAM,OAAA,GAAU,OAAA,EAAS,CAAA,GAAQ,CAAA,CAAI,MAAA,MAAY,CAAA,CAAE,CAAA;;QACpD,EAAA,EAAI,MAAO,CAAA,CAAA,IAAM,CAAA,WAAY,KAAA,CAAM,OAAA,CAAQ,CAAA,GACjD,MAAO,CAAA,EAAA,CAAI,CAAA,EAAG,OAAA,GAAU,OAAA,EAAS,CAAA,GAAQ,CAAA,CAAI,MAAA,MAAY,CAAA,CAAE,CAAA;;IAAA,CAJpD;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAST,EAAA,CAAiB,CAAA,EAAc,CAC9B;QAAA,CAAA,CAAI,OAAA;IAAA,CADI;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAKT,EAAA,CAAoB,CAAA,EAAW,CAC9B;QAAA,EAAA,CAAM,CAAA,EAAG,EAAA;IAAA,CADD;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAKT,EAAA,CAAiB,CAAA,EAAoB,CACpC;QAAA,MAAI,CAAA,CAAA,KAAM,IAAA,CAAA,CAAA,KACT,CAAA,CAAK,OAAA,GAAU,CAAA,GAET,CAAA,CAAK,OAAA;IAAA,CAJJ;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAOT,EAAA,CAAmB,CAAA,EAAW,CAAA,EAAuC,CAAA;IAAA,CAA5D;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAIT,EAAA,CAAuB,CAAA,EAAsB,CAAA,EAAsB,CAClE;QAAA,MAAO,CAAA,CACN;YAAA,MAAA,EAAQ,CAAA;YACR,YAAA,EAAc,CAAA;YACd,KAAA,MAAa,CAAA,CAAI,CAAA,GAAI,CAAA;;YACrB,QAAA,MAAgB,CAAA,CAAI,CAAA,GAAI,CAAA;;YACxB,MAAA,MAAc,CAAA,CAAI,CAAA,GAAI,CAAA;;YACtB,OAAA,MAAe,CAAA,CAAI,CAAA,GAAI,CAAA;QAAA,CAAA;IAAA,CAPhB;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAYT,EAAA,IAAgB,CAAA,EAAe,CAE9B;QAAA,MAAO,CAAA,CAEN;YAAA,EAAA,EAAI,CAAA;YACJ,GAAA,EAAK,CAAA,IAAQ,CAAA;YAGb,MAAA,KAAU,CAAA,EAAwB,CAr+BpC;gBAAA,GAAA,CAAA,CAAA;gBAu+BG,GAAM,CAAA,CAAA,GAAI,CAAA,IAAQ,CAAA,GACd,CAAA,GAAK,CAAA,CAAE,CAAA,EACP,CAAA,GAAK,CAAA,CAAE,CAAA,EACP,CAAA,GAAM,IAAA;gBAEV,EAAA,EAAI,IAAA,CAAK,KAAA,MAAS,CAAA,GAAA,IAAA,CAAK,IAAA,KAAL,IAAA,GAAA,IAAA,CAAA,CAAA,GAAA,CAAA,CAAW,KAAA,MAAU,CAAA,OAAQ,CAE9C;oBAAA,GAAI,CAAA,CAAA,GAAK,IAAA,CAAK,SAAA;oBAGd,EAAA,EAAO,CAAA,GAAU,CAj/BrB;wBAAA,GAAA,CAAA,EAAA;wBAq/BK,EAAA,GACE,IAAA,CAAK,MAAA,MACH,CAAA,KAAU,IAAA,KACT,CAAA,CAAM,KAAA,MACP,EAAA,GAAA,CAAA,CAAM,IAAA,KAAN,IAAA,GAAA,IAAA,CAAA,CAAA,GAAA,EAAA,CAAY,KAAA,MAAU,CAAA,OAEzB,MAAA;wBAGD,GAAM,CAAA,CAAA,GAAK,CAAA,CAAM,SAAA,IACb,CAAA,GAAK,EAAA,CAAS,CAAA,EAAI,CAAA;wBAGtB,EAAA,EAAI,EAAA,CAAc,CAAA,EAAI,CAAA,CAAK,CAAA,IAAK,CAE/B;4BAAA,GAAI,CAAA,EAAA,GAAO,IAAA,CAAK,GAAA,CACf,IAAA,CAAK,GAAA,CAAI,CAAA,CAAG,EAAA,CAAG,CAAA,GACf,IAAA,CAAK,GAAA,CAAI,CAAA,CAAG,EAAA,CAAG,CAAA,GACf,IAAA,CAAK,GAAA,CAAI,CAAA,CAAG,EAAA,CAAG,CAAA,GACf,IAAA,CAAK,GAAA,CAAI,CAAA,CAAG,EAAA,CAAG,CAAA,IAGV,EAAA,QAAa,CAClB;gCAAA,MAAA,CAAQ,EAAA;oCAAA,IACF,CAAA,IAAA,CAAK,GAAA,CAAI,CAAA,CAAG,EAAA,CAAG,CAAA;wCAAI,MAAO,CAAA,CAAA,CAAK,EAAA,EAAM,CAAA;oCAAA,IACrC,CAAA,IAAA,CAAK,GAAA,CAAI,CAAA,CAAG,EAAA,CAAG,CAAA;wCAAI,MAAO,CAAA,CAAA,EAAM,EAAA,EAAM,CAAA;oCAAA,IACtC,CAAA,IAAA,CAAK,GAAA,CAAI,CAAA,CAAG,EAAA,CAAG,CAAA;wCAAI,MAAO,CAAA,CAAA,CAAK,CAAA,EAAG,EAAA;oCAAA,IAClC,CAAA,IAAA,CAAK,GAAA,CAAI,CAAA,CAAG,EAAA,CAAG,CAAA;wCAAI,MAAO,CAAA,CAAA,CAAK,CAAA,GAAI,EAAA;;4BAAA,CAAA;4BAI1C,IAAA,CAAK,GAAA,GAAM,IAAA,CAAK,GAAA,CAAI,GAAA,CAAI,EAAA,GAGxB,CAAA,GAAK,IAAA,CAAK,SAAA,IACV,CAAA,GAAK,EAAA,CAAS,CAAA,EAAI,CAAA;wBAAA,CAInB;wBAAA,GAAM,CAAA,CAAA,GAAM,CAAE;4BAAA,EAAA,EAAI,CAAA,CAAK,CAAA;4BAAI,EAAA,EAAI,CAAA,CAAK,CAAA,EAAI,CAAA;wBAAA,CAAA,EACpC,EAAA,GAAO,CAAA,EACL,EAAA,GAAK,CAAA,CAAG,EAAA,EACR,EAAA,GAAK,CAAA,CAAK,CAAA,CAAG,EAAA,CAAG,CAAA,EAAG,CAAA,CAAG,EAAA,CAAG,CAAA,GACzB,EAAA,GAAK,CAAA,CAAG,EAAA,EACR,EAAA,GAAK,CAAA,CAAK,CAAA,CAAG,EAAA,CAAG,CAAA,EAAG,CAAA,CAAG,EAAA,CAAG,CAAA,GAC3B,EAAA,GAAU,CAAA,EACR,EAAA,GAAQ,CACb;4BAAA,KAAA,EAAS,CAAE;gCAAA,EAAA,EAAI,EAAA;gCAAI,EAAA,EAAI,EAAA;4BAAA,CAAA;4BACvB,GAAA,EAAO,CAAE;gCAAA,EAAA,EAAI,EAAA;gCAAI,EAAA,EAAI,EAAA;4BAAA,CAAA;4BACrB,IAAA,EAAQ,CAAE;gCAAA,EAAA,EAAI,EAAA;gCAAI,EAAA,EAAI,EAAA;4BAAA,CAAA;4BACtB,MAAA,EAAU,CAAE;gCAAA,EAAA,EAAI,EAAA;gCAAI,EAAA,EAAI,EAAA;4BAAA,CAAA;wBAAA,CAAA;wBAGzB,GAAA,CAAA,GAAW,CAAA,EAAA,IAAK,EAAA,CAAO,CACtB;4BAAA,GAAM,CAAA,EAAA,GAAO,EAAA,CAAM,EAAA;4BAEnB,EAAA,EACE,CAAA,KAAO,CAAA,IAAK,EAAA,CAAK,EAAA,CAAG,CAAA,KAAM,CAAA,IAAK,EAAA,CAAK,EAAA,CAAG,CAAA,KAAM,CAAA,IAE7C,CAAA,KAAO,CAAA,IAAK,EAAA,CAAK,EAAA,CAAG,CAAA,KAAM,CAAA,IAAK,EAAA,CAAK,EAAA,CAAG,CAAA,KAAM,CAAA,EAC7C,CACD;gCAAA,EAAA,GAAO,CAAA;gCACP,KAAA;4BAAA,CAED;4BAAA,GAAM,CAAA,EAAA,GAAI,EAAA,CAAc,CAAA,EAAK,EAAA;4BACzB,EAAA,IAAK,IAAA,KACR,EAAA,IACI,EAAA,GAAI,EAAA,KACP,EAAA,GAAO,EAAA;wBAAA,CAMV;wBAAA,EAAA,EACC,EAAA,GAAO,CAAA,MACF,EAAA,KAAS,CAAA,IAAK,EAAA,IAAW,CAAA,KAAM,EAAA,CAAc,CAAA,EAAI,CAAA,CAAK,CAAA,EAAI,CAAA,KAC9D,CACD;4BAAA,GAAM,CAAA,EAAA,GAAM,CAAA,EAAM,CAAA,IAAM,CAAA,GAAI,EAAA,IAAQ,CAAA,IAAM,CAAA,GAAI,EAAA;4BAC9C,CAAA,IAAM,EAAA,EACN,CAAA,IAAM,EAAA,EACN,CAAA,GAAM,EAAA,CAAc,CAAA,EAAO,EAAA;wBAAA,CAAA;oBAAA,CAAA;gBAAA,CAO9B;gBAAA,MAAA,CAAA,IAAA,CAAK,GAAA,CAAI,CAAA,IAAK,CAAA,EACd,IAAA,CAAK,GAAA,CAAI,CAAA,IAAK,CAAA,EAEV,CAAA,KACH,IAAA,CAAK,OAAA,CAAQ,CAAA,UAAW,CAAA,CAAI,MAAA,EAAQ,CAAA,GACpC,CAAA,CAAI,MAAA,CAAO,OAAA,CAAQ,CAAA,UAAW,IAAA,EAAM,EAAA,CAAc,IAAA,EAAM,CAAA,CAAI,YAAA,CAAa,KAAA,CAAM,EAAA,MAGzE,CAAA;YAAA,CAAA;YAKR,IAAA,KAAQ,CAAA,EAAwB,CAC/B;gBAAA,MAAO,CAAA,IAAA,CAAK,MAAA,CAAO,CAAA,IAAQ,CAAA,EAAM,KAAA,CAAM,CAAA;YAAA,CAAA;YAIxC,MAAA,KAAU,CAAA,EAAM,CACf;gBAAA,EAAA,EAAI,MAAO,CAAA,CAAA,CAAK,CAAA,KAAO,CAAA,WAAY,MAAO,CAAA,CAAA,CAAK,CAAA,KAAO,CAAA,SACrD,MAAO,CAAA,IAAA,CAAK,MAAA,CAAO,CAAA,CAAK,CAAA,CAAK,CAAA,GAAI,CAAA,CAAK,CAAA,IAAK,CAAA,CAAK,CAAA;gBAEjD,GAAM,CAAA,CAAA,GAAO,CAAA,CAAK,CAAA,GACZ,CAAA,GAAQ,CAAA,CAAK,CAAA;gBACnB,EAAA,EAAI,CAAA,KAAU,IAAA,CAAA,CAAA,EAAW,CACxB;oBAAA,IAAA,CAAK,GAAA,GAAM,CAAA,CAAK,CAAA;oBAChB,MAAA;gBAAA,CAED;gBAAA,GAAM,CAAA,CAAA,GAAO,CAAA,CAAK,GAAA,CAAI,IAAA,CAAK,GAAA;gBAC3B,EAAA,EAAI,CAAA,CAAK,GAAA,MAAS,CAAA,GAAQ,CAAA,IAAM,CAC/B;oBAAA,IAAA,CAAK,GAAA,GAAM,CAAA,CAAK,CAAA;oBAChB,MAAA;gBAAA,CAED;gBAAA,IAAA,CAAK,IAAA,CAAK,CAAA,CAAK,IAAA,GAAO,KAAA,CAAM,CAAA;YAAA,CAAA;YAI7B,SAAA,IAAkB,CACjB;gBAAA,MAAI,CAAA,IAAA,CAAK,KAAA,GACD,IAAA,CAAK,GAAA,GAEL,CAAA,CAAS,IAAA,CAAK,GAAA;YAAA,CAAA;YAIvB,OAAA,IAAU,CACT;gBAAA,MAAO,EAAA,CAAA,EAAI,IAAA,CAAK,KAAA,CAAM,IAAA,CAAK,GAAA,CAAI,CAAA,EAAA,EAAA,EAAO,IAAA,CAAK,KAAA,CAAM,IAAA,CAAK,GAAA,CAAI,CAAA,EAAA,CAAA;YAAA,CAAA;QAAA,CAAA;IAAA,CA9JpD;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAsKT,EAAA,IAAkB,CAAA,EAAiB,CAClC;QAAA,MAAI,CAAA,CAAA,CAAK,MAAA,KAAW,CAAA,GACZ,EAAA,CAAM,CAAA,IAEP,CACN;YAAA,EAAA,EAAI,CAAA;YACJ,KAAA,EAAO,CAAA,IAAQ,CAAA;YACf,OAAA,KAAW,CAAA,EAAM,CAChB;gBAAA,IAAA,CAAK,KAAA,GAAQ,CAAA,IAAQ,CAAA;YAAA,CAAA;YAEtB,OAAA,IAAU,CACT;gBAAA,MAAI,CAAA,MAAO,CAAA,IAAA,CAAK,KAAA,IAAU,CAAA,aACf,EAAA,CAAQ,IAAA,CAAK,KAAA,EAAO,CAAA,OAEvB,CAAA,EAAI,EAAA,CAAQ,IAAA,CAAK,KAAA,CAAM,CAAA,EAAG,CAAA,EAAA,EAAA,EAAO,EAAA,CAAQ,IAAA,CAAK,KAAA,CAAM,CAAA,EAAG,CAAA,EAAA,CAAA;YAAA,CAAA;QAAA,CAAA;IAAA,CAdzD;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAoBT,EAAA,CAAgB,CAAA,EAAuB,CACtC;QAAA,MAAO,CAAA,CACN;YAAA,EAAA,EAAI,CAAA;YACJ,KAAA,EAAO,CAAA,IAAA,IAAA,GAAA,CAAA,GAAK,CAAA;YACZ,OAAA,IAAU,CACT;gBAAA,MAAO,IAAG,IAAA,CAAK,KAAA,CAAM,IAAA,CAAK,KAAA;YAAA,CAAA;QAAA,CAAA;IAAA,CALpB;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAUT,EAAA,IAAkB,CAAA,EAAiB,CAClC;QAAA,MAAO,CAAA,CACN;YAAA,EAAA,EAAI,CAAA;YACJ,KAAA,EAAO,CAAA,IAAO,CAAA;YACd,OAAA,IAAU,CACT;gBAAA,MAAO,CAAA,IAAA,CAAK,KAAA,CAAM,GAAA;YAAA,CAAA;QAAA,CAAA;IAAA,CALZ;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAUT,EAAA,CAAiB,CAAA,EAAW,CAAA,EAAW,CACtC;QAAA,MAAO,CAAA,MAAA,CAAO,CAAA,CAAE,OAAA,CAAQ,CAAA;IAAA,CADhB;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAIT,EAAA,CAAiB,CAAA,EAAwB,CACxC;QAAA,MAAO,CAAA,CACN;YAAA,EAAA,EAAI,CAAA;YACJ,OAAA,EAAS,CAAA,IAAA,IAAA,GAAA,CAAA,GAAK,CAAA;YACd,OAAA,IAAU,CACT;gBAAA,MAAO,IAAG,EAAA,CAAQ,IAAA,CAAK,OAAA,EAAS,CAAA;YAAA,CAAA;QAAA,CAAA;IAAA,CAL1B;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAUT,EAAA,CAAgB,CAAA,EAA8B,CAC7C;QAAA,EAAA,GAAK,CAAA,EACJ,KAAM,CAAA,GAAI,CAAA,KAAA,CAAM,CAAA;QAEjB,MAAO,CAAA,CACN;YAAA,EAAA,EAAI,CAAA;YACJ,MAAA,EAAQ,CAAA;YACR,OAAA,IAAU,CACT;gBAAA,MAAI,CAAA,MAAO,CAAA,IAAA,CAAK,MAAA,IAAW,CAAA,UACnB,IAAA,CAAK,MAAA,GAEL,IAAA,CAAK,MAAA,CAAO,GAAA;YAAA,CAAA;QAAA,CAAA;IAAA,CAXd;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAiBT,EAAA,CAAe,CAAA,EAAsB,CACpC;QAAA,MAAO,CAAA,CACN;YAAA,EAAA,EAAI,CAAA;YACJ,KAAA,EAAO,CAAA;YACP,OAAA,IAAU,CA9sCZ;gBAAA,GAAA,CAAA,CAAA;gBA+sCG,MAAO,EAAA,CAAA,GAAA,IAAA,CAAK,KAAA,KAAL,IAAA,GAAA,CAAA,GAAc,CAAA,CAAK,QAAA;YAAA,CAAA;QAAA,CAAA;IAAA,CALpB;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAUT,EAAA,CAAW,CAAA,EAAkB,CAC5B;QAAA,MAAO,CAAA,CACN;YAAA,EAAA,EAAI,CAAA;YACJ,CAAA,EAAG,CAAA;YACH,OAAA,IAAU,CACT;gBAAA,MAAO,IAAG,IAAA,CAAK,CAAA;YAAA,CAAA;QAAA,CAAA;IAAA,CALT;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAUT,EAAA,CAAgB,CAAA,EAAc,CAAA,EAA2B,CACxD;QAAA,MAAO,CAAA,CACN;YAAA,EAAA,EAAI,CAAA;YACJ,OAAA,EAAS,CAAE;gBAAA,CAAA;YAAA,CAAA;YACX,MAAA,EAAQ,CACP;gBAAA,GAAA,EAAK,CAAA;gBACL,MAAA,EAAQ,CAAA,IAAA,IAAA,GAAA,CAAA,GAAU,CAAA,CAAK,CAAA;YAAA,CAAA;YAExB,GAAA,IAAM,CACD;gBAAA,CAAA,CAAI,MAAA,OACP,IAAA,CAAK,GAAA,GAAM,IAAA,CAAK,MAAA,CAAO,GAAA,CAAI,GAAA,CAAI,GAAA,CAAI,IAAA,CAAK,MAAA,CAAO,MAAA;YAAA,CAAA;YAGjD,MAAA,IAAS,CACJ;gBAAA,CAAA,CAAI,MAAA,OACP,IAAA,CAAK,GAAA,GAAM,IAAA,CAAK,MAAA,CAAO,GAAA,CAAI,GAAA,CAAI,GAAA,CAAI,IAAA,CAAK,MAAA,CAAO,MAAA;YAAA,CAAA;QAAA,CAAA;IAAA,CAf1C;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAqBT,EAAA,CAAc,CAAA,EAA0B,CAAA,EAAyB,CAChE;QAAA,GAAM,CAAA,CAAA,GAAI,MAAO,CAAA,CAAA,IAAc,CAAA,UAAW,EAAA,CAAI,CAAA,IAAa,CAAA,CAAU,IAAA;QACrE,MAAO,CAAA,CACN;YAAA,EAAA,EAAI,CAAA;YACJ,OAAA,EAAS,CAAE;gBAAA,CAAA;YAAA,CAAA;YACX,MAAA,IAAS,CACR;gBAAA,IAAA,CAAK,IAAA,CAAK,CAAA,CAAE,KAAA,CAAM,CAAA;YAAA,CAAA;QAAA,CAAA;IAAA,CANZ;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAWT,EAAA,CAAiB,CAAA,GAAe,CAAA,EAAgB,CAC/C;QAAA,GAAI,CAAA,CAAA,GAAQ,CAAA;QACZ,MAAO,CAAA,CACN;YAAA,EAAA,EAAI,CAAA;YACJ,OAAA,EAAS,CAAE;gBAAA,CAAA;gBAAO,CAAA;YAAA,CAAA;YAClB,MAAA,IAAS,CACR;gBAAA,GAAM,CAAA,CAAA,GAAa,CAClB;oBAAA,EAAA,EAAI,CAAA,CAAK,CAAA,EAAG,CAAA;oBACZ,EAAA,EAAI,CAAA,CAAK,CAAA,IAAS,CAAA;gBAAA,CAAA;gBAEf,EAAA,CAAa,IAAA,CAAK,UAAA,IAAc,CAAA,IACnC,CAAA,GAAQ,CAAA,IAER,CAAA,IAAS,CAAA,IACL,CAAA,IAAS,CAAA,IACZ,IAAA,CAAK,OAAA;YAAA,CAAA;QAAA,CAAA;IAAA,CAfD;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAsBT,EAAA,CAAc,CAAA,GAAmB,CAAA;IAAA,CAAA,EAAc,CApxC/C;QAAA,GAAA,CAAA,CAAA,EAAA,CAAA;QAsxCC,GAAM,CAAA,CAAA,GAAY,CAAA;QAAA,CAAA;QAElB,MAAO,CAAA,CAEN;YAAA,EAAA,EAAI,CAAA;YAEJ,GAAA,IAAM,CACL;gBAAA,IAAI,CAAK,IAAA,CAAK,MAAA,IACb,IAAA,CAAK,MAAA,KAAa,CACjB;oBAAA,CAAA,CAAI,MAAA,CAAO,IAAA,CAAK,IAAA,CAAK,MAAA;gBAAA,CAAA;YAAA,CAAA;YAKxB,IAAA,EAAM,CACL;gBAAA,KAAA,EAAO,CAAA;gBACP,MAAA,GAAQ,CAAA,GAAA,CAAA,CAAI,MAAA,KAAJ,IAAA,GAAA,CAAA,GAAc,CAAA,CAAK,CAAA;gBAC3B,KAAA,EAAO,CAAA,CAAI,KAAA;gBACX,MAAA,EAAQ,CAAA,CAAI,MAAA;gBACZ,KAAA,GAAO,CAAA,GAAA,CAAA,CAAI,KAAA,KAAJ,IAAA,GAAA,CAAA,GAAa,CAAA,CAAK,CAAA;gBACzB,MAAA,EAAQ,CAAA,CAAI,MAAA;YAAA,CAAA;YAGb,SAAA,IAAqB,CACpB;gBAAA,MAAO,CAAA,CAAA,CAAI,cAAA,MAAoB,IAAA,CAAK,UAAA;YAAA,CAAA;YAGrC,UAAA,IAAa,CACZ;gBAAA,GAAM,CAAA,CAAA,GAAO,IAAA,CAAK,KAAA,GAAQ,CAAA,KAAa,EAAA;gBACvC,MAAO,CAAA,IAAA,CAAK,QAAA,CAAS,CAAA;YAAA,CAAA;YAGtB,WAAA,EAAY,CAAA,EAAO,CAClB;gBAAA,EAAA,GAAK,CAAA,CAAM,IAAA,KAAS,CAAA,CAAM,MAAA,IACzB,MAAO,EAAA,CAAA;gBAER,GAAM,CAAA,CAAA,GAAK,IAAA,CAAK,SAAA,IACV,CAAA,GAAK,CAAA,CAAM,SAAA;gBACjB,MAAO,CAAA,EAAA,CAAa,CAAA,EAAI,CAAA;YAAA,CAAA;YAGzB,UAAA,EAAW,CAAA,EAAO,CACjB;gBAAA,EAAA,GAAK,CAAA,CAAM,IAAA,KAAS,CAAA,CAAM,MAAA,IACzB,MAAO,EAAA,CAAA;gBAGR,GAAM,CAAA,CAAA,GAAK,IAAA,CAAK,SAAA,IACV,CAAA,GAAK,CAAA,CAAM,SAAA;gBACjB,MAAO,CAAA,EAAA,CAAc,CAAA,EAAI,CAAA;YAAA,CAAA;YAG1B,OAAA,EAAQ,CAAA,EAA+B,CACtC;gBAAA,MAAO,CAAA,IAAA,CAAK,QAAA,KAAe,CAC1B;oBAAA,IAAI,CAAK,SAAA,MACR,CAAA;gBAAA,CAAA;YAAA,CAAA;YAKH,OAAA,EAAQ,CAAA,EAAqB,CAAA,EAAwC,CACpE;gBAAA,MAAO,CAAA,IAAA,CAAK,QAAA,KAAe,CAC1B;oBAAA,IAAI,CAAK,UAAA,KACR,CAAA,KAEI,CAAA,IACH,CAAA;gBAAA,CAAA;YAAA,CAAA;YAMJ,SAAA,EAAU,CAAA,EAAU,CAAA,EAA0D,CAC7E;gBAAA,GAAM,CAAA,CAAA,GAAK,IAAA,CAAK,QAAA,KAAe,IAAA,CAAK,gBAAA,CAAiB,CAAA,EAAK,CAAA;mBACpD,CAAA,GAAK,IAAA,CAAK,EAAA,CAAG,CAAA,WAAY,CAAA,EAAK,CAAA,GAAQ,CAAA,CAAI,EAAA,CAAG,CAAA,KAAQ,CAAA,CAAE,CAAA,EAAK,CAAA;;gBAClE,MAAO,KAAM,CAAC;wBAAA,CAAA;wBAAI,CAAA;oBAAA,CAAA,CAAI,OAAA,EAAS,CAAA,GAAM,CAAA;;;YAAA,CAAA;YAGtC,MAAA,KAAU,CAAA,EAAM,CACf;gBAAA,MAAO,CAAA,IAAA,CAAK,OAAA,IAAW,CAAA;YAAA,CAAA;YAGxB,MAAA,KAAU,CAAA,EAAM,CACf;gBAAA,MAAO,CAAA,IAAA,CAAK,OAAA,IAAW,CAAA;YAAA,CAAA;YAGxB,QAAA,KAAY,CAAA,EAAM,CACjB;gBAAA,MAAO,CAAA,IAAA,CAAK,SAAA,IAAa,CAAA;YAAA,CAAA;YAG1B,QAAA,EAAS,CAAA,EAAmB,CAC3B;gBAAA,MAAO,CAAA,EAAA,CAAc,IAAA,CAAK,SAAA,IAAa,CAAA;YAAA,CAAA;YAIxC,OAAA,EAAQ,CAAA,EAA2B,CAp3CrC;gBAAA,GAAA,CAAA,CAAA;gBA23CG,EAAA,EALI,CAAA,KAAQ,IAAA,MAKR,CAAA,GAAA,CAAA,CAAI,IAAA,KAAJ,IAAA,GAAA,IAAA,CAAA,CAAA,GAAA,CAAA,CAAU,KAAA,MAAU,CAAA,OACvB,MAAO,CAAA,IAAA;gBAGR,GAAM,CAAA,CAAA,GAAK,IAAA,CAAK,SAAA,IACV,CAAA,GAAK,CAAA,CAAI,SAAA,IACT,CAAA,GAAK,EAAA,CAAS,CAAA,EAAI,CAAA;gBAExB,EAAA,GAAK,EAAA,CAAc,CAAA,EAAI,CAAA,CAAK,CAAA,IAC3B,MAAO,CAAA,IAAA;gBAGR,GAAI,CAAA,CAAA,GAAO,IAAA,CAAK,GAAA,CACf,IAAA,CAAK,GAAA,CAAI,CAAA,CAAG,EAAA,CAAG,CAAA,GACf,IAAA,CAAK,GAAA,CAAI,CAAA,CAAG,EAAA,CAAG,CAAA,GACf,IAAA,CAAK,GAAA,CAAI,CAAA,CAAG,EAAA,CAAG,CAAA,GACf,IAAA,CAAK,GAAA,CAAI,CAAA,CAAG,EAAA,CAAG,CAAA,IAGV,CAAA,QAAa,CAClB;oBAAA,MAAA,CAAQ,CAAA;wBAAA,IACF,CAAA,IAAA,CAAK,GAAA,CAAI,CAAA,CAAG,EAAA,CAAG,CAAA;4BAAI,MAAO,CAAA,CAAA,CAAK,CAAA,EAAM,CAAA;wBAAA,IACrC,CAAA,IAAA,CAAK,GAAA,CAAI,CAAA,CAAG,EAAA,CAAG,CAAA;4BAAI,MAAO,CAAA,CAAA,EAAM,CAAA,EAAM,CAAA;wBAAA,IACtC,CAAA,IAAA,CAAK,GAAA,CAAI,CAAA,CAAG,EAAA,CAAG,CAAA;4BAAI,MAAO,CAAA,CAAA,CAAK,CAAA,EAAG,CAAA;wBAAA,IAClC,CAAA,IAAA,CAAK,GAAA,CAAI,CAAA,CAAG,EAAA,CAAG,CAAA;4BAAI,MAAO,CAAA,CAAA,CAAK,CAAA,GAAI,CAAA;;gBAAA,CAAA;gBAI1C,IAAA,CAAK,GAAA,GAAM,IAAA,CAAK,GAAA,CAAI,GAAA,CAAI,CAAA;YAAA,CAAA;YAKzB,UAAA,IAAa,CACZ;gBAAA,EAAA,CAAM,IAAA,CAAK,OAAA;YAAA,CAAA;YAIZ,gBAAA,EAAiB,CAAA,EAAU,CAE1B;gBAAA,EAAA,CAAM,CAAA,GAAK,CAAC,GAAQ,CAEf;oBAAA,IAAA,KAAS,CAAA,KAAQ,IAAA,CAAK,MAAA,MAAY,CAAA,CAAU,CAAA,CAAI,GAAA,KAIhD,IAAA,CAAK,WAAA,CAAY,CAAA,MACpB,IAAA,CAAK,OAAA,CAAQ,CAAA,UAAW,CAAA,EAAK,IAAA,GAC7B,CAAA,CAAU,CAAA,CAAI,GAAA,IAAO,CAAA;gBAAA,CAAA;gBAKvB,GAAA,CAAA,GAAW,CAAA,EAAA,IAAM,CAAA,CAAW,CAC3B;oBAAA,GAAM,CAAA,CAAA,GAAM,CAAA,CAAU,EAAA;oBACjB,IAAA,CAAK,WAAA,CAAY,CAAA,KACrB,MAAO,CAAA,CAAA,CAAU,EAAA;gBAAA,CAAA;YAAA,CAAA;YAQpB,SAAA,IAAkB,CA37CpB;gBAAA,GAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,EAAA;gBA67CG,GAAI,CAAA,CAAA,IAAI,CAAA,GAAA,IAAA,CAAK,IAAA,CAAK,KAAA,KAAV,IAAA,GAAA,CAAA,GAAmB,IAAA,CAAK,KAAA,EAC5B,CAAA,IAAI,CAAA,GAAA,IAAA,CAAK,IAAA,CAAK,MAAA,KAAV,IAAA,GAAA,CAAA,GAAoB,IAAA,CAAK,MAAA;gBAEjC,EAAA,EAAI,CAAA,IAAK,IAAA,IAAQ,CAAA,IAAK,IAAA,EACrB,KAAM,CAAA,GAAI,CAAA,KAAA,CAAM,CAAA;gBAGjB,GAAM,CAAA,CAAA,GAAQ,CAAA,EAAK,CAAA,GAAA,IAAA,CAAK,KAAA,KAAL,IAAA,GAAA,CAAA,GAAc,CAAA,EAAG,KAAA,CAAM,IAAA,CAAK,IAAA,CAAK,KAAA;gBAEpD,CAAA,IAAK,CAAA,CAAM,CAAA,EACX,CAAA,IAAK,CAAA,CAAM,CAAA;gBAEX,GAAM,CAAA,CAAA,GAAO,EAAA,CAAS,IAAA,CAAK,MAAA,IAAU,EAAA,GAC/B,CAAA,KAAO,EAAA,GAAA,IAAA,CAAK,GAAA,KAAL,IAAA,GAAA,EAAA,GAAY,CAAA,CAAK,CAAA,GAC5B,GAAA,CAAI,IAAA,CAAK,IAAA,CAAK,MAAA,EACd,GAAA,CAAI,CAAA,CAAK,GAAA,CAAI,CAAA,EAAG,CAAA,EAAG,KAAA,CAAM,GAAA,EAAK,KAAA,CAAM,CAAA,EAAG,CAAA;gBAEzC,MAAO,CAAA,CACN;oBAAA,KAAA,EAAO,CAAA;oBACP,EAAA,EAAI,CAAA;oBACJ,EAAA,EAAI,CAAA,CAAK,CAAA,CAAI,CAAA,GAAI,CAAA,EAAG,CAAA,CAAI,CAAA,GAAI,CAAA;gBAAA,CAAA;YAAA,CAAA;YAK9B,UAAA,IAAmB,CAClB;gBAAA,GAAM,CAAA,CAAA,GAAO,IAAA,CAAK,SAAA;gBAClB,MAAI,CAAA,IAAA,CAAK,KAAA,GACD,CAAA,GAEA,CACN;oBAAA,KAAA,EAAO,CAAA;oBACP,EAAA,EAAI,CAAA,CAAK,SAAA,CAAU,QAAA,CAAS,CAAA,CAAK,EAAA;oBACjC,EAAA,EAAI,CAAA,CAAK,SAAA,CAAU,QAAA,CAAS,CAAA,CAAK,EAAA;gBAAA,CAAA;YAAA,CAAA;QAAA,CAAA;IAAA,CA1M7B;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAoNT,EAAA,CAAwB,CAAA,EAAmB,CAC1C;QAAA,MAAO,CAAA,CACN;YAAA,GAAA,EAAK,CAAA,CAAI,GAAA;YACT,KAAA,EAAO,CAAA,CAAI,KAAA;YACX,KAAA,EAAO,CAAA,CAAI,KAAA;YACX,OAAA,EAAS,CAAA,CAAI,OAAA;YACb,KAAA,EAAO,CAAA,CAAI,KAAA;YACX,MAAA,EAAQ,CAAA,CAAI,MAAA;YACZ,OAAA,EAAS,CAAA,CAAI,OAAA;YACb,MAAA,EAAQ,CAAA,CAAO,OAAA,CAAQ,CAAA,CAAI,MAAA;YAC3B,OAAA,EAAS,CAAA,CAAI,OAAA;QAAA,CAAA;IAAA,CAVN;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAwBT,EAAA,CAAgB,CAAA,EAAyB,CAAA,GAAqB,CAAA;IAAA,CAAA,EAAgB,CAhgD9E;QAAA,GAAA,CAAA,CAAA;QAkgDC,GAAI,CAAA,CAAA,GAAM,IAAA,EACN,CAAA,GAAgC,IAAA;iBAEpC,CAAA,CAAsB,CAAA,EAAiB,CAAA,EAAS,CAAA,EAAY,CAAA,EAAkB,CAC7E;YAAA,GAAM,CAAA,CAAA,GAAQ,CAAA,CAAK,CAAA,EAAG,CAAA;YACtB,MAAI,CAAA,CAAA,IAAK,CAAA,IACR,CAAA,CAAM,CAAA,GAAI,CAAA,IAAK,CAAA,CAAI,KAAA,GAAQ,CAAA,CAAE,CAAA,GAC7B,CAAA,CAAM,CAAA,GAAI,CAAA,IAAK,CAAA,CAAI,MAAA,GAAS,CAAA,CAAE,CAAA,KACpB,CAAA,IACV,CAAA,CAAM,CAAA,GAAI,CAAA,IAAK,CAAA,CAAI,KAAA,GAAQ,CAAA,CAAE,CAAA,GAC7B,CAAA,CAAM,CAAA,GAAI,CAAA,CAAM,CAAA,IACN,CAAA,KACV,CAAA,CAAM,CAAA,GAAI,CAAA,IAAK,CAAA,CAAI,MAAA,GAAS,CAAA,CAAE,CAAA,GAC9B,CAAA,CAAM,CAAA,GAAI,CAAA,CAAM,CAAA,GAEV,CAAA;QAAA,CAZC;QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,gBAeF,CAEN;YAAA,EAAA,EAAI,CAAA;YAEJ,KAAA,EAAO,CAAA;YACP,MAAA,EAAQ,CAAA;YACR,KAAA,EAAO,CAAA,CAAI,KAAA,IAAS,CAAA;YACpB,IAAA,EAAM,CAAA,CAAI,IAAA,IAAQ,EAAA,CAAK,CAAA,EAAG,CAAA,EAAG,CAAA,EAAG,CAAA;YAChC,SAAA,GAAW,CAAA,GAAA,CAAA,CAAI,SAAA,KAAJ,IAAA,GAAA,CAAA,GAAiB,CAAA;YAE5B,IAAA,IAAO,CAQN;gBAAA,EAAA,EANI,MAAO,CAAA,CAAA,IAAO,CAAA,UACjB,CAAA,GAAM,CAAA,CAAO,OAAA,CAAQ,CAAA,IAErB,CAAA,GAAM,CAAA,GAGF,CAAA,EACJ,KAAM,CAAA,GAAI,CAAA,KAAA,EAAM,mBAAA,EAAsB,CAAA,CAAA,CAAA;gBAGvC,GAAI,CAAA,CAAA,GAAI,EAAA,CAAA,CAAA;gBAAA,CAAA,EAAK,CAAA,CAAI,MAAA,CAAO,CAAA;gBAEpB,CAAA,CAAI,IAAA,KACP,CAAA,GAAI,CAAA,CAAE,KAAA,CAAM,CAAA,CAAI,IAAA;gBAGjB,GAAM,CAAA,CAAA,GAAQ,CAAA,CAAa,CAAA,CAAI,GAAA,EAAK,CAAA,EAAG,CAAA,CAAI,KAAA,EAAO,CAAA,CAAI,MAAA;gBAEtD,IAAA,CAAK,KAAA,GAAQ,CAAA,CAAI,GAAA,CAAI,KAAA,GAAQ,CAAA,CAAE,CAAA,GAAI,CAAA,CAAM,CAAA,EACzC,IAAA,CAAK,MAAA,GAAS,CAAA,CAAI,GAAA,CAAI,MAAA,GAAS,CAAA,CAAE,CAAA,GAAI,CAAA,CAAM,CAAA,EAEvC,CAAA,CAAI,IAAA,IACP,IAAA,CAAK,IAAA,CAAK,CAAA,CAAI,IAAA;YAAA,CAAA;YAKhB,IAAA,IAAO,CACN;gBAAA,CAAA,CAAW,EAAA,CAAA,EAAA,CAAA,CAAA;gBAAA,CAAA,EACP,EAAA,CAAe,IAAA,IADR,CAEV;oBAAA,MAAA,EAAQ,CAAA;oBACR,KAAA,EAAO,IAAA,CAAK,KAAA;oBACZ,IAAA,EAAM,IAAA,CAAK,IAAA;oBACX,KAAA,EAAO,CAAA,CAAI,KAAA;oBACX,KAAA,EAAO,CAAA,CAAI,KAAA;oBACX,KAAA,EAAO,CAAA,CAAI,KAAA;oBACX,KAAA,EAAO,CAAA,CAAI,KAAA;oBACX,MAAA,EAAQ,CAAA,CAAI,MAAA;gBAAA,CAAA;YAAA,CAAA;YAId,MAAA,IAAS,CAER;gBAAA,EAAA,GAAK,CAAA,EACJ,MAAA;gBAGD,GAAM,CAAA,CAAA,GAAO,CAAA,CAAI,KAAA,CAAM,CAAA,CAAQ,IAAA;gBAE/B,EAAA,EAAI,MAAO,CAAA,CAAA,IAAS,CAAA,SAAU,CAC7B;oBAAA,IAAA,CAAK,KAAA,GAAQ,CAAA;oBACb,MAAA;gBAAA,CAGD;gBAAA,EAAA,EAAI,CAAA,CAAK,KAAA,KAAU,CAAA,EAClB,KAAM,CAAA,GAAI,CAAA,KAAA,CAAM,CAAA;gBAGjB,CAAA,CAAQ,KAAA,IAAS,CAAA,KAAO,IAAA,CAAK,SAAA,EAEzB,CAAA,CAAQ,KAAA,IAAU,CAAA,GAAI,CAAA,CAAQ,KAAA,KACjC,CAAA,CAAQ,KAAA,GAAQ,CAAA,EAEZ,CAAA,CAAK,IAAA,GAAO,CAAA,CAAK,EAAA,IACpB,IAAA,CAAK,KAAA,IACD,IAAA,CAAK,KAAA,GAAQ,CAAA,CAAK,EAAA,KACjB,CAAA,CAAQ,IAAA,GACX,IAAA,CAAK,KAAA,GAAQ,CAAA,CAAK,IAAA,IAElB,IAAA,CAAK,KAAA,IACL,CAAA,CAAQ,KAAA,IACR,IAAA,CAAK,IAAA,SAIP,IAAA,CAAK,KAAA,IACD,IAAA,CAAK,KAAA,GAAQ,CAAA,CAAK,EAAA,KACjB,CAAA,CAAQ,IAAA,GACX,IAAA,CAAK,KAAA,GAAQ,CAAA,CAAK,IAAA,IAElB,IAAA,CAAK,KAAA,IACL,CAAA,CAAQ,KAAA,IACR,IAAA,CAAK,IAAA;YAAA,CAAA;YASV,IAAA,EAAK,CAAA,EAAc,CAAA,GAAyB,CAAA;YAAA,CAAA,EAAI,CA3nDlD;gBAAA,GAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA;gBA6nDG,EAAA,GAAK,CAAA,EAAK,CACT;oBAAA,EAAA,KAAa,CACZ;wBAAA,IAAA,CAAK,IAAA,CAAK,CAAA;oBAAA,CAAA;oBAEX,MAAA;gBAAA,CAGD;gBAAA,GAAM,CAAA,CAAA,GAAO,CAAA,CAAI,KAAA,CAAM,CAAA;gBAEvB,EAAA,EAAI,CAAA,IAAQ,IAAA,EACX,KAAM,CAAA,GAAI,CAAA,KAAA,EAAM,gBAAA,EAAmB,CAAA;gBAGpC,CAAI,IACH,IAAA,CAAK,IAAA,IAGN,CAAA,GAAU,CACT;oBAAA,IAAA,EAAM,CAAA;oBACN,KAAA,EAAO,CAAA;oBACP,IAAA,GAAM,CAAA,IAAA,CAAA,GAAA,CAAA,CAAI,IAAA,KAAJ,IAAA,GAAA,CAAA,GAAY,CAAA,CAAK,IAAA,KAAjB,IAAA,GAAA,CAAA,IAAyB,CAAA;oBAC/B,QAAA,GAAU,EAAA,IAAA,CAAA,GAAA,CAAA,CAAI,QAAA,KAAJ,IAAA,GAAA,CAAA,GAAgB,CAAA,CAAK,QAAA,KAArB,IAAA,GAAA,EAAA,IAAiC,CAAA;oBAC3C,KAAA,GAAO,EAAA,IAAA,EAAA,GAAA,CAAA,CAAI,KAAA,KAAJ,IAAA,GAAA,EAAA,GAAa,CAAA,CAAK,KAAA,KAAlB,IAAA,GAAA,EAAA,GAA2B,EAAA;oBAClC,KAAA,GAAO,EAAA,GAAA,CAAA,CAAI,KAAA,KAAJ,IAAA,GAAA,EAAA,OAAoB,CAAA;oBAAA,CAAA;gBAAA,CAAA,EAGxB,MAAO,CAAA,CAAA,IAAS,CAAA,UACnB,IAAA,CAAK,KAAA,GAAQ,CAAA,GAEb,IAAA,CAAK,KAAA,GAAQ,CAAA,CAAK,IAAA,EAInB,IAAA,CAAK,OAAA,CAAQ,CAAA,WAAY,CAAA,GACzB,IAAA,CAAK,OAAA,CAAQ,CAAA,YAAa,CAAA;YAAA,CAAA;YAI3B,IAAA,IAAO,CACN;gBAAA,EAAA,GAAK,CAAA,EACJ,MAAA;gBAED,GAAM,CAAA,CAAA,GAAW,CAAA,CAAQ,IAAA;gBACzB,CAAA,GAAU,IAAA,EACV,IAAA,CAAK,OAAA,CAAQ,CAAA,UAAW,CAAA;YAAA,CAAA;YAGzB,SAAA,IAAY,CACX;gBAAA,MAAK,CAAA,CAAA,GAGE,CAAA,CAAI,MAAA,CAAO,MAAA,GAFV,CAAA;YAAA,CAAA;YAKT,OAAA,IAAU,CACT;gBAAA,MAAO,CAAA,CAAA,IAAA,IAAA,GAAA,IAAA,CAAA,CAAA,GAAA,CAAA,CAAS,IAAA;YAAA,CAAA;YAGjB,KAAA,EAAM,CAAA,EAAY,CACjB;gBAAA,CAAA,CAAI,KAAA,GAAQ,CAAA;YAAA,CAAA;YAGb,KAAA,EAAM,CAAA,EAAY,CACjB;gBAAA,CAAA,CAAI,KAAA,GAAQ,CAAA;YAAA,CAAA;YAGb,SAAA,EAAU,CAAA,EAAc,CAAA,EAAoC,CAC3D;gBAAA,MAAO,CAAA,IAAA,CAAK,EAAA,CAAG,CAAA,WAAY,CAAA,GAAS,CAC/B;oBAAA,CAAA,KAAS,CAAA,IACZ,CAAA;gBAAA,CAAA;YAAA,CAAA;YAKH,WAAA,EAAY,CAAA,EAAc,CAAA,EAAoC,CAC7D;gBAAA,MAAO,CAAA,IAAA,CAAK,EAAA,CAAG,CAAA,aAAc,CAAA,GAAS,CACrC;oBAAA,CAAI,KAAS,CAAA,IACZ,CAAA;gBAAA,CAAA;YAAA,CAAA;YAKH,OAAA,IAAU,CACT;gBAAA,GAAI,CAAA,CAAA,GAAM,CAAA;gBACV,MAAI,CAAA,MAAO,CAAA,CAAA,IAAO,CAAA,UACjB,CAAA,IAAO,IAAA,CAAK,SAAA,CAAU,CAAA,IAEtB,CAAA,IAAO,CAAA,SAED,CAAA;YAAA,CAAA;QAAA,CAAA;IAAA,CAtND;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aA6NT,EAAA,CAAc,CAAA,EAAW,CAAA,GAAmB,CAAA;IAAA,CAAA,EAAc,CAEzD;iBAAA,CAAA,GAAkB,CA/tDnB;YAAA,GAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA;YAiuDE,GAAM,CAAA,CAAA,IAAO,CAAA,IAAA,CAAA,GAAA,IAAA,CAAK,IAAA,KAAL,IAAA,GAAA,CAAA,GAAa,CAAA,CAAK,IAAA,KAAlB,IAAA,GAAA,CAAA,GAA0B,CAAA,EACjC,CAAA,GAAO,CAAA,CAAO,KAAA,CAAM,CAAA;YAE1B,EAAA,GAAK,CAAA,EACJ,KAAM,CAAA,GAAI,CAAA,KAAA,EAAM,iBAAA,EAAoB,CAAA,CAAA,CAAA;YAGrC,GAAM,CAAA,CAAA,GAAQ,CAAA,CAAI,OAAA,CAAQ,EAAA,CAAA,EAAA,CAAA,CAAA;YAAA,CAAA,EACtB,EAAA,CAAe,IAAA,IADO,CAEzB;gBAAA,IAAA,EAAM,IAAA,CAAK,IAAA,GAAO,CAAA;gBAClB,IAAA,EAAM,IAAA,CAAK,QAAA;gBACX,IAAA,EAAM,CAAA;gBACN,KAAA,EAAO,CAAA,CAAI,KAAA;gBACX,SAAA,EAAW,CAAA,CAAI,SAAA;YAAA,CAAA;YAGhB,MAAA,CAAA,IAAA,CAAK,KAAA,GAAQ,CAAA,CAAM,KAAA,MAAS,CAAA,GAAA,IAAA,CAAK,KAAA,KAAL,IAAA,GAAA,IAAA,CAAA,CAAA,GAAA,CAAA,CAAY,CAAA,KAAK,CAAA,GAC7C,IAAA,CAAK,MAAA,GAAS,CAAA,CAAM,MAAA,MAAU,CAAA,GAAA,IAAA,CAAK,KAAA,KAAL,IAAA,GAAA,IAAA,CAAA,CAAA,GAAA,CAAA,CAAY,CAAA,KAAK,CAAA,GAExC,CAAA;QAAA,CArBC;QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,UAyBF,CAEN;YAAA,EAAA,EAAI,CAAA;YACJ,IAAA,EAAM,CAAA;YACN,QAAA,EAAU,CAAA,CAAI,IAAA;YACd,IAAA,EAAM,CAAA,CAAI,IAAA;YACV,KAAA,EAAO,CAAA;YACP,MAAA,EAAQ,CAAA;YAER,IAAA,IAAO,CACN;gBAAA,CAAA,CAAO,IAAA,CAAK,IAAA;YAAA,CAAA;YAGb,IAAA,IAAO,CACN;gBAAA,CAAA,CAAI,WAAA,CAAY,CAAA,CAAO,IAAA,CAAK,IAAA;YAAA,CAAA;QAAA,CAAA;IAAA,CAzCtB;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAgDT,EAAA,CAAc,CAAA,EAAW,CAAA,EAAW,CAAA,GAAmB,CAAA;IAAA,CAAA,EAAc,CACpE;QAAA,MAAO,CAAA,CACN;YAAA,EAAA,EAAI,CAAA;YACJ,KAAA,EAAO,CAAA;YACP,MAAA,EAAQ,CAAA;YACR,MAAA,EAAQ,CAAA,CAAI,MAAA,IAAU,CAAA;YACtB,IAAA,IAAO,CACN;gBAAA,CAAA,CAAI,QAAA,CAAS,EAAA,CAAA,EAAA,CAAA,CAAA;gBAAA,CAAA,EACT,EAAA,CAAe,IAAA,IADN,CAEZ;oBAAA,KAAA,EAAO,IAAA,CAAK,KAAA;oBACZ,MAAA,EAAQ,IAAA,CAAK,MAAA;oBACb,MAAA,EAAQ,IAAA,CAAK,MAAA;gBAAA,CAAA;YAAA,CAAA;YAGf,OAAA,IAAU,CACT;gBAAA,MAAO,IAAG,IAAA,CAAK,IAAA,CAAK,IAAA,CAAK,KAAA,EAAA,EAAA,EAAW,IAAA,CAAK,IAAA,CAAK,IAAA,CAAK,MAAA;YAAA,CAAA;QAAA,CAAA;IAAA,CAf7C;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAoBT,EAAA,CAAgB,CAAA,EAAW,CAAA,EAAuB,CACjD;QAAA,MAAO,CAAA,CACN;YAAA,EAAA,EAAI,CAAA;YACJ,KAAA,EAAO,CAAA;YACP,MAAA,EAAQ,CAAA;YACR,IAAA,IAAO,CACN;gBAAA,CAAA,CAAI,UAAA,CAAW,EAAA,CAAA,EAAA,CAAA,CAAA;gBAAA,CAAA,EACX,EAAA,CAAe,IAAA,IADJ,CAEd;oBAAA,KAAA,EAAO,IAAA,CAAK,KAAA;oBACZ,MAAA,EAAQ,IAAA,CAAK,MAAA;gBAAA,CAAA;YAAA,CAAA;YAGf,OAAA,IAAU,CACT;gBAAA,MAAO,IAAG,IAAA,CAAK,IAAA,CAAK,IAAA,CAAK,KAAA,EAAA,EAAA,EAAW,IAAA,CAAK,IAAA,CAAK,IAAA,CAAK,MAAA;YAAA,CAAA;QAAA,CAAA;IAAA,CAb7C;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAkBT,EAAA,CAAgB,CAAA,EAA4B,CAC3C;QAAA,MAAO,CAAA,CACN;YAAA,EAAA,EAAI,CAAA;YACJ,MAAA,EAAQ,CAAA;YACR,IAAA,IAAO,CACN;gBAAA,CAAA,CAAI,UAAA,CAAW,EAAA,CAAA,EAAA,CAAA,CAAA;gBAAA,CAAA,EACX,EAAA,CAAe,IAAA,IADJ,CAEd;oBAAA,MAAA,EAAQ,IAAA,CAAK,MAAA;gBAAA,CAAA;YAAA,CAAA;YAGf,OAAA,IAAU,CACT;gBAAA,MAAO,IAAG,IAAA,CAAK,IAAA,CAAK,IAAA,CAAK,MAAA;YAAA,CAAA;QAAA,CAAA;IAAA,CAXnB;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAgBT,EAAA,CAAiB,CAAA,GAAgB,CAAA,EAAG,CAAA,GAAe,CAAA,CAAI,CAAA,EAAG,CAAA,EAAG,CAAA,GAAiB,CAC7E;QAAA,MAAO,CAAA,CACN;YAAA,EAAA,EAAI,CAAA;YACJ,OAAA,EAAS,CACR;gBAAA,KAAA,EAAA,CAAA;gBACA,KAAA,EAAA,CAAA;YAAA,CAAA;QAAA,CAAA;IAAA,CALM;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAUT,EAAA,CAAe,CAAA,EAAY,CAAA,EAAgC,CAC1D;QAAA,GAAM,CAAA,CAAA,GAAwB,GAAI,CAAA,EAAA;QAClC,MAAI,CAAA,CAAA,IAAK,CAAA,IACR,CAAA,CAAO,KAAA,CAAM,CACZ;YAAA,IAAA,EAAM,CAAA;YACN,MAAA,EAAQ,CAAA;QAAA,CAAA,GAGH,CACN;YAAA,EAAA,EAAI,CAAA;YACJ,IAAA,EAAK,CAAA,EAAW,CAAA,EAAoC,CACnD;gBAAA,MAAO,CAAA,CAAA,CAAO,KAAA,CAAM,CACnB;oBAAA,IAAA,EAAM,CAAA;oBACN,MAAA,EAAQ,CAAA;gBAAA,CAAA;YAAA,CAAA;YAGV,MAAA,IAAS,CACR;gBAAA,CAAA,CAAO,OAAA,EAAS,CAAA,EAAO,CAAA,GAAO,CAC7B;oBAAA,CAAA,CAAM,IAAA,IAAQ,CAAA,IACV,CAAA,CAAM,IAAA,IAAQ,CAAA,KACjB,CAAA,CAAM,MAAA,CAAO,IAAA,CAAK,IAAA,GAClB,CAAA,CAAO,MAAA,CAAO,CAAA;gBAAA,CAAA;YAAA,CAAA;QAAA,CAAA;IAAA,CArBV;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;IA6BT,GAAM,CAAA,EAAA,GAAiB,GAAA,EACjB,EAAA,GAAU,KAAA;aAGhB,EAAA,CAAc,CAAA,GAAmB,CAAA;IAAA,CAAA,EAAc,CA92D/C;QAAA,GAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA;QAg3DC,GAAI,CAAA,CAAA,GAAO,CAAA,EACP,CAAA,GAA8B,IAAA,EAC9B,CAAA,GAAkB,IAAA,EAClB,CAAA,IAAY,CAAA;QAEhB,MAAO,CAAA,CAEN;YAAA,EAAA,EAAI,CAAA;YACJ,OAAA,EAAS,CAAE;gBAAA,CAAA;gBAAO,CAAA;YAAA,CAAA;YAClB,SAAA,GAAW,CAAA,GAAA,CAAA,CAAI,SAAA,KAAJ,IAAA,GAAA,CAAA,GAAiB,EAAA;YAC5B,MAAA,GAAQ,CAAA,GAAA,CAAA,CAAI,MAAA,KAAJ,IAAA,GAAA,CAAA,GAAc,CAAA;YACtB,KAAA,GAAO,CAAA,GAAA,CAAA,CAAI,KAAA,KAAJ,IAAA,GAAA,CAAA,IAAa,CAAA;YAEpB,MAAA,IAAS,CA73DX;gBAAA,GAAA,CAAA,CAAA;gBA+3DG,GAAI,CAAA,CAAA,IAAW,CAAA;gBAGf,EAAA,EAAI,CAAA,EAAa,CAEhB;oBAAA,GAAM,CAAA,CAAA,GAAK,IAAA,CAAK,SAAA,IACV,CAAA,GAAK,CAAA,CAAY,SAAA,IACjB,EAAA,GAAK,CAAA,CAAG,EAAA,CAAG,CAAA,EACX,EAAA,GAAK,CAAA,CAAG,EAAA,CAAG,CAAA,EACX,EAAA,GAAK,CAAA,CAAG,EAAA,CAAG,CAAA,EACX,EAAA,GAAK,CAAA,CAAG,EAAA,CAAG,CAAA,EACX,EAAA,GAAK,CAAA,CAAG,EAAA,CAAG,CAAA,EACX,EAAA,GAAK,CAAA,CAAG,EAAA,CAAG,CAAA;qBAGf,CAAA,CAAY,MAAA,MACV,EAAA,KAAO,EAAA,IACP,EAAA,GAAK,EAAA,IACL,EAAA,GAAK,EAAA,IAER,IAAA,CAAK,OAAA,CAAQ,CAAA,OAAQ,CAAA,GACrB,CAAA,GAAc,IAAA,EACd,CAAA,GAAkB,IAAA,EAClB,CAAA,IAAW,CAAA,IAEP,CAAA,IAAmB,CAAA,CAAY,GAAA,KAGlC,IAAA,CAAK,GAAA,GAAM,IAAA,CAAK,GAAA,CAAI,GAAA,CAAI,CAAA,CAAY,GAAA,CAAI,GAAA,CAAI,CAAA,IAC5C,CAAA,GAAkB,CAAA,CAAY,GAAA,CAAI,KAAA;gBAAA,CAKrC;gBAAA,EAAA,GAAK,CAAA,EAAa,CAEjB;oBAAA,GAAM,CAAA,CAAA,GAAM,IAAA,CAAK,IAAA,CAAK,CAAA,EAAG,CAAA;oBAGzB,EAAA,EAAI,CAAA;wBACH,EAAA,EAAI,CAAA,CAAI,QAAA,IAAY,CACnB;4BAAA,CAAA,GAAc,CAAA,CAAI,MAAA;4BAClB,GAAM,CAAA,CAAA,GAAK,CAAA;4BACX,CAAA,GAAO,CAAA,EACH,CAAA,CAAY,GAAA,KACf,CAAA,GAAkB,CAAA,CAAY,GAAA,CAAI,KAAA,KAE9B,CAAA,KACJ,IAAA,CAAK,OAAA,CAAQ,CAAA,SAAU,CAAA,GACvB,CAAA,IAAY,CAAA;wBAAA,CAAA,MAEH,CAAA,CAAI,KAAA,OACd,CAAA,GAAO,CAAA,EACP,IAAA,CAAK,OAAA,CAAQ,CAAA,WAAY,CAAA,CAAI,MAAA;;oBAI/B,CAAA,IAAQ,EAAA,KAAY,IAAA,CAAK,MAAA,GAAS,CAAA,IAClC,CAAA,GAAO,IAAA,CAAK,GAAA,CAAI,CAAA,GAAM,CAAA,GAAA,CAAA,CAAI,MAAA,KAAJ,IAAA,GAAA,CAAA,GAAc,EAAA;gBAAA,CAAA;YAAA,CAAA;YAMtC,WAAA,IAA8B,CAC7B;gBAAA,MAAO,CAAA,CAAA;YAAA,CAAA;YAGR,UAAA,IAAa,CACZ;gBAAA,MAAO,CAAA,CAAA,KAAgB,IAAA;YAAA,CAAA;YAGxB,QAAA,IAAoB,CACnB;gBAAA,MAAO,CAAA,IAAA,CAAK,UAAA;YAAA,CAAA;YAGb,SAAA,IAAqB,CACpB;gBAAA,MAAO,CAAA,CAAA,GAAO,CAAA;YAAA,CAAA;YAGf,OAAA,IAAmB,CAClB;gBAAA,MAAO,CAAA,IAAA,CAAK,SAAA;YAAA,CAAA;YAGb,IAAA,EAAK,CAAA,EAAe,CACnB;gBAAA,CAAA,GAAc,IAAA,EACd,CAAA,GAAkB,IAAA,EAClB,CAAA,IAAQ,CAAA,KAAU,IAAA,CAAK,SAAA;YAAA,CAAA;YAGxB,UAAA,EAAW,CAAA,EAAe,CACzB;gBAAA,IAAI,CAAK,UAAA,KACR,IAAA,CAAK,IAAA,CAAK,CAAA,IACA,CAAA,KACV,CAAA,IAAY,CAAA,EACZ,IAAA,CAAK,IAAA,CAAK,CAAA,GACV,IAAA,CAAK,OAAA,CAAQ,CAAA;YAAA,CAAA;YAIf,QAAA,EAAS,CAAA,EAAoC,CAC5C;gBAAA,MAAO,CAAA,IAAA,CAAK,EAAA,CAAG,CAAA,SAAU,CAAA;YAAA,CAAA;YAG1B,MAAA,EAAO,CAAA,EAAoC,CAC1C;gBAAA,MAAO,CAAA,IAAA,CAAK,EAAA,CAAG,CAAA,OAAQ,CAAA;YAAA,CAAA;YAGxB,UAAA,EAAW,CAAA,EAAoC,CAC9C;gBAAA,MAAO,CAAA,IAAA,CAAK,EAAA,CAAG,CAAA,WAAY,CAAA;YAAA,CAAA;YAG5B,YAAA,EAAa,CAAA,EAAoC,CAChD;gBAAA,MAAO,CAAA,IAAA,CAAK,EAAA,CAAG,CAAA,aAAc,CAAA;YAAA,CAAA;QAAA,CAAA;IAAA,CAlIvB;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAyIT,EAAA,CAAgB,CAAA,EAAY,CAAA,GAAmB,CAAA;IAAA,CAAA,EAAgB,CAC9D;QAAA,GAAM,CAAA,CAAA,GAAS,CAAA,CAAO,OAAA,CAAQ,CAAA;QAC9B,MAAO,CAAA,CACN;YAAA,EAAA,EAAI,CAAA;YACJ,MAAA,EAAQ,CAAA;YACR,OAAA,EAAS,CAAA;QAAA,CAAA;IAAA,CALF;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAST,EAAA,GAA4B,CAC3B;QAAA,MAAO,CAAA,CACN;YAAA,EAAA,EAAI,CAAA;YACJ,OAAA,EAAS,CAAE;gBAAA,CAAA;YAAA,CAAA;YACX,KAAA,GAAO,CAAA;QAAA,CAAA;IAAA,CAJA;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAQT,EAAA,GAA4B,CAC3B;QAAA,MAAO,CAAA,CACN;YAAA,EAAA,EAAI,CAAA;YACJ,KAAA,GAAO,CAAA;QAAA,CAAA;IAAA,CAHA;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAOT,EAAA,GAA0B,CACzB;QAAA,MAAO,CAAA,CACN;YAAA,EAAA,EAAI,CAAA;YACJ,IAAA,GAAM,CAAA;QAAA,CAAA;IAAA,CAHC;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAOT,EAAA,CAAgB,CAAA,EAAwB,CACvC;QAAA,EAAA,EAAI,CAAA,IAAM,IAAA,EACT,KAAM,CAAA,GAAI,CAAA,KAAA,CAAM,CAAA;QAEjB,MAAO,CAAA,CACN;YAAA,EAAA,EAAI,CAAA;YACJ,IAAA,EAAK,CAAA,GAAY,CAAA,EAAG,CACnB;gBAAA,IAAA,CAAK,KAAA,CAAM,CAAA,GAAK,CAAA,GAChB,IAAA,CAAK,OAAA,CAAQ,CAAA;YAAA,CAAA;YAEd,IAAA,EAAK,CAAA,GAAY,CAAA,EAAG,CACnB;gBAAA,IAAA,CAAK,KAAA,CAAM,CAAA,GAAK,CAAA,GAChB,IAAA,CAAK,OAAA,CAAQ,CAAA;YAAA,CAAA;YAEd,EAAA,IAAa,CACZ;gBAAA,MAAO,CAAA,CAAA;YAAA,CAAA;YAER,KAAA,EAAM,CAAA,EAAW,CAChB;gBAAA,CAAA,GAAK,CAAA,EACD,CAAA,IAAM,CAAA,IACT,IAAA,CAAK,OAAA,CAAQ,CAAA;YAAA,CAAA;YAGf,MAAA,EAAO,CAAA,EAAoC,CAC1C;gBAAA,MAAO,CAAA,IAAA,CAAK,EAAA,CAAG,CAAA,OAAQ,CAAA;YAAA,CAAA;YAExB,MAAA,EAAO,CAAA,EAAoC,CAC1C;gBAAA,MAAO,CAAA,IAAA,CAAK,EAAA,CAAG,CAAA,OAAQ,CAAA;YAAA,CAAA;YAExB,OAAA,EAAQ,CAAA,EAAoC,CAC3C;gBAAA,MAAO,CAAA,IAAA,CAAK,EAAA,CAAG,CAAA,QAAS,CAAA;YAAA,CAAA;YAEzB,OAAA,IAAU,CACT;gBAAA,MAAO,IAAG,CAAA;YAAA,CAAA;QAAA,CAAA;IAAA,CAjCJ;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAsCT,EAAA,CAAkB,CAAA,EAAc,CAAA,GAAuB,CAAA;IAAA,CAAA,EAAkB,CA5jEzE;QAAA,GAAA,CAAA,CAAA;QA6jEC,EAAA,EAAI,CAAA,IAAQ,IAAA,EACX,KAAM,CAAA,GAAI,CAAA,KAAA,CAAM,CAAA;QAEjB,GAAI,CAAA,CAAA,GAAQ,CAAA,EACN,CAAA,IAAO,CAAA,GAAA,CAAA,CAAI,IAAA,KAAJ,IAAA,GAAA,CAAA,GAAY,CAAA,EACnB,CAAA,GAAY,IAAA,CAAK,GAAA,CAAK,CAAA,GAAO,CAAA,EAAO,CAAA;QAC1C,MAAO,CAAA,CACN;YAAA,EAAA,EAAI,CAAA;YACJ,MAAA,IAAS,CACR;gBAAA,CAAA,IAAS,CAAA,IAEL,CAAA,IAAS,CAAA,KACZ,IAAA,CAAK,OAAA,GAAU,EAAA,CAAI,CAAA,EAAO,CAAA,EAAW,CAAA,EAAM,CAAA,EAAG,CAAA,IAE3C,CAAA,IAAS,CAAA,IACZ,IAAA,CAAK,OAAA;YAAA,CAAA;QAAA,CAAA;IAAA,CAhBA;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAsBT,EAAA,CAAe,CAAA,EAAmB,CAAA,EAAiC,CAElE;QAAA,EAAA,GAAK,CAAA,EACJ,KAAM,CAAA,GAAI,CAAA,KAAA,CAAM,CAAA;QAGjB,GAAM,CAAA,CAAA,GAAS,CAAA;QAAA,CAAA;iBAEf,CAAA,CAAuB,CAAA,EAAe,CACrC;YAAA,CAAK,CAAO,CAAA,MACX,CAAA,CAAO,CAAA,IAAS,CACf;gBAAA,KAAA,EAAO,CAAA,CAAA;gBACP,KAAA,EAAO,CAAA,CAAA;gBACP,MAAA,EAAQ,CAAA,CAAA;gBACR,IAAA,EAAM,CAAA,CAAA;YAAA,CAAA;QAAA,CANA;QAAA,CAAA,CAAA,CAAA,EAAA,CAAA;iBAWT,CAAA,CAAY,CAAA,EAAO,CAAA,EAAO,CAAA,EAAQ,CACjC;YAAA,CAAA,CAAc,CAAA,GACd,CAAA,CAAO,CAAA,EAAO,CAAA,EAAO,IAAA,CAAK,CAAA;QAAA,CAFlB;QAAA,CAAA,CAAA,CAAA,EAAA,CAAA;iBAKT,CAAA,CAAiB,CAAA,EAAO,CAAA,KAAU,CAAA,EAAM,CACvC;YAAA,CAAA,CAAc,CAAA,GACd,CAAA,CAAO,CAAA,EAAO,CAAA,EAAO,OAAA,EAAS,CAAA,GAAW,CAAA,IAAU,CAAA;;QAAA,CAF3C;QAAA,MAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,WAKF,CACN;YAAA,EAAA,EAAI,CAAA;YACJ,KAAA,EAAO,CAAA;YACP,UAAA,EAAW,CAAA,KAAkB,CAAA,EAAM,CAClC;gBAAA,EAAA,EAAI,CAAA,KAAc,CAAA,CAAU,QAAA,CAAS,CAAA,GACpC,KAAM,CAAA,GAAI,CAAA,KAAA,EAAM,iBAAA,EAAoB,CAAA;gBAErC,CAAA,CAAQ,CAAA,QAAS,IAAA,CAAK,KAAA,KAAU,CAAA,GAChC,IAAA,CAAK,KAAA,GAAQ,CAAA,EACb,CAAA,CAAQ,CAAA,QAAS,IAAA,CAAK,KAAA,KAAU,CAAA;YAAA,CAAA;YAEjC,YAAA,EAAa,CAAA,EAAe,CAAA,EAAoB,CAC/C;gBAAA,CAAA,CAAG,CAAA,QAAS,CAAA,EAAO,CAAA;YAAA,CAAA;YAEpB,aAAA,EAAc,CAAA,EAAe,CAAA,EAAoB,CAChD;gBAAA,CAAA,CAAG,CAAA,SAAU,CAAA,EAAO,CAAA;YAAA,CAAA;YAErB,WAAA,EAAY,CAAA,EAAe,CAAA,EAAoB,CAC9C;gBAAA,CAAA,CAAG,CAAA,OAAQ,CAAA,EAAO,CAAA;YAAA,CAAA;YAEnB,YAAA,EAAa,CAAA,EAAe,CAAA,EAAoB,CAC/C;gBAAA,CAAA,CAAG,CAAA,QAAS,CAAA,EAAO,CAAA;YAAA,CAAA;YAEpB,MAAA,IAAS,CACR;gBAAA,CAAA,CAAQ,CAAA,SAAU,IAAA,CAAK,KAAA;YAAA,CAAA;YAExB,IAAA,IAAO,CACN;gBAAA,CAAA,CAAQ,CAAA,OAAQ,IAAA,CAAK,KAAA;YAAA,CAAA;QAAA,CAAA;IAAA,CAxDf;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;IA8DT,GAAM,CAAA,CAAA,GAAe,CACpB;QAAA,OAAA,GAAS,CAAA;QACT,SAAA,EAAW,CAAA;QACX,OAAA,GAAS,CAAA;QACT,GAAA,EAAK,CAAA,CAAI,GAAA;QACT,QAAA,IAAmB,CAClB;YAAA,MAAO,CAAA,CAAA,CAAK,IAAA,CAAK,IAAA;QAAA,CAAA;QAElB,SAAA,EAAW,EAAA;QACX,SAAA,EAAW,CAAA,CAAI,SAAA;QACf,QAAA,EAAU,CAAA,CAAO,KAAA;QACjB,GAAA,GAAM,CAAA,GAAQ,CAAA,CAAO,IAAA,EAAK,CAAA,EAAI,CAAA,CAAI,IAAA,GAAO,OAAA,CAAQ,CAAA,EAAA,EAAA,EAAO,CAAA;;QACxD,KAAA,GAAQ,CAAA,GAAQ,CAAA,CAAO,KAAA,EAAM,CAAA,EAAI,CAAA,CAAI,IAAA,GAAO,OAAA,CAAQ,CAAA,EAAA,EAAA,EAAO,CAAA;;QAC3D,YAAA,EAAc,IAAA;YACV,MAAA,IAAS,CACZ;YAAA,MAAO,CAAA,CAAA,CAAK,MAAA;QAAA,CAAA;YAET,MAAA,EAAO,CAAA,CAAG,CACb;YAAA,CAAA,CAAK,MAAA,GAAS,CAAA,EACV,CAAA,GACH,CAAA,CAAM,GAAA,CAAI,OAAA,KAEV,CAAA,CAAM,GAAA,CAAI,MAAA;QAAA,CAAA;IAAA,CAAA;aAKb,EAAA,CAAgB,CAAA,EAAsB,CACjC;QAAA,CAAA,CAAK,MAAA,GACR,CAAA,KAEA,CAAA,CAAK,EAAA,CAAG,CAAA,OAAQ,CAAA;IAAA,CAJT;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAQT,EAAA,CAAe,CAAA,EAAa,CAAA,EAAe,CAC1C;QAAA,CAAA,CAAK,MAAA,CAAO,CAAA,IAAM,CAAA;IAAA,CADV;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAIT,EAAA,CAAY,CAAA,KAAgB,CAAA,EAAM,CAEjC;QAAA,EAAA,GAAK,CAAA,CAAK,MAAA,CAAO,CAAA,GAChB,KAAM,CAAA,GAAI,CAAA,KAAA,EAAM,iBAAA,EAAoB,CAAA;QAGrC,GAAM,CAAA,CAAA,GAAS,CAAA,CAAK,EAAA,CAAG,CAAA,kBAAqB,CAE3C;YAAA,CAAA,CAAK,MAAA,GAAS,CAAA;YAAA,CAAA,EAEd,CAAA,CAAK,SAAA,GAAY,CAChB;gBAAA,GAAA,EAAK,GAAI,CAAA,EAAA;gBACT,MAAA,EAAQ,GAAI,CAAA,EAAA;gBACZ,IAAA,EAAM,GAAI,CAAA,EAAA;gBACV,OAAA,EAAS,GAAI,CAAA,EAAA;YAAA,CAAA,EAGd,CAAA,CAAK,IAAA,CAAK,OAAA,EAAS,CAAA,GAAQ,CACrB;gBAAA,CAAA,CAAI,IAAA,IACR,EAAA,CAAQ,CAAA;YAAA,CAAA,GAIV,CAAA,CAAK,MAAA,GAAS,GAAI,CAAA,EAAA,EAGlB,CAAA,CAAK,GAAA,GAAM,CACV;gBAAA,GAAA,EAAK,EAAA;gBACL,KAAA,EAAO,CAAA,CAAK,CAAA,EAAG,CAAA;gBACf,KAAA,EAAO,CAAA;gBACP,KAAA,EAAO,CAAA;YAAA,CAAA,EAGR,CAAA,CAAK,WAAA,GAAc,CAAA,CAAI,QAAA,IACvB,CAAA,CAAK,SAAA,GAAY,EAAA,IAEjB,CAAA,CAAK,MAAA,GAAS,CAAA;YAAA,CAAA,EACd,CAAA,CAAK,QAAA,GAAW,IAAA,EAChB,CAAA,CAAK,OAAA,GAAU,CAAA,EAEf,CAAA,CAAK,MAAA,CAAO,CAAA,KAAO,CAAA,GAEf,CAAA,CAAK,KAAA,MAAU,CAAA,IAClB,EAAA,IAGG,CAAA,CAAK,IAAA,IACR,EAAA,IAGD,CAAA;QAAA,CAAA;IAAA,CAlDO;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAwDT,EAAA,CAAoB,CAAA,EAAa,CAAA,EAAY,CAC5C;QAAA,GAAI,CAAA,CACH;YAAA,MAAO,CAAA,IAAA,CAAK,KAAA,CAAM,MAAA,CAAO,YAAA,CAAa,CAAA;QAAA,CAAA,CAAA,KAAA,EAC/B,CAAA,EAAN,CACD;YAAA,MAAI,CAAA,CAAA,IACH,EAAA,CAAQ,CAAA,EAAK,CAAA,GACN,CAAA,IAEA,IAAA;QAAA,CAAA;IAAA,CARD;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAaT,EAAA,CAAiB,CAAA,EAAa,CAAA,EAAW,CACxC;QAAA,MAAA,CAAO,YAAA,CAAa,CAAA,IAAO,IAAA,CAAK,SAAA,CAAU,CAAA;IAAA,CADlC;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAIT,EAAA,CAAiB,CAAA,EAAkD,CAClE;QAAA,GAAM,CAAA,CAAA,GAAQ,CAAA,CAAO,EAAA;QACrB,GAAA,CAAA,GAAW,CAAA,CAAA,IAAK,CAAA,CAEf,EAAA,CAAI,CAAA,IAAK,CAAA,CAAM,CAAA,GACX,CAAA,CAAK,MAAA,MAAW,CAAA,KAEnB,MAAA,CAAO,CAAA,IAAK,CAAA,CAAM,CAAA;QAGpB,MAAO,CAAA,EAAA;IAAA,CAVC;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAaT,EAAA,GAAwB,CACvB;QAAA,MAAO,CAAA,CAAA,CAAK,CAAA,KAAU,CAAA,EAAG,CAAA,KAAW,CAAA;IAAA,CAD5B;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAIT,EAAA,CAAc,CAAA,EAAc,CAAA,EAAS,CAEpC;QAAA,MAAO,CAAA,CAEN;YAAA,EAAA,EAAI,CAAA;YACJ,OAAA,EAAS,CAAA,CAAE,KAAA;YAEX,UAAA,KAAc,CAAA,EAAM,CACnB;gBAAA,GAAM,CAAA,CAAA,GAAI,CAAA,IAAQ,CAAA;gBAClB,IAAA,CAAK,OAAA,GAAU,CAAA,CAAE,KAAA,IACjB,IAAA,CAAK,GAAA,GAAM,CAAA,CACV,CAAA,CAAM,MAAA,GAAS,CAAA,GAAI,IAAA,CAAK,OAAA,CAAQ,CAAA,GAAI,CAAA,CAAM,SAAA,IAC1C,CAAA,CAAM,MAAA,GAAS,CAAA,GAAI,IAAA,CAAK,OAAA,CAAQ,CAAA,GAAI,CAAA,CAAM,UAAA;YAAA,CAAA;YAI5C,QAAA,IAAW,CACV;gBAAA,IAAA,CAAK,UAAA,CAAW,IAAA,CAAK,OAAA,CAAQ,GAAA,CAAI,CAAA,CAAK,EAAA,EAAI,CAAA;YAAA,CAAA;YAG3C,SAAA,IAAY,CACX;gBAAA,IAAA,CAAK,UAAA,CAAW,IAAA,CAAK,OAAA,CAAQ,GAAA,CAAI,CAAA,CAAK,CAAA,EAAG,CAAA;YAAA,CAAA;YAG1C,MAAA,IAAS,CACR;gBAAA,IAAA,CAAK,UAAA,CAAW,IAAA,CAAK,OAAA,CAAQ,GAAA,CAAI,CAAA,CAAK,CAAA,EAAG,EAAA;YAAA,CAAA;YAG1C,QAAA,IAAW,CACV;gBAAA,IAAA,CAAK,UAAA,CAAW,IAAA,CAAK,OAAA,CAAQ,GAAA,CAAI,CAAA,CAAK,CAAA,EAAG,CAAA;YAAA,CAAA;QAAA,CAAA;IAAA,CA7BnC;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAoCT,EAAA,CAAkB,CAAA,EAAe,CAAA,EAAsB,CAEtD;QAAA,EAAA,GAAK,CAAA,CAAI,KAAA,KAAU,CAAA,CAAI,MAAA,EACtB,KAAM,CAAA,GAAI,CAAA,KAAA,CAAM,CAAA;QAGjB,GAAM,CAAA,CAAA,GAAkB,CAAA,CAAA,EAClB,CAAA,GAAS,CAAA,CAAK,CAAA,CAAI,GAAA,IAAO,CAAA,CAAK,CAAA,IAChC,CAAA,GAAU,CAAA,EAER,CAAA,GAAQ,CAEb;YAAA,MAAA,IAAS,CACR;gBAAA,MAAO,CAAA,CAAA,CAAO,KAAA;YAAA,CAAA;YAGf,SAAA,IAAY,CACX;gBAAA,MAAO,CAAA,CAAA,CAAI,KAAA;YAAA,CAAA;YAGZ,UAAA,IAAa,CACZ;gBAAA,MAAO,CAAA,CAAA,CAAI,MAAA;YAAA,CAAA;YAGZ,MAAA,KAAU,CAAA,EAAY,CACrB;gBAAA,GAAM,CAAA,CAAA,GAAI,CAAA,IAAQ,CAAA;gBAClB,MAAO,CAAA,CAAA,CACN,CAAA,CAAO,CAAA,GAAI,CAAA,CAAE,CAAA,GAAI,CAAA,CAAI,KAAA,EACrB,CAAA,CAAO,CAAA,GAAI,CAAA,CAAE,CAAA,GAAI,CAAA,CAAI,MAAA;YAAA,CAAA;YAIvB,KAAA,EAAM,CAAA,KAAgB,CAAA,EAAe,CAEpC;gBAAA,GAAM,CAAA,CAAA,GAAI,CAAA,IAAQ,CAAA,GAEZ,CAAA,QAAe,CACpB;oBAAA,EAAA,EAAI,CAAA,CAAI,CAAA,GAAM,CACb;wBAAA,EAAA,EAAI,MAAO,CAAA,CAAA,CAAI,CAAA,KAAS,CAAA,WACvB,KAAM,CAAA,GAAI,CAAA,KAAA,CAAM,CAAA;wBAEjB,MAAO,CAAA,CAAA,CAAI,CAAA,EAAK,CAAA;oBAAA,CAAA,MAAA,EAAA,EACN,CAAA,CAAI,GAAA,EACd,MAAO,CAAA,CAAA,CAAI,GAAA,CAAI,CAAA,EAAK,CAAA;gBAAA,CAAA;gBAItB,EAAA,GAAK,CAAA,EACJ,MAAA;gBAGD,GAAM,CAAA,CAAA,GAAU,CAAA,CACf,CAAA,CAAO,CAAA,GAAI,CAAA,CAAE,CAAA,GAAI,CAAA,CAAI,KAAA,EACrB,CAAA,CAAO,CAAA,GAAI,CAAA,CAAE,CAAA,GAAI,CAAA,CAAI,MAAA;gBAGtB,GAAA,EAAA,GAAW,CAAA,EAAA,IAAQ,CAAA,CAClB,EAAA,EAAI,EAAA,CAAK,EAAA,KAAO,CAAA,MAAO,CACtB;oBAAA,CAAA,CAAQ,CAAA,IAAK,EAAA,CAAK,GAAA,CAAI,CAAA,EACtB,CAAA,CAAQ,CAAA,IAAK,EAAA,CAAK,GAAA,CAAI,CAAA;oBACtB,KAAA;gBAAA,CAIF;gBAAA,CAAA,CAAM,IAAA,CAAK,EAAA,CAAI,CAAA,IACf,CAAA,CAAM,IAAA,CAAK,EAAA,CAAK,IAAA,EAAM,CAAA;gBAEtB,GAAM,CAAA,CAAA,GAAM,CAAA,CAAI,CAAA;gBAEhB,MAAA,CAAA,CAAA,CAAK,IAAA,CAAK,CAAA,GAEH,CAAA;YAAA,CAAA;YAIR,KAAA,IAAQ,CACP;gBAAA,MAAO,CAAA,CAAA,GAAU,CAAA,CAAI,KAAA;YAAA,CAAA;YAGtB,MAAA,IAAS,CACR;gBAAA,MAAO,CAAA,CAAA,CAAI,MAAA,GAAS,CAAA,CAAI,MAAA;YAAA,CAAA;YAGzB,OAAA,IAAU,CACT;gBAAA,GAAA,EAAA,GAAW,CAAA,CAAA,IAAO,CAAA,CACjB,EAAA,CAAQ,CAAA;YAAA,CAAA;QAAA,CAAA;QAMX,MAAA,CAAA,CAAA,CAAI,OAAA,EAAS,CAAA,EAAK,CAAA,GAAM,CAEvB;YAAA,GAAM,CAAA,CAAA,GAAO,CAAA,CAAI,KAAA,CAAM,CAAA;YAEvB,CAAA,GAAU,IAAA,CAAK,GAAA,CAAI,CAAA,CAAK,MAAA,EAAQ,CAAA,GAEhC,CAAA,CAAK,OAAA,EAAS,CAAA,EAAK,CAAA,GAAM,CACxB;gBAAA,CAAA,CAAM,KAAA,CAAM,CAAA,EAAK,CAAA,CAAK,CAAA,EAAG,CAAA;YAAA,CAAA;QAAA,CAAA,GAKpB,CAAA;IAAA,CAvGC;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aA2GT,EAAA,CAAgB,CAAA,EAAuB,CAEtC;QAAA,GAAM,CAAA,CAAA,GAAS,CAAA,CAAI,MAAA,CAAO,aAAA,CAAc,CAAA,GAClC,CAAA,GAAY,CAAA,CAAM,GAAA,CAAI,4BAAA;QAE5B,CAAA,CAAM,UAAA,CAAW,OAAA,CAAQ,CAAA;QAEzB,GAAM,CAAA,CAAA,GAAc,CAAA,CAAU,MAAA,GACvB,CAAA,IAAmB,CAAA,CAAY,cAAA,IAKhC,CAAA,GAAW,GAAI,CAAA,aAAA,CAAc,CAAA,GAC7B,CAAA,GAAS,CAAA,CAAA;QAEf,MAAA,CAAA,CAAA,CAAS,eAAA,IAAmB,CAAA,GAAM,CACjC;YAAA,CAAI,CAAE,IAAA,CAAK,IAAA,GAAO,CAAA,IACjB,CAAA,CAAO,IAAA,CAAK,CAAA,CAAE,IAAA;QAAA,CAAA,EAIhB,CAAA,CAAS,OAAA,IAAU,CAAC,GAAM,CACzB;YAAA,CAAA,CAAM,UAAA,CAAW,UAAA,CAAW,CAAA,GAC5B,CAAA,CAAO,SAAA,GAAY,OAAA,EAAQ,CAAA,GAAK,CAAA,CAAE,IAAA;;QAAA,CAAA,EAGnC,CAAA,CAAS,KAAA,IAEF,CAEN;YAAA,MAAA,IAAS,CACR;gBAAA,CAAA,CAAS,MAAA;YAAA,CAAA;YAGV,KAAA,IAAQ,CACP;gBAAA,CAAA,CAAS,KAAA;YAAA,CAAA;YAGV,QAAA,EAAS,CAAA,GAAW,CAAA,aAAc,CAEjC;gBAAA,CAAA,CAAS,MAAA,OAAe,CACvB;oBAAA,EAAA,CAAa,GAAI,CAAA,IAAA,CAAK,CAAA,EAAQ,CAC7B;wBAAA,IAAA,EAAM,CAAA;oBAAA,CAAA,GACH,CAAA;gBAAA,CAAA,EAGL,CAAA,CAAS,IAAA,IAET,CAAA,CAAM,UAAA,CAAW,UAAA,CAAW,CAAA,GAC5B,CAAA,CAAO,SAAA,GAAY,OAAA,EAAQ,CAAA,GAAK,CAAA,CAAE,IAAA;;YAAA,CAAA;QAAA,CAAA;IAAA,CAlD5B;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;IAyDT,GAAM,CAAA,EAAA,GAAiB,CAEtB;QAAA,QAAA,EAAU,CAAA,CAAO,QAAA;QACjB,UAAA,EAAY,CAAA,CAAO,UAAA;QACnB,eAAA,EAAiB,CAAA,CAAO,eAAA;QACxB,SAAA,EAAW,CAAA,CAAO,SAAA;QAClB,QAAA,EAAU,CAAA,CAAO,QAAA;QACjB,UAAA,EAAY,CAAA,CAAO,UAAA;QACnB,YAAA,EAAc,CAAA,CAAO,YAAA;QACrB,SAAA,EAAW,CAAA,CAAO,SAAA;QAClB,QAAA,EAAU,CAAA,CAAO,QAAA;QACjB,IAAA,EAAM,CAAA,CAAO,IAAA;QAEb,KAAA,EAAA,CAAA;QACA,MAAA,EAAA,CAAA;QACA,MAAA,EAAA,EAAA;QACA,EAAA,EAAA,CAAA;QACA,IAAA,EAAM,CAAA,CAAI,IAAA;QACV,UAAA,EAAY,CAAA,CAAI,UAAA;QAChB,MAAA,EAAQ,EAAA;QACR,OAAA,EAAS,CAAA,CAAI,SAAA;QACb,SAAA,EAAW,CAAA,CAAI,SAAA;QACf,KAAA,EAAO,CAAA,CAAI,KAAA;QACX,MAAA,EAAQ,CAAA,CAAI,MAAA;QACZ,SAAA,EAAA,EAAA;QACA,UAAA,EAAY,CAAA,CAAI,UAAA;QAChB,YAAA,EAAc,CAAA,CAAI,YAAA;QAClB,MAAA,EAAA,EAAA;QACA,KAAA,EAAO,EAAA;QACP,OAAA,MAAe,CAAA,CAAI,OAAA;;QAEnB,MAAA,EAAA,EAAA;QACA,MAAA,EAAA,CAAA;QACA,QAAA,EAAA,CAAA;QACA,MAAA,EAAA,CAAA;QACA,KAAA,EAAA,CAAA;QACA,QAAA,EAAA,CAAA;QACA,OAAA,EAAA,CAAA;QACA,OAAA,EAAA,EAAA;QAEA,GAAA,EAAA,CAAA;QACA,KAAA,EAAA,EAAA;QACA,OAAA,EAAA,EAAA;QACA,UAAA,EAAA,EAAA;QACA,GAAA,EAAA,EAAA;QACA,KAAA,EAAA,EAAA;QACA,MAAA,EAAA,EAAA;QAEA,GAAA,EAAA,EAAA;QACA,KAAA,EAAA,EAAA;QACA,MAAA,EAAA,EAAA;QACA,KAAA,EAAA,EAAA;QACA,OAAA,EAAA,EAAA;QACA,MAAA,EAAA,EAAA;QACA,KAAA,EAAA,EAAA;QACA,IAAA,EAAA,EAAA;QACA,MAAA,EAAA,EAAA;QACA,IAAA,EAAA,EAAA;QACA,IAAA,EAAA,EAAA;QACA,MAAA,EAAA,EAAA;QACA,MAAA,EAAA,EAAA;QACA,OAAA,EAAA,EAAA;QACA,IAAA,EAAA,EAAA;QACA,MAAA,EAAA,EAAA;QACA,KAAA,EAAA,EAAA;QACA,KAAA,EAAA,EAAA;QACA,KAAA,EAAA,EAAA;QACA,IAAA,EAAA,EAAA;QACA,MAAA,EAAA,EAAA;QACA,QAAA,EAAA,EAAA;QACA,CAAA,EAAA,EAAA;QACA,IAAA,EAAA,EAAA;QACA,OAAA,EAAA,EAAA;QACA,MAAA,EAAA,EAAA;QACA,KAAA,EAAA,EAAA;QAEA,EAAA,EAAA,CAAA;QACA,QAAA,EAAA,CAAA;QACA,MAAA,EAAA,EAAA;QACA,SAAA,EAAA,EAAA;QACA,OAAA,EAAA,EAAA;QACA,OAAA,EAAA,EAAA;QACA,MAAA,EAAQ,CAAA;QACR,MAAA,EAAQ,EAAA;QACR,QAAA,EAAU,EAAA;QACV,MAAA,EAAQ,EAAA;QACR,MAAA,EAAQ,EAAA;QAER,SAAA,EAAA,CAAA;QACA,UAAA,EAAA,CAAA;QACA,gBAAA,EAAA,CAAA;QACA,YAAA,EAAA,CAAA;QACA,WAAA,EAAA,CAAA;QACA,YAAA,EAAA,CAAA;QACA,cAAA,EAAA,CAAA;QACA,WAAA,EAAA,CAAA;QACA,WAAA,EAAA,CAAA;QACA,YAAA,EAAA,EAAA;QACA,WAAA,EAAA,CAAA;QACA,UAAA,EAAA,EAAA;QACA,OAAA,EAAS,CAAA;QACT,QAAA,EAAU,CAAA;QACV,WAAA,EAAa,CAAA;QACb,UAAA,EAAY,CAAA;QACZ,SAAA,EAAW,CAAA;QACX,UAAA,EAAY,CAAA;QACZ,YAAA,EAAc,CAAA;QACd,SAAA,EAAW,CAAA;QACX,SAAA,EAAW,CAAA;QACX,UAAA,EAAY,EAAA;QACZ,SAAA,EAAW,CAAA;QACX,QAAA,EAAU,EAAA;QACV,QAAA,EAAA,CAAA;QACA,aAAA,EAAA,EAAA;QACA,aAAA,EAAe,CAAA,CAAI,aAAA;QACnB,SAAA,EAAW,CAAA,CAAI,SAAA;QACf,YAAA,EAAc,CAAA,CAAI,YAAA;QAClB,kBAAA,EAAoB,CAAA,CAAI,kBAAA;QACxB,aAAA,EAAe,CAAA,CAAI,aAAA;QACnB,WAAA,EAAa,CAAA,CAAI,WAAA;QACjB,cAAA,EAAgB,CAAA,CAAI,cAAA;QACpB,eAAA,EAAiB,CAAA,CAAI,eAAA;QACrB,YAAA,EAAc,CAAA,CAAI,YAAA;QAClB,SAAA,EAAW,CAAA,CAAI,SAAA;QACf,YAAA,EAAc,CAAA,CAAI,YAAA;QAClB,eAAA,EAAiB,CAAA,CAAI,kBAAA;QACrB,aAAA,EAAe,CAAA,CAAI,aAAA;QACnB,WAAA,EAAa,CAAA,CAAI,WAAA;QACjB,cAAA,EAAgB,CAAA,CAAI,cAAA;QACpB,eAAA,EAAiB,CAAA,CAAI,eAAA;QACrB,YAAA,EAAc,CAAA,CAAI,YAAA;QAElB,IAAA,EAAA,EAAA;QACA,IAAA,EAAA,EAAA;QAEA,IAAA,EAAA,CAAA;QACA,MAAA,EAAQ,CAAA,CAAM,MAAA;QACd,IAAA,EAAM,CAAA,CAAM,IAAA;QACZ,QAAA,EAAU,CAAA,CAAM,GAAA;QAEhB,GAAA,EAAA,EAAA;QACA,IAAA,EAAA,EAAA;QACA,KAAA,EAAA,EAAA;QACA,QAAA,EAAA,EAAA;QACA,IAAA,EAAA,CAAA;QACA,GAAA,EAAA,EAAA;QACA,GAAA,EAAA,CAAA;QACA,OAAA,EAAA,EAAA;QACA,IAAA,EAAA,EAAA;QACA,MAAA,EAAA,EAAA;QACA,MAAA,EAAA,EAAA;QACA,IAAA,EAAA,EAAA;QACA,GAAA,EAAA,EAAA;QACA,IAAA,EAAA,EAAA;QACA,IAAA,EAAA,EAAA;QACA,OAAA,EAAA,EAAA;QACA,OAAA,EAAA,EAAA;QACA,YAAA,EAAA,EAAA;QACA,YAAA,EAAA,EAAA;QACA,cAAA,EAAA,EAAA;QACA,eAAA,EAAA,EAAA;QACA,aAAA,EAAA,EAAA;QACA,YAAA,EAAA,EAAA;QACA,YAAA,EAAA,EAAA;QACA,YAAA,EAAA,EAAA;QACA,YAAA,EAAA,EAAA;QACA,aAAA,EAAA,EAAA;QACA,gBAAA,EAAA,EAAA;QACA,eAAA,EAAA,EAAA;QACA,kBAAA,EAAA,EAAA;QACA,gBAAA,EAAA,EAAA;QACA,eAAA,EAAA,EAAA;QACA,eAAA,EAAA,EAAA;QAEA,UAAA,EAAA,CAAA;QACA,QAAA,EAAA,EAAA;QAEA,QAAA,EAAU,CAAA,CAAI,QAAA;QACd,QAAA,EAAU,CAAA,CAAI,QAAA;QACd,SAAA,EAAW,CAAA,CAAI,SAAA;QACf,YAAA,EAAc,CAAA,CAAI,YAAA;QAClB,UAAA,EAAY,CAAA,CAAI,UAAA;QAChB,WAAA,EAAa,CAAA,CAAI,WAAA;QACjB,UAAA,EAAY,CAAA,CAAI,UAAA;QAChB,WAAA,EAAa,CAAA,CAAI,WAAA;QACjB,aAAA,EAAe,CAAA,CAAI,aAAA;QACnB,YAAA,EAAc,CAAA,CAAI,YAAA;QAClB,aAAA,EAAe,CAAA,CAAI,aAAA;QACnB,UAAA,EAAY,CAAA,CAAI,WAAA;QAChB,SAAA,EAAW,CAAA,CAAI,SAAA;QAEf,KAAA,EAAA,CAAA;QAEA,KAAA,EAAA,EAAA;QACA,EAAA,EAAA,EAAA;QAEA,QAAA,EAAA,EAAA;QAEA,OAAA,EAAA,EAAA;QACA,OAAA,EAAA,EAAA;QAEA,IAAA,EAAA,EAAA;QAEA,WAAA,EAAA,EAAA;QACA,WAAA,EAAA,EAAA;QAEA,IAAA,EAAM,CAAA,CAAK,EAAA,EAAI,CAAA;QACf,KAAA,EAAO,CAAA,CAAK,CAAA,EAAG,CAAA;QACf,EAAA,EAAI,CAAA,CAAK,CAAA,EAAG,EAAA;QACZ,IAAA,EAAM,CAAA,CAAK,CAAA,EAAG,CAAA;QAEd,GAAA,EAAK,CAAA,CAAI,GAAA,EAAK,CAAA,EAAG,CAAA;QACjB,KAAA,EAAO,CAAA,CAAI,CAAA,EAAG,GAAA,EAAK,CAAA;QACnB,IAAA,EAAM,CAAA,CAAI,CAAA,EAAG,CAAA,EAAG,GAAA;QAChB,MAAA,EAAQ,CAAA,CAAI,GAAA,EAAK,GAAA,EAAK,CAAA;QACtB,OAAA,EAAS,CAAA,CAAI,GAAA,EAAK,CAAA,EAAG,GAAA;QACrB,IAAA,EAAM,CAAA,CAAI,CAAA,EAAG,GAAA,EAAK,GAAA;QAClB,KAAA,EAAO,CAAA,CAAI,GAAA,EAAK,GAAA,EAAK,GAAA;QACrB,KAAA,EAAO,CAAA,CAAI,CAAA,EAAG,CAAA,EAAG,CAAA;QAEjB,MAAA,EAAQ,CAAA,CAAI,MAAA;IAAA,CAAA;IASb,EAAA,EANA,EAAA,CAAK,EAAA,GAED,CAAA,CAAK,OAAA,IACR,CAAA,CAAK,OAAA,CAAQ,OAAA,CAAQ,EAAA,GAGlB,CAAA,CAAK,MAAA,MAAW,CAAA,EACnB,GAAA,CAAA,GAAW,CAAA,EAAA,IAAK,EAAA,CACf,MAAA,CAAO,EAAA,IAAK,EAAA,CAAI,EAAA;IAIlB,GAAI,CAAA,EAAA,GAAY,CAAA;aAEhB,EAAA,GAAkB,CACjB;QAAA,MAAO,CAAA,EAAA;IAAA,CADC;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAIT,EAAA,GAAuB,CAEtB;QAAA,CAAA,CAAK,OAAA,CAAQ,CAAA,eAGb,CAAA,CAAK,MAAA,CAAO,OAAA,EAAS,CAAA,EAAG,CAAA,GAAO,CAC9B;YAAA,CAAA,CAAE,IAAA,IAAQ,CAAA,IACN,CAAA,CAAE,IAAA,IAAQ,CAAA,KAEb,CAAA,CAAE,MAAA,IACF,CAAA,CAAK,MAAA,CAAO,MAAA,CAAO,CAAA;QAAA,CAAA,GAKrB,EAAA,EAAO,CAAC,GAAQ,CACf;YAAA,CAAK,CAAI,MAAA,IACR,CAAA,CAAI,OAAA,CAAQ,CAAA,SAAU,CAAA;QAAA,CAAA;IAAA,CAjBhB;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAuBT,EAAA,GAAqB,CAGpB;QAAA,GAAM,CAAA,CAAA,GAAO,CAAA,CAAK,CAAA,IAAS,CAAA,KACrB,CAAA,GAAM,CAAA,CAAK,GAAA,EACX,CAAA,GAAQ,EAAA,CAAI,EAAA,CAAK,CAAA,EAAG,GAAA,GAAM,KAAA,CAAM,CAAA,CAAI,KAAA;QAE1C,CAAA,CAAI,KAAA,GAAQ,EAAA,CAAK,CAAA,CAAI,KAAA,EAAO,CAAA,EAAG,CAAA,GAAI,CAAA,KACnC,CAAA,CAAK,SAAA,GAAY,EAAA,GACf,SAAA,CAAU,CAAA,CAAK,KAAA,CAAM,GAAA,GACrB,KAAA,CAAM,CAAA,CAAI,KAAA,EACV,OAAA,CAAQ,CAAA,CAAI,KAAA,EACZ,SAAA,CAAU,CAAA,CAAK,KAAA,CAAM,IAAA,GACrB,SAAA,CAAU,CAAA,CAAI,GAAA,CAAI,KAAA,CAAM,EAAA,EAAI,GAAA,CAAI,CAAA,CAAK,KAAA,CAAM,GAAA,GAAM,GAAA,CAAI,CAAA,IAIvD,EAAA,EAAO,CAAA,GAAQ,CAEd;YAAA,CAAK,CAAI,MAAA,KAER,CAAA,CAAI,aAAA,IAEC,CAAA,CAAI,KAAA,IACR,CAAA,CAAI,WAAA,CAAY,CAAA,CAAK,SAAA,GAGtB,CAAA,CAAI,OAAA,CAAQ,CAAA,QACZ,CAAA,CAAI,YAAA;QAAA,CAAA;IAAA,CA5BE;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAoCT,EAAA,GAA0B,CAGzB;QAAA,GAAM,CAAA,CAAA,GAAW,CAAA,CAAO,YAAA;QAExB,EAAA,EAAI,CAAA,KAAa,CAAA,EAChB,CAAA,CAAK,MAAA,IAAS,CAAA,EACd,CAAA,CAAK,OAAA,CAAQ,CAAA;aACP,CAEN;YAAA,GAAM,CAAA,CAAA,GAAI,CAAA,KAAU,CAAA,EACd,CAAA,GAAI,EAAA,GAAK,CAAA,CAAI,KAAA,IACb,CAAA,GAAM,CAAA,CAAK,CAAA,KAAU,CAAA,EAAG,CAAA,KAAW,CAAA,EAAG,GAAA,CAAI,CAAA,CAAK,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,CAAA;YAEhE,CAAA,CAAI,QAAA,CAAS,CACZ;gBAAA,GAAA,EAAK,CAAA,CAAK,CAAA;gBACV,KAAA,EAAO,CAAA;gBACP,MAAA,EAAQ,CAAA;gBACR,KAAA,EAAO,CAAA,CAAI,CAAA,EAAG,CAAA,EAAG,CAAA;YAAA,CAAA,GAGlB,CAAA,CAAI,QAAA,CAAS,CACZ;gBAAA,GAAA,EAAK,CAAA;gBACL,KAAA,EAAO,CAAA;gBACP,MAAA,EAAQ,CAAA;gBACR,IAAA,GAAM,CAAA;gBACN,OAAA,EAAS,CACR;oBAAA,KAAA,EAAO,CAAA,GAAI,CAAA,CAAI,KAAA;gBAAA,CAAA;YAAA,CAAA,GAIjB,CAAA,CAAI,QAAA,CAAS,CACZ;gBAAA,GAAA,EAAK,CAAA;gBACL,KAAA,EAAO,CAAA,GAAI,CAAA;gBACX,MAAA,EAAQ,CAAA;YAAA,CAAA;QAAA,CAAA;IAAA,CAlCF;IAAA,CAAA,CAAA,EAAA,EAAA,CAAA;aAyCT,EAAA,GAAqB,CA9yFrB;QAAA,GAAA,CAAA,CAAA;QAgzFC,EAAA,EAAI,CAAA,CAAM,OAAA,EAAS,CAMlB;YAAA,GAAS,CAAA,CAAA,GAAT,QAAA,CAAwB,CAAA,EAAK,CAAA,EAAK,CAEjC;gBAAA,GAAM,CAAA,CAAA,GAAI,CAAA,CAAI,KAAA,EACR,CAAA,GAAM,CAAA,CAAK,CAAA;gBAEjB,CAAA,CAAI,aAAA,IACJ,CAAA,CAAI,aAAA,CAAc,CAAA,GAClB,CAAA,CAAI,SAAA,CAAU,CAAA,GAAI,CAAA;gBAElB,GAAM,CAAA,CAAA,GAAO,CAAA,CAAI,OAAA,CAAQ,CACxB;oBAAA,IAAA,EAAM,CAAA;oBACN,IAAA,EAAM,CAAA;oBACN,IAAA,EAAM,EAAA;oBACN,GAAA,EAAK,CAAA;oBACL,KAAA,EAAO,CAAA,CAAI,GAAA,EAAK,GAAA,EAAK,GAAA;gBAAA,CAAA,GAGhB,CAAA,GAAK,CAAA,CAAK,KAAA,GAAQ,CAAA,CAAI,CAAA,GAAI,CAAA,EAC1B,CAAA,GAAK,CAAA,CAAK,MAAA,GAAS,CAAA,CAAI,CAAA,GAAI,CAAA;gBAE7B,CAAA,CAAI,CAAA,GAAI,CAAA,GAAK,CAAA,IAAK,CAAA,MACrB,CAAA,CAAI,aAAA,CAAc,CAAA,EAAM,CAAA,EAAI,CAAA,IAGzB,CAAA,CAAI,CAAA,GAAI,CAAA,GAAK,CAAA,IAAK,CAAA,MACrB,CAAA,CAAI,aAAA,CAAc,CAAA,CAAK,CAAA,GAAI,CAAA,IAG5B,CAAA,CAAI,QAAA,CAAS,CACZ;oBAAA,KAAA,EAAO,CAAA;oBACP,MAAA,EAAQ,CAAA;oBACR,KAAA,EAAO,CAAA,CAAI,CAAA,EAAG,CAAA,EAAG,CAAA;oBACjB,MAAA,EAAQ,CAAA;oBACR,OAAA,EAAS,GAAA;gBAAA,CAAA,GAGV,CAAA,CAAI,WAAA,CAAY,CAAA,GAChB,CAAA,CAAI,YAAA;YAAA,CAAA;YArCI,CAAA,CAAA,CAAA,EAAA,CAAA;YAJT,GAAI,CAAA,CAAA,GAAa,IAAA,EACX,CAAA,GAAO,CAAA,CAAO,KAAA,CAAM,CAAA,GACpB,CAAA,GAAS,CAAA,EAAI,CAAA,GAAA,CAAA,CAAK,YAAA,KAAL,IAAA,GAAA,CAAA,GAAqB,CAAC;gBAAA,CAAA;gBAAG,CAAA;gBAAG,GAAA;YAAA,CAAA;YAyF/C,EAAA,EA7CA,EAAA,EAAO,CAAA,GAAQ,CAMd;gBAAA,EAAA,GAJK,CAAA,CAAI,IAAA,IAIL,CAAA,CAAI,MAAA,EACP,MAAA;gBAGD,GAAM,CAAA,CAAA,GAAQ,CAAA,CAAI,KAAA,MAAW,CAAA,CAAI,KAAA,GAAQ,CAAA,IAAI,CAAA,CAAK,GAAA,CAAI,KAAA,CAAM,CAAA,GAAI,CAAA,CAAK,GAAA,CAAI,KAAA,CAAM,CAAA,IAAK,CAAA;gBAEpF,CAAK,CAAI,KAAA,KACR,CAAA,CAAI,aAAA,IACJ,CAAA,CAAI,WAAA,CAAY,CAAA,CAAK,SAAA,IAGjB,CAAA,IACA,CAAA,CAAI,UAAA,OACP,CAAA,GAAa,CAAA;gBAIf,GAAM,CAAA,CAAA,IAAU,CAAA,KAAe,CAAA,GAAM,CAAA,GAAI,CAAA,IAAK,CAAA,EACxC,CAAA,GAAI,CAAA,CAAI,SAAA,IACR,CAAA,GAAI,CAAA,CAAE,EAAA,CAAG,CAAA,GAAI,CAAA,CAAE,EAAA,CAAG,CAAA,EAClB,CAAA,GAAI,CAAA,CAAE,EAAA,CAAG,CAAA,GAAI,CAAA,CAAE,EAAA,CAAG,CAAA;gBAExB,CAAA,CAAI,QAAA,CAAS,CACZ;oBAAA,GAAA,EAAK,CAAA,CAAE,EAAA;oBACP,KAAA,EAAO,CAAA;oBACP,MAAA,EAAQ,CAAA;oBACR,OAAA,EAAS,CACR;wBAAA,KAAA,EAAO,CAAA;wBACP,KAAA,EAAO,CAAA;oBAAA,CAAA;oBAER,IAAA,GAAM,CAAA;gBAAA,CAAA,GAGF,CAAA,CAAI,KAAA,IACR,CAAA,CAAI,YAAA;YAAA,CAAA,GAKF,CAAA,EAAY,CAEf;gBAAA,GAAM,CAAA,CAAA,GAAQ,CAAA,CAAA,EACR,CAAA,GAAO,CAAA,CAAW,OAAA;gBAExB,GAAA,CAAA,GAAW,CAAA,CAAA,IAAO,CAAA,CACb,CAAA,CAAK,CAAA,IACR,CAAA,CAAM,IAAA,IAAQ,CAAA,CAAA,EAAA,EAAQ,CAAA,CAAK,CAAA,OAE3B,CAAA,CAAM,IAAA,IAAQ,CAAA;gBAIhB,CAAA,CAAe,CAAA,IAAY,CAAA,CAAM,IAAA,EN13DpB,CM03DyB;YAAA,CAIvC;YAAA,CAAA,CAAe,CAAA,CAAK,CAAA,GAAI,CAAA,CAAI,KAAA,IAAQ,KAAA,EAAQ,CAAA,CAAI,GAAA;QAAA,CAIjD;QAAA,EAAA,EAAI,CAAA,CAAM,MAAA,EAAQ,CAGjB;YAAA,CAAA,CAAI,aAAA,IACJ,CAAA,CAAI,aAAA,CAAc,CAAA,IAAS,CAAA,GAC3B,CAAA,CAAI,SAAA,CAAU,CAAA,GAAI,CAAA,CAAI,KAAA,GACtB,CAAA,CAAI,aAAA,CAAc,EAAA,EAAI,CAAA;YAEtB,GAAM,CAAA,CAAA,GAAO,EAAA;YAGb,CAAA,CAAI,QAAA,CAAS,CACZ;gBAAA,KAAA,EAAO,CAAA;gBACP,MAAA,EAAQ,CAAA;gBACR,MAAA,EAAQ,CAAA;gBACR,KAAA,EAAO,CAAA,CAAI,CAAA,EAAG,CAAA,EAAG,CAAA;gBACjB,OAAA,EAAS,GAAA;gBACT,MAAA,EAAQ,CAAA;YAAA,CAAA;YAIT,GAAA,CAAA,GAAS,CAAA,CAAA,GAAI,CAAA,EAAG,CAAA,IAAK,CAAA,EAAG,CAAA,GACvB,CAAA,CAAI,QAAA,CAAS,CACZ;gBAAA,KAAA,EAAO,CAAA;gBACP,MAAA,EAAQ,CAAA,GAAO,GAAA;gBACf,MAAA,EAAQ,CAAA;gBACR,GAAA,EAAK,CAAA,EAAM,CAAA,GAAO,CAAA,GAAI,CAAA,EAAG,CAAA,GAAO,GAAA;gBAChC,KAAA,EAAO,CAAA,CAAI,GAAA,EAAK,GAAA,EAAK,GAAA;gBACrB,MAAA,EAAQ,CAAA;YAAA,CAAA;YAIV,CAAA,CAAI,YAAA;QAAA,CAIL;QAAA,EAAA,EAAI,CAAA,CAAM,SAAA,KAAc,CAAA,EAAG,CAG1B;YAAA,CAAA,CAAI,aAAA,IACJ,CAAA,CAAI,aAAA,CAAc,CAAA,IAAS,CAAA,KAC3B,CAAA,CAAI,SAAA,CAAU,CAAA,GAAI,CAAA,CAAI,KAAA,GACtB,CAAA,CAAI,aAAA,CAAc,EAAA,EAAI,EAAA;YAEtB,GAAM,CAAA,CAAA,GAAM,CAAA,EAGN,CAAA,GAAO,CAAA,CAAI,OAAA,CAAQ,CACxB;gBAAA,IAAA,EAAM,CAAA,CAAM,SAAA,CAAU,OAAA,CAAQ,CAAA;gBAC9B,IAAA,EAAM,CAAA,CAAO,KAAA,CAAM,CAAA;gBACnB,IAAA,EAAM,EAAA;gBACN,KAAA,EAAO,CAAA,CAAI,GAAA,EAAK,GAAA,EAAK,GAAA;gBACrB,GAAA,EAAK,CAAA,EAAM,CAAA;gBACX,MAAA,EAAQ,CAAA;YAAA,CAAA;YAIT,CAAA,CAAI,QAAA,CAAS,CACZ;gBAAA,KAAA,EAAO,CAAA,CAAK,KAAA,GAAQ,CAAA,GAAM,CAAA,GAAI,CAAA,GAAM,CAAA;gBACpC,MAAA,EAAQ,CAAA,CAAK,MAAA,GAAS,CAAA,GAAM,CAAA;gBAC5B,MAAA,EAAQ,CAAA;gBACR,KAAA,EAAO,CAAA,CAAI,CAAA,EAAG,CAAA,EAAG,CAAA;gBACjB,OAAA,EAAS,GAAA;gBACT,MAAA,EAAQ,CAAA;YAAA,CAAA;YAIT,GAAA,CAAA,GAAS,CAAA,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,CAAA,EAAG,CAAA,GAAK,CAC3B;gBAAA,GAAM,CAAA,CAAA,GAAU,CAAA,CAAM,SAAA,GAAY,CAAA;gBAClC,CAAA,CAAI,YAAA,CAAa,CAChB;oBAAA,EAAA,EAAI,CAAA,EAAM,CAAA,CAAK,KAAA,GAAQ,CAAA,IAAO,CAAA,GAAU,CAAA,GAAI,GAAA,IAAO,CAAA;oBACnD,EAAA,EAAI,CAAA,EAAM,CAAA,CAAK,KAAA,GAAQ,CAAA,IAAO,CAAA,GAAU,CAAA,GAAI,GAAA,IAAO,CAAA,GAAM,CAAA,CAAK,MAAA;oBAC9D,EAAA,EAAI,CAAA,EAAM,CAAA,CAAK,KAAA,GAAQ,CAAA,IAAO,CAAA,GAAU,GAAA,GAAM,CAAA,IAAK,CAAA,GAAM,CAAA,CAAK,MAAA,GAAS,CAAA;oBACvE,GAAA,EAAK,CAAA,EAAM,CAAA,GAAI,CAAA,GAAM,CAAA,IAAK,CAAA,IAAW,CAAA,GAAM,GAAA,GAAM,CAAA,GAAI,CAAA;oBACrD,KAAA,EAAO,CAAA,CAAI,GAAA,EAAK,GAAA,EAAK,GAAA;gBAAA,CAAA;YAAA,CAKvB;YAAA,CAAA,CAAI,WAAA,CAAY,CAAA,GAEhB,CAAA,CAAI,YAAA;QAAA,CAID;QAAA,CAAA,CAAM,YAAA,KAET,CAAA,CAAI,aAAA,IACJ,CAAA,CAAI,aAAA,CAAc,CAAA,EAAG,CAAA,KACrB,CAAA,CAAI,SAAA,CAAU,CAAA,GAAI,CAAA,CAAI,KAAA,GACtB,CAAA,CAAI,aAAA,CAAc,EAAA,EAAI,GAAA,GAEtB,CAAA,CAAI,UAAA,CAAW,CACd;YAAA,MAAA,EAAQ,EAAA;YACR,KAAA,EAAO,CAAA,CAAI,GAAA,EAAK,CAAA,EAAG,CAAA;YACnB,OAAA,EAAS,EAAA,CAAK,CAAA,EAAG,CAAA,EAAG,CAAA,CAAI,IAAA,KAAS,CAAA;QAAA,CAAA,GAGlC,CAAA,CAAI,YAAA,KAID,CAAA,CAAM,OAAA,IACT,CAAA,CAAO,IAAA;IAAA,CA3NA;IAAA,MAAA,CAAA,CAAA,CAAA,EAAA,EAAA,CAAA,aAgOT,CAAA,CAAI,GAAA,KAAU,CAEb;QAAA,EAAA,IAEK,CAAA,CAAK,MAAA,IAOT,CAAA,CAAK,WAAA,GAAc,CAAA,CAAK,SAAA,CAAU,MAAA,GAAS,QAAA,CAAS,CAAA,CAAI,QAAA,KACxD,CAAA,CAAK,OAAA,CAAQ,CAAA,UAER,CAAA,CAAM,MAAA,IAAU,CAAA,CAAK,KAAA,MAAU,CAAA,IACnC,EAAA,IAGD,CAAA,CAAI,UAAA,IACJ,EAAA,IAEI,CAAA,CAAK,KAAA,MAAU,CAAA,IAClB,EAAA,IAGD,CAAA,CAAI,QAAA,OApBJ,CAAA,CAAI,UAAA,IACJ,EAAA,IACA,CAAA,CAAI,QAAA;IAAA,CAAA,GAwBF,CAAA,CAAK,KAAA,MAAU,CAAA,IAClB,EAAA,IAGG,CAAA,CAAK,IAAA,IACR,EAAA,IAGD,MAAA,CAAO,gBAAA,CAAiB,CAAA,SAAS,CAAC,GAAM,CACvC;QAAA,CAAA,CAAO,KAAA,EAAM,OAAA,EAAU,CAAA,CAAE,KAAA,CAAM,OAAA,KAC/B,CAAA,CAAI,IAAA,IACJ,CAAA,CAAI,GAAA,KAAU,CACT;YAAA,CAAA,CAAO,YAAA,OAAmB,CAAA,KAC7B,CAAA,CAAI,UAAA,IACJ,CAAA,CAAO,IAAA,IACP,CAAA,CAAI,QAAA;QAAA,CAAA;IAAA,CAAA,GAKA,EAAA;AAAA,CAAA,EAj7FQ,CA0wF0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC15FzC,OAAO,CAAC,cAAc,GAAG,QAAQ,CAAE,CAAC,EAAE,CAAC;IACrC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,UAAU,GAAG,CAAC,GAAG,CAAC;QAAA,OAAO,EAAE,CAAC;IAAA,CAAC;AAC7C,CAAC;AAED,OAAO,CAAC,iBAAiB,GAAG,QAAQ,CAAE,CAAC,EAAE,CAAC;IACxC,MAAM,CAAC,cAAc,CAAC,CAAC,EAAE,CAAY,aAAE,CAAC;QAAA,KAAK,EAAE,IAAI;IAAA,CAAC;AACtD,CAAC;AAED,OAAO,CAAC,SAAS,GAAG,QAAQ,CAAE,MAAM,EAAE,IAAI,EAAE,CAAC;IAC3C,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAE,GAAG,EAAE,CAAC;QAC1C,EAAE,EAAE,GAAG,KAAK,CAAS,YAAI,GAAG,KAAK,CAAY,eAAI,IAAI,CAAC,cAAc,CAAC,GAAG,GACtE,MAAM;QAGR,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC;YAChC,UAAU,EAAE,IAAI;YAChB,GAAG,EAAE,QAAQ,GAAI,CAAC;gBAChB,MAAM,CAAC,MAAM,CAAC,GAAG;YACnB,CAAC;QACH,CAAC;IACH,CAAC;IAED,MAAM,CAAC,IAAI;AACb,CAAC;AAED,OAAO,CAAC,MAAM,GAAG,QAAQ,CAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC;IAC/C,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,QAAQ,EAAE,CAAC;QACrC,UAAU,EAAE,IAAI;QAChB,GAAG,EAAE,GAAG;IACV,CAAC;AACH,CAAC","sources":["../../.npm/_npx/b4a9aa12c0cf34a6/node_modules/@parcel/runtime-browser-hmr/lib/runtime-9f9e16b9956cf5c7.js","index.js","node_modules/kaboom/dist/kaboom.mjs","node_modules/kaboom/src/math.ts","node_modules/kaboom/src/utils.ts","node_modules/kaboom/src/gfx.ts","node_modules/kaboom/src/app.ts","node_modules/kaboom/src/audio.ts","node_modules/kaboom/src/assets.ts","node_modules/kaboom/src/logger.ts","node_modules/kaboom/src/plugins/kaboom.ts","node_modules/kaboom/src/kaboom.ts","../../.npm/_npx/b4a9aa12c0cf34a6/node_modules/@parcel/transformer-js/src/esmodule-helpers.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"4a236f9275d0a351\";module.bundle.HMR_BUNDLE_ID = \"31648ca538661719\";\"use strict\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: mixed;\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function accept(fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function dispose(fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData = undefined;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, acceptedAssets\n/*: {|[string]: boolean|} */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // $FlowFixMe\n\n  ws.onmessage = function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    acceptedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      var assets = data.assets.filter(function (asset) {\n        return asset.envHash === HMR_ENV_HASH;\n      }); // Handle HMR Update\n\n      var handled = assets.every(function (asset) {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear();\n        assets.forEach(function (asset) {\n          hmrApply(module.bundle.root, asset);\n        });\n\n        for (var i = 0; i < assetsToAccept.length; i++) {\n          var id = assetsToAccept[i][1];\n\n          if (!acceptedAssets[id]) {\n            hmrAcceptRun(assetsToAccept[i][0], id);\n          }\n        }\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      var _iterator = _createForOfIteratorHelper(data.diagnostics.ansi),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var ansiDiagnostic = _step.value;\n          var stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n          console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  var errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  var _iterator2 = _createForOfIteratorHelper(diagnostics),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var diagnostic = _step2.value;\n      var stack = diagnostic.codeframe ? diagnostic.codeframe : diagnostic.stack;\n      errorHTML += \"\\n      <div>\\n        <div style=\\\"font-size: 18px; font-weight: bold; margin-top: 20px;\\\">\\n          \\uD83D\\uDEA8 \".concat(diagnostic.message, \"\\n        </div>\\n        <pre>\").concat(stack, \"</pre>\\n        <div>\\n          \").concat(diagnostic.hints.map(function (hint) {\n        return '<div>💡 ' + hint + '</div>';\n      }).join(''), \"\\n        </div>\\n        \").concat(diagnostic.documentation ? \"<div>\\uD83D\\uDCDD <a style=\\\"color: violet\\\" href=\\\"\".concat(diagnostic.documentation, \"\\\" target=\\\"_blank\\\">Learn more</a></div>\") : '', \"\\n      </div>\\n    \");\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(window.location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    var deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      var fn = new Function('require', 'module', 'exports', asset.output);\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  var parents = getParents(module.bundle.root, id); // If no parents, the asset is new. Prevent reloading the page.\n\n  if (!parents.length) {\n    return true;\n  }\n\n  return parents.some(function (v) {\n    return hmrAcceptCheck(v[0], v[1], null);\n  });\n}\n\nfunction hmrAcceptRun(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n  cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n\n  acceptedAssets[id] = true;\n}","import kaboom from \"kaboom\";\r\n// kaboom({\r\n// \tscale: 4,\r\n// \tfont: \"sinko\",\r\n// })\r\n// loadRoot('https://i.imgur.com/')\r\n// loadSprite('top-door', 'U9nre4n.png')\r\n// loadSprite('bottom-wall', 'vWJWmvb.png')\r\n// loadSprite(\"dino\", \"https://i.imgur.com/Gz3ifGl.png\", {\r\n// \tsliceX: 3,\r\n// \tsliceY: 4,\r\n// \t// Define animations\r\n// \tanims: {\r\n// \t\t\"idle\": 1,\r\n// \t\t\"run\": {\r\n// \t\t\tfrom: 6,\r\n// \t\t\tto: 8,\r\n// \t\t\tspeed: 10,\r\n// \t\t\tloop: true,\r\n// \t\t},\r\n// \t\t\"jump\": 1\r\n// \t},\r\n// })\r\n\r\n// const SPEED = 120\r\n// const JUMP_FORCE = 240\r\n\r\n// gravity(640)\r\n\r\n// const player = add([\r\n// \tsprite(\"dino\"),\r\n// \tpos(center()),\r\n// \torigin(\"center\"),\r\n// \tscale(1/3) ,\r\n// \tarea(),\r\n// \tbody(),\r\n\t\r\n// ])\r\n\r\n// player.play(\"idle\")\r\n// add([\r\n// \trect(width(), 24),\r\n// \tarea(),\r\n// \toutline(1),\r\n// \tpos(0, height() - 24),\r\n// \tsolid(),\r\n// ])\r\n\r\n// player.onGround(() => {\r\n// \tif (!isKeyDown(\"left\") && !isKeyDown(\"right\")) {\r\n// \t\tplayer.play(\"idle\")\r\n// \t} else {\r\n// \t\tplayer.play(\"run\")\r\n// \t}\r\n// })\r\n\r\n// player.onAnimEnd(\"idle\", () => {\r\n// })\r\n\r\n// onKeyPress(\"space\", () => {\r\n// \tif (player.isGrounded()) {\r\n// \t\tplayer.jump(JUMP_FORCE)\r\n// \t\tplayer.play(\"jump\")\r\n// \t}\r\n// })\r\n\r\n// onKeyDown(\"left\", () => {\r\n// \tplayer.move(-SPEED, 0)\r\n// \tplayer.flipX(true)\r\n// \tif (player.isGrounded() && player.curAnim() !== \"run\") {\r\n// \t\tplayer.play(\"run\")\r\n// \t}\r\n// })\r\n\r\n// onKeyDown(\"right\", () => {\r\n// \tplayer.move(SPEED, 0)\r\n// \tplayer.flipX(false)\r\n// \tif (player.isGrounded() && player.curAnim() !== \"run\") {\r\n// \t\tplayer.play(\"run\")\r\n// \t}\r\n// })\r\n\r\n// onKeyRelease([\"left\", \"right\"], () => {\r\n// \tif (!isKeyDown(\"left\") && !isKeyDown(\"right\")) {\r\n// \t\tplayer.play(\"idle\")\r\n// \t}\r\n// })\r\n\r\n// const getInfo = () => `\r\n// Anim: ${player.curAnim()}\r\n// Frame: ${player.frame}\r\n// `.trim()\r\n\r\n// const label = add([\r\n// \ttext(getInfo()),\r\n// \tpos(4),\r\n// ])\r\n\r\n// label.onUpdate(() => {\r\n// \tlabel.text = getInfo()\r\n// })\r\n\r\nkaboom({\r\n\tbackground: [0, 0, 0],\r\n\twidth: 1000,\r\n\theight: 600\r\n})\r\nloadSprite(\"bean\", \"https://i.imgur.com/yZIb8O2.png\")\r\nloadSprite(\"grass\", \"https://i.imgur.com/vWJWmvb.png\")\r\nloadSprite(\"portal\", \"https://i.imgur.com/U9nre4n.png\")\r\n\r\n\r\nconst SPEED = 480\r\n\r\nconst LEVELS = [\r\n\t[\r\n\t\t\"@        \",\r\n\t\t\"        >\",\r\n\t\t\"=========\",\r\n\t],\r\n\t[\r\n\t\t\"@       >\",\r\n\t\t\"=========\",\r\n\t],\r\n]\r\n\r\n\r\nscene(\"game\", ({ levelIdx, score }) => {\r\n\tgravity(100)\r\n\tconst level = addLevel(LEVELS[levelIdx || 0], {\r\n\t\twidth: 64,\r\n\t\theight: 64,\r\n\t\tpos: vec2(100, 200),\r\n\t\t\"@\": () => [\r\n\t\t\tsprite(\"bean\"),\r\n\t\t\tarea(),\r\n\t\t\tbody(),\r\n\t\t\torigin(\"bot\"),\r\n\t\t\t\"player\",\r\n\t\t],\r\n\t\t\"=\": () => [\r\n\t\t\tsprite(\"grass\"),\r\n\t\t\tarea(),\r\n\t\t\tsolid(),\r\n\t\t\torigin(\"bot\"),\r\n\t\t],\r\n\t\t\">\": () => [\r\n\t\t\tsprite(\"portal\"),\r\n\t\t\tarea(),\r\n\t\t\torigin(\"bot\"),\r\n\t\t\t\"portal\",\r\n\t\t],\r\n\t})\r\n\tconst player = get(\"player\")[0]\r\n\tonKeyPress(\"space\", () => {\r\n\t\tif (player.isGrounded()) {\r\n\t\t\tplayer.jump()\r\n\t\t}\r\n\t})\r\n\r\n\tonKeyDown(\"left\", () => {\r\n\t\tplayer.move(-SPEED, 0)\r\n\t})\r\n\r\n\tonKeyDown(\"right\", () => {\r\n\t\tplayer.move(SPEED, 0)\r\n\t})\r\n\tplayer.onUpdate(() => {\r\n\t\tif (player.pos.y >= 480) {\r\n\t\t\tgo(\"lose\")\r\n\t\t}\r\n\t})\r\n\r\n\tplayer.onCollide(\"portal\", () => {\r\n\t\tif (levelIdx < LEVELS.length - 1) {\r\n\t\t\tgo(\"game\", {\r\n\t\t\t\tlevelIdx: levelIdx + 1,\r\n\t\t\t\tscore: score,\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tgo(\"win\", { score: score, })\r\n\t\t}\r\n\t})\r\n\r\n\tconst scoreLabel = add([\r\n\t\ttext(score),\r\n\t\tpos(12)\r\n\t])\r\n\r\n})\r\n\r\nscene(\"lose\", () => {\r\n\r\n\tadd([\r\n\t\ttext(\"You Lose\"),\r\n\t\tpos(12),\r\n\t])\r\n\r\n\tonKeyPress(start)\r\n\r\n})\r\n\r\nscene(\"win\", ({ score }) => {\r\n\r\n\tadd([\r\n\t\ttext(`Congratuation`, {\r\n\t\t\twidth: width(),\r\n\t\t}),\r\n\t\tpos(12),\r\n\t])\r\n\r\n\tonKeyPress(start)\r\n\r\n})\r\n\r\nfunction start() {\r\n\tgo(\"game\", {\r\n\t\tlevelIdx: 0,\r\n\t\tscore: 0,\r\n\t})\r\n}\r\n\r\nstart()\r\n\r\n",null,"import {\n\tVec2,\n\tVec3,\n\tVec4,\n\tMat4,\n\tColor,\n\tQuad,\n\tPoint,\n\tRect,\n\tCircle,\n\tPolygon,\n\tLine,\n\tArea,\n\tRNG,\n} from \"./types\";\n\nfunction deg2rad(deg: number): number {\n\treturn deg * Math.PI / 180;\n}\n\nfunction rad2deg(rad: number): number {\n\treturn rad * 180 / Math.PI;\n}\n\nfunction clamp(\n\tval: number,\n\tmin: number,\n\tmax: number,\n): number {\n\tif (min > max) {\n\t\treturn clamp(val, max, min);\n\t}\n\treturn Math.min(Math.max(val, min), max);\n}\n\nfunction lerp(\n\ta: number,\n\tb: number,\n\tt: number,\n): number {\n\treturn a + (b - a) * t;\n}\n\nfunction map(\n\tv: number,\n\tl1: number,\n\th1: number,\n\tl2: number,\n\th2: number,\n): number {\n\treturn l2 + (v - l1) / (h1 - l1) * (h2 - l2);\n}\n\nfunction mapc(\n\tv: number,\n\tl1: number,\n\th1: number,\n\tl2: number,\n\th2: number,\n): number {\n\treturn clamp(map(v, l1, h1, l2, h2), l2, h2);\n}\n\nfunction vec2(...args): Vec2 {\n\n\tif (args.length === 0) {\n\t\treturn vec2(0, 0);\n\t}\n\n\tif (args.length === 1) {\n\t\tif (typeof args[0] === \"number\") {\n\t\t\treturn vec2(args[0], args[0]);\n\t\t} else if (isVec2(args[0])) {\n\t\t\treturn vec2(args[0].x, args[0].y);\n\t\t} else if (Array.isArray(args[0]) && args[0].length === 2) {\n\t\t\treturn vec2.apply(null, args[0]);\n\t\t}\n\t}\n\n\treturn {\n\t\tx: args[0],\n\t\ty: args[1],\n\t\tclone(): Vec2 {\n\t\t\treturn vec2(this.x, this.y);\n\t\t},\n\t\tadd(...args): Vec2 {\n\t\t\tconst p2 = vec2(...args);\n\t\t\treturn vec2(this.x + p2.x, this.y + p2.y);\n\t\t},\n\t\tsub(...args): Vec2 {\n\t\t\tconst p2 = vec2(...args);\n\t\t\treturn vec2(this.x - p2.x, this.y - p2.y);\n\t\t},\n\t\tscale(...args): Vec2 {\n\t\t\tconst s = vec2(...args);\n\t\t\treturn vec2(this.x * s.x, this.y * s.y);\n\t\t},\n\t\tdist(...args): number {\n\t\t\tconst p2 = vec2(...args);\n\t\t\treturn Math.sqrt(\n\t\t\t\t(this.x - p2.x) * (this.x - p2.x)\n\t\t\t\t+ (this.y - p2.y) * (this.y - p2.y)\n\t\t\t);\n\t\t},\n\t\tlen(): number {\n\t\t\treturn this.dist(vec2(0, 0));\n\t\t},\n\t\tunit(): Vec2 {\n\t\t\treturn this.scale(1 / this.len());\n\t\t},\n\t\tnormal(): Vec2 {\n\t\t\treturn vec2(this.y, -this.x);\n\t\t},\n\t\tdot(p2: Vec2): number {\n\t\t\treturn this.x * p2.x + this.y * p2.y;\n\t\t},\n\t\tangle(...args): number {\n\t\t\tconst p2 = vec2(...args);\n\t\t\treturn rad2deg(Math.atan2(this.y - p2.y, this.x - p2.x));\n\t\t},\n\t\tlerp(p2: Vec2, t: number): Vec2 {\n\t\t\treturn vec2(lerp(this.x, p2.x, t), lerp(this.y, p2.y, t));\n\t\t},\n\t\ttoFixed(n: number): Vec2 {\n\t\t\treturn vec2(this.x.toFixed(n), this.y.toFixed(n));\n\t\t},\n\t\teq(other: Vec2): boolean {\n\t\t\treturn this.x === other.x && this.y === other.y;\n\t\t},\n\t\tstr(): string {\n\t\t\treturn `(${this.x.toFixed(2)}, ${this.y.toFixed(2)})`;\n\t\t},\n\t};\n}\n\nfunction dir(deg: number): Vec2 {\n\tconst angle = deg2rad(deg);\n\treturn vec2(Math.cos(angle), Math.sin(angle));\n}\n\nfunction vec3(x: number, y: number, z: number): Vec3 {\n\treturn {\n\t\tx: x,\n\t\ty: y,\n\t\tz: z,\n\t\txy(): Vec2 {\n\t\t\treturn vec2(this.x, this.y);\n\t\t},\n\t};\n}\n\nfunction isVec2(p: any): boolean {\n\treturn p !== undefined\n\t\t&& p.x !== undefined\n\t\t&& p.y !== undefined\n\t\t;\n}\n\nfunction isVec3(p: any): boolean {\n\treturn p !== undefined\n\t\t&& p.x !== undefined\n\t\t&& p.y !== undefined\n\t\t&& p.z !== undefined\n\t\t;\n}\n\nfunction isColor(c: any): boolean {\n\treturn c !== undefined\n\t\t&& c.r !== undefined\n\t\t&& c.g !== undefined\n\t\t&& c.b !== undefined\n\t\t;\n}\n\nfunction isMat4(m: any): Mat4 {\n\tif (\n\t\tm !== undefined\n\t\t&& Array.isArray(m.m)\n\t\t&& m.m.length === 16\n\t) {\n\t\treturn m;\n\t}\n}\n\nfunction rgb(...args): Color {\n\n\tif (args.length === 0) {\n\t\treturn rgb(255, 255, 255);\n\t} else if (args.length === 1) {\n\t\tif (isColor(args[0])) {\n\t\t\treturn rgb(args[0].r, args[0].g, args[0].b);\n\t\t} else if (Array.isArray(args[0]) && args[0].length === 3) {\n\t\t\treturn rgb.apply(null, args[0]);\n\t\t}\n\t}\n\n\treturn {\n\t\tr: clamp(~~args[0], 0, 255),\n\t\tg: clamp(~~args[1], 0, 255),\n\t\tb: clamp(~~args[2], 0, 255),\n\t\tclone(): Color {\n\t\t\treturn rgb(this.r, this.g, this.b);\n\t\t},\n\t\tlighten(a: number): Color {\n\t\t\treturn rgb(this.r + a, this.g + a, this.b + a);\n\t\t},\n\t\tdarken(a: number): Color {\n\t\t\treturn this.lighten(-a);\n\t\t},\n\t\tinvert(): Color {\n\t\t\treturn rgb(255 - this.r, 255 - this.g, 255 - this.b);\n\t\t},\n\t\tmult(other: Color): Color {\n\t\t\treturn rgb(\n\t\t\t\tthis.r * other.r / 255,\n\t\t\t\tthis.g * other.g / 255,\n\t\t\t\tthis.b * other.b / 255,\n\t\t\t);\n\t\t},\n\t\teq(other: Color): boolean {\n\t\t\treturn this.r === other.r\n\t\t\t\t&& this.g === other.g\n\t\t\t\t&& this.b === other.g\n\t\t\t\t;\n\t\t},\n\t\tstr(): string {\n\t\t\treturn `(${this.r}, ${this.g}, ${this.b})`;\n\t\t},\n\t};\n\n}\n\nfunction hsl2rgb(h: number, s: number, l: number): Color {\n\n\tif (s == 0){\n\t\treturn rgb(255 * l, 255 * l, 255 * l);\n\t}\n\n\tconst hue2rgb = (p, q, t) => {\n\t\tif (t < 0) t += 1;\n\t\tif (t > 1) t -= 1;\n\t\tif (t < 1 / 6) return p + (q - p) * 6 * t;\n\t\tif (t < 1 / 2) return q;\n\t\tif (t < 2 / 3) return p + (q - p) * (2/3 - t) * 6;\n\t\treturn p;\n\t}\n\n\tconst q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\tconst p = 2 * l - q;\n\tconst r = hue2rgb(p, q, h + 1 / 3);\n\tconst g = hue2rgb(p, q, h);\n\tconst b = hue2rgb(p, q, h - 1 / 3);\n\n\treturn rgb(Math.round(r * 255), Math.round(g * 255), Math.round(b * 255));\n\n}\n\nfunction quad(x: number, y: number, w: number, h: number): Quad {\n\treturn {\n\t\tx: x ?? 0,\n\t\ty: y ?? 0,\n\t\tw: w ?? 1,\n\t\th: h ?? 1,\n\t\tscale(other: Quad): Quad {\n\t\t\treturn quad(\n\t\t\t\tthis.x + this.w * other.x,\n\t\t\t\tthis.y + this.h * other.y,\n\t\t\t\tthis.w * other.w,\n\t\t\t\tthis.h * other.h\n\t\t\t);\n\t\t},\n\t\tclone(): Quad {\n\t\t\treturn quad(this.x, this.y, this.w, this.h);\n\t\t},\n\t\teq(other: Quad): boolean {\n\t\t\treturn this.x === other.x\n\t\t\t\t&& this.y === other.y\n\t\t\t\t&& this.w === other.w\n\t\t\t\t&& this.h === other.h;\n\t\t},\n\t};\n}\n\nfunction mat4(m?: number[]): Mat4 {\n\n\treturn {\n\n\t\tm: m ? [...m] : [\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1,\n\t\t],\n\n\t\tclone(): Mat4 {\n\t\t\treturn mat4(this.m);\n\t\t},\n\n\t\tmult(other: Mat4): Mat4 {\n\n\t\t\tconst out = [];\n\n\t\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\t\tout[i * 4 + j] =\n\t\t\t\t\t\tthis.m[0 * 4 + j] * other.m[i * 4 + 0] +\n\t\t\t\t\t\tthis.m[1 * 4 + j] * other.m[i * 4 + 1] +\n\t\t\t\t\t\tthis.m[2 * 4 + j] * other.m[i * 4 + 2] +\n\t\t\t\t\t\tthis.m[3 * 4 + j] * other.m[i * 4 + 3];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn mat4(out);\n\n\t\t},\n\n\t\tmultVec4(p: Vec4): Vec4 {\n\t\t\treturn {\n\t\t\t\tx: p.x * this.m[0] + p.y * this.m[4] + p.z * this.m[8] + p.w * this.m[12],\n\t\t\t\ty: p.x * this.m[1] + p.y * this.m[5] + p.z * this.m[9] + p.w * this.m[13],\n\t\t\t\tz: p.x * this.m[2] + p.y * this.m[6] + p.z * this.m[10] + p.w * this.m[14],\n\t\t\t\tw: p.x * this.m[3] + p.y * this.m[7] + p.z * this.m[11] + p.w * this.m[15]\n\t\t\t};\n\t\t},\n\n\t\tmultVec3(p: Vec3): Vec3 {\n\t\t\tconst p4 = this.multVec4({\n\t\t\t\tx: p.x,\n\t\t\t\ty: p.y,\n\t\t\t\tz: p.z,\n\t\t\t\tw: 1.0,\n\t\t\t});\n\t\t\treturn vec3(p4.x, p4.y, p4.z);\n\t\t},\n\n\t\tmultVec2(p: Vec2): Vec2 {\n\t\t\treturn vec2(\n\t\t\t\tp.x * this.m[0] + p.y * this.m[4] + 0 * this.m[8] + 1 * this.m[12],\n\t\t\t\tp.x * this.m[1] + p.y * this.m[5] + 0 * this.m[9] + 1 * this.m[13],\n\t\t\t);\n\t\t},\n\n\t\ttranslate(p: Vec2): Mat4 {\n\t\t\treturn this.mult(mat4([\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, 1, 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\tp.x, p.y, 0, 1,\n\t\t\t]));\n\t\t},\n\n\t\tscale(s: Vec2): Mat4 {\n\t\t\treturn this.mult(mat4([\n\t\t\t\ts.x, 0, 0, 0,\n\t\t\t\t0, s.y, 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\t0, 0, 0, 1,\n\t\t\t]));\n\t\t},\n\n\t\trotateX(a: number): Mat4 {\n\t\t\ta = deg2rad(-a);\n\t\t\treturn this.mult(mat4([\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, Math.cos(a), -Math.sin(a), 0,\n\t\t\t\t0, Math.sin(a), Math.cos(a), 0,\n\t\t\t\t0, 0, 0, 1,\n\t\t\t]));\n\t\t},\n\n\t\trotateY(a: number): Mat4 {\n\t\t\ta = deg2rad(-a);\n\t\t\treturn this.mult(mat4([\n\t\t\t\tMath.cos(a), 0, Math.sin(a), 0,\n\t\t\t\t0, 1, 0, 0,\n\t\t\t\t-Math.sin(a), 0, Math.cos(a), 0,\n\t\t\t\t0, 0, 0, 1,\n\t\t\t]));\n\t\t},\n\n\t\trotateZ(a: number): Mat4 {\n\t\t\ta = deg2rad(-a);\n\t\t\treturn this.mult(mat4([\n\t\t\t\tMath.cos(a), -Math.sin(a), 0, 0,\n\t\t\t\tMath.sin(a), Math.cos(a), 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\t0, 0, 0, 1,\n\t\t\t]));\n\t\t},\n\n\t\tinvert(): Mat4 {\n\n\t\t\tconst out = [];\n\n\t\t\tconst f00 = this.m[10] * this.m[15] - this.m[14] * this.m[11];\n\t\t\tconst f01 = this.m[9] * this.m[15] - this.m[13] * this.m[11];\n\t\t\tconst f02 = this.m[9] * this.m[14] - this.m[13] * this.m[10];\n\t\t\tconst f03 = this.m[8] * this.m[15] - this.m[12] * this.m[11];\n\t\t\tconst f04 = this.m[8] * this.m[14] - this.m[12] * this.m[10];\n\t\t\tconst f05 = this.m[8] * this.m[13] - this.m[12] * this.m[9];\n\t\t\tconst f06 = this.m[6] * this.m[15] - this.m[14] * this.m[7];\n\t\t\tconst f07 = this.m[5] * this.m[15] - this.m[13] * this.m[7];\n\t\t\tconst f08 = this.m[5] * this.m[14] - this.m[13] * this.m[6];\n\t\t\tconst f09 = this.m[4] * this.m[15] - this.m[12] * this.m[7];\n\t\t\tconst f10 = this.m[4] * this.m[14] - this.m[12] * this.m[6];\n\t\t\tconst f11 = this.m[5] * this.m[15] - this.m[13] * this.m[7];\n\t\t\tconst f12 = this.m[4] * this.m[13] - this.m[12] * this.m[5];\n\t\t\tconst f13 = this.m[6] * this.m[11] - this.m[10] * this.m[7];\n\t\t\tconst f14 = this.m[5] * this.m[11] - this.m[9] * this.m[7];\n\t\t\tconst f15 = this.m[5] * this.m[10] - this.m[9] * this.m[6];\n\t\t\tconst f16 = this.m[4] * this.m[11] - this.m[8] * this.m[7];\n\t\t\tconst f17 = this.m[4] * this.m[10] - this.m[8] * this.m[6];\n\t\t\tconst f18 = this.m[4] * this.m[9] - this.m[8] * this.m[5];\n\n\t\t\tout[0] = this.m[5] * f00 - this.m[6] * f01 + this.m[7] * f02;\n\t\t\tout[4] = -(this.m[4] * f00 - this.m[6] * f03 + this.m[7] * f04);\n\t\t\tout[8] = this.m[4] * f01 - this.m[5] * f03 + this.m[7] * f05;\n\t\t\tout[12] = -(this.m[4] * f02 - this.m[5] * f04 + this.m[6] * f05);\n\n\t\t\tout[1] = -(this.m[1] * f00 - this.m[2] * f01 + this.m[3] * f02);\n\t\t\tout[5] = this.m[0] * f00 - this.m[2] * f03 + this.m[3] * f04;\n\t\t\tout[9] = -(this.m[0] * f01 - this.m[1] * f03 + this.m[3] * f05);\n\t\t\tout[13] = this.m[0] * f02 - this.m[1] * f04 + this.m[2] * f05;\n\n\t\t\tout[2] = this.m[1] * f06 - this.m[2] * f07 + this.m[3] * f08;\n\t\t\tout[6] = -(this.m[0] * f06 - this.m[2] * f09 + this.m[3] * f10);\n\t\t\tout[10] = this.m[0] * f11 - this.m[1] * f09 + this.m[3] * f12;\n\t\t\tout[14] = -(this.m[0] * f08 - this.m[1] * f10 + this.m[2] * f12);\n\n\t\t\tout[3] = -(this.m[1] * f13 - this.m[2] * f14 + this.m[3] * f15);\n\t\t\tout[7] = this.m[0] * f13 - this.m[2] * f16 + this.m[3] * f17;\n\t\t\tout[11] = -(this.m[0] * f14 - this.m[1] * f16 + this.m[3] * f18);\n\t\t\tout[15] = this.m[0] * f15 - this.m[1] * f17 + this.m[2] * f18;\n\n\t\t\tconst det =\n\t\t\t\tthis.m[0] * out[0] +\n\t\t\t\tthis.m[1] * out[4] +\n\t\t\t\tthis.m[2] * out[8] +\n\t\t\t\tthis.m[3] * out[12];\n\n\t\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\t\tout[i * 4 + j] *= (1.0 / det);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn mat4(out);\n\n\t\t},\n\n\t};\n\n}\n\nfunction wave(lo: number, hi: number, t: number, f = Math.sin): number {\n\treturn lo + (f(t) + 1) / 2 * (hi - lo);\n}\n\n// basic ANSI C LCG\nconst A = 1103515245;\nconst C = 12345;\nconst M = 2147483648;\n// TODO: let user pass seed\nconst defRNG = rng(Date.now());\n\nfunction rng(seed: number): RNG {\n\treturn {\n\t\tseed: seed,\n\t\tgen(...args) {\n\t\t\tif (args.length === 0) {\n\t\t\t\tthis.seed = (A * this.seed + C) % M;\n\t\t\t\treturn this.seed / M;\n\t\t\t} else if (args.length === 1) {\n\t\t\t\tif (typeof args[0] === \"number\") {\n\t\t\t\t\treturn this.gen(0, args[0]);\n\t\t\t\t} else if (isVec2(args[0])) {\n\t\t\t\t\treturn this.gen(vec2(0, 0), args[0]);\n\t\t\t\t} else if (isColor(args[0])) {\n\t\t\t\t\treturn this.gen(rgb(0, 0, 0), args[0]);\n\t\t\t\t}\n\t\t\t} else if (args.length === 2) {\n\t\t\t\tif (typeof args[0] === \"number\" && typeof args[1] === \"number\") {\n\t\t\t\t\treturn (this.gen() * (args[1] - args[0])) + args[0];\n\t\t\t\t} else if (isVec2(args[0]) && isVec2(args[1])) {\n\t\t\t\t\treturn vec2(\n\t\t\t\t\t\tthis.gen(args[0].x, args[1].x),\n\t\t\t\t\t\tthis.gen(args[0].y, args[1].y),\n\t\t\t\t\t);\n\t\t\t\t} else if (isColor(args[0]) && isColor(args[1])) {\n\t\t\t\t\treturn rgb(\n\t\t\t\t\t\tthis.gen(args[0].r, args[1].r),\n\t\t\t\t\t\tthis.gen(args[0].g, args[1].g),\n\t\t\t\t\t\tthis.gen(args[0].b, args[1].b),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction randSeed(seed?: number): number {\n\tif (seed != null) {\n\t\tdefRNG.seed = seed;\n\t}\n\treturn defRNG.seed;\n}\n\nfunction rand(...args) {\n\t// @ts-ignore\n\treturn defRNG.gen(...args);\n}\n\n// TODO: randi() to return 0 / 1?\nfunction randi(...args) {\n\treturn Math.floor(rand(...args));\n}\n\nfunction chance(p: number): boolean {\n\treturn rand() <= p;\n}\n\nfunction choose<T>(list: T[]): T {\n\treturn list[randi(list.length)];\n}\n\n// TODO: better name\nfunction testRectRect2(r1: Rect, r2: Rect): boolean {\n\treturn r1.p2.x >= r2.p1.x\n\t\t&& r1.p1.x <= r2.p2.x\n\t\t&& r1.p2.y >= r2.p1.y\n\t\t&& r1.p1.y <= r2.p2.y;\n}\n\nfunction testRectRect(r1: Rect, r2: Rect): boolean {\n\treturn r1.p2.x > r2.p1.x\n\t\t&& r1.p1.x < r2.p2.x\n\t\t&& r1.p2.y > r2.p1.y\n\t\t&& r1.p1.y < r2.p2.y;\n}\n\n// TODO: better name\nfunction testLineLineT(l1: Line, l2: Line): number | null {\n\n\tif ((l1.p1.x === l1.p2.x && l1.p1.y === l1.p2.y) || (l2.p1.x === l2.p2.x && l2.p1.y === l2.p2.y)) {\n\t\treturn null;\n\t}\n\n\tconst denom = ((l2.p2.y - l2.p1.y) * (l1.p2.x - l1.p1.x) - (l2.p2.x - l2.p1.x) * (l1.p2.y - l1.p1.y));\n\n\t// parallel\n\tif (denom === 0) {\n\t\treturn null;\n\t}\n\n\tconst ua = ((l2.p2.x - l2.p1.x) * (l1.p1.y - l2.p1.y) - (l2.p2.y - l2.p1.y) * (l1.p1.x - l2.p1.x)) / denom;\n\tconst ub = ((l1.p2.x - l1.p1.x) * (l1.p1.y - l2.p1.y) - (l1.p2.y - l1.p1.y) * (l1.p1.x - l2.p1.x)) / denom;\n\n\t// is the intersection on the segments\n\tif (ua < 0 || ua > 1 || ub < 0 || ub > 1) {\n\t\treturn null;\n\t}\n\n\treturn ua;\n\n}\n\nfunction testLineLine(l1: Line, l2: Line): Vec2 | null {\n\tconst t = testLineLineT(l1, l2);\n\tif (!t) return null;\n\treturn vec2(\n\t\tl1.p1.x + t * (l1.p2.x - l1.p1.x),\n\t\tl1.p1.y + t * (l1.p2.y - l1.p1.y),\n\t);\n}\n\nfunction testRectLine(r: Rect, l: Line): boolean {\n\tif (testRectPoint(r, l.p1) || testRectPoint(r, l.p2)) {\n\t\treturn true;\n\t}\n\treturn !!testLineLine(l, makeLine(r.p1, vec2(r.p2.x, r.p1.y)))\n\t\t|| !!testLineLine(l, makeLine(vec2(r.p2.x, r.p1.y), r.p2))\n\t\t|| !!testLineLine(l, makeLine(r.p2, vec2(r.p1.x, r.p2.y)))\n\t\t|| !!testLineLine(l, makeLine(vec2(r.p1.x, r.p2.y), r.p1));\n}\n\nfunction testRectPoint2(r: Rect, pt: Point): boolean {\n\treturn pt.x >= r.p1.x && pt.x <= r.p2.x && pt.y >= r.p1.y && pt.y <= r.p2.y;\n}\n\nfunction testRectPoint(r: Rect, pt: Point): boolean {\n\treturn pt.x > r.p1.x && pt.x < r.p2.x && pt.y > r.p1.y && pt.y < r.p2.y;\n}\n\n// TODO\nfunction testRectCircle(r: Rect, c: Circle): boolean {\n\treturn false;\n}\n\nfunction testRectPolygon(r: Rect, p: Polygon): boolean {\n\treturn testPolygonPolygon(p, [\n\t\tr.p1,\n\t\tvec2(r.p2.x, r.p1.y),\n\t\tr.p2,\n\t\tvec2(r.p1.x, r.p2.y),\n\t]);\n}\n\n// TODO\nfunction testLinePoint(l: Line, pt: Vec2): boolean {\n\treturn false;\n}\n\n// TODO\nfunction testLineCircle(l: Line, c: Circle): boolean {\n\treturn false;\n}\n\nfunction testLinePolygon(l: Line, p: Polygon): boolean {\n\n\t// test if line is inside\n\tif (testPolygonPoint(p, l.p1) || testPolygonPoint(p, l.p2)) {\n\t\treturn true;\n\t}\n\n\t// test each line\n\tfor (let i = 0; i < p.length; i++) {\n\t\tconst p1 = p[i];\n\t\tconst p2 = p[(i + 1) % p.length];\n\t\tif (testLineLine(l, { p1, p2 })) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n\n}\n\nfunction testCirclePoint(c: Circle, p: Point): boolean {\n\treturn c.center.dist(p) < c.radius;\n}\n\nfunction testCircleCircle(c1: Circle, c2: Circle): boolean {\n\treturn c1.center.dist(c2.center) < c1.radius + c2.radius;\n}\n\n// TODO\nfunction testCirclePolygon(c: Circle, p: Polygon): boolean {\n\treturn false;\n}\n\nfunction testPolygonPolygon(p1: Polygon, p2: Polygon): boolean {\n\tfor (let i = 0; i < p1.length; i++) {\n\t\tconst l = {\n\t\t\tp1: p1[i],\n\t\t\tp2: p1[(i + 1) % p1.length],\n\t\t};\n\t\tif (testLinePolygon(l, p2)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction testPolygonPoint(p: Polygon, pt: Point): boolean {\n\n\tlet has = false;\n\n\tfor (let i = 0; i < p.length; i++) {\n\n\t\tconst p1 = p[i];\n\t\tconst p2 = p[(i + 1) % p.length];\n\n\t\tif (\n\t\t\t((p1.y > pt.y && p2.y < pt.y) || (p1.y < pt.y && p2.y > pt.y))\n\t\t\t&& (pt.x < (p2.x - p1.x) * (pt.y - p1.y) / (p2.y - p1.y) + p1.x)\n\t\t) {\n\t\t\thas = !has;\n\t\t}\n\n\t}\n\n\treturn has;\n\n}\n\nfunction testPointPoint(p1: Point, p2: Point): boolean {\n\treturn p1.eq(p2);\n}\n\nfunction testAreaRect(a: Area, r: Rect): boolean {\n\tswitch (a.shape) {\n\t\tcase \"rect\": return testRectRect(r, a);\n\t\tcase \"line\": return testRectLine(r, a);\n\t\tcase \"circle\": return testRectCircle(r, a);\n\t\tcase \"polygon\": return testRectPolygon(r, a.pts);\n\t\tcase \"point\": return testRectPoint(r, a.pt);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a as Area).shape}`);\n}\n\nfunction testAreaLine(a: Area, l: Line): boolean {\n\tswitch (a.shape) {\n\t\tcase \"rect\": return testRectLine(a, l);\n\t\tcase \"line\": return Boolean(testLineLine(a, l));\n\t\tcase \"circle\": return testLineCircle(l, a);\n\t\tcase \"polygon\": return testLinePolygon(l, a.pts);\n\t\tcase \"point\": return testLinePoint(l, a.pt);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a as Area).shape}`);\n}\n\nfunction testAreaCircle(a: Area, c: Circle): boolean {\n\tswitch (a.shape) {\n\t\tcase \"rect\": return testRectCircle(a, c);\n\t\tcase \"line\": return testLineCircle(a, c);\n\t\tcase \"circle\": return testCircleCircle(a, c);\n\t\tcase \"polygon\": return testCirclePolygon(c, a.pts);\n\t\tcase \"point\": return testCirclePoint(c, a.pt);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a as Area).shape}`);\n}\n\nfunction testAreaPolygon(a: Area, p: Polygon): boolean {\n\tswitch (a.shape) {\n\t\tcase \"rect\": return testRectPolygon(a, p);\n\t\tcase \"line\": return testLinePolygon(a, p);\n\t\tcase \"circle\": return testCirclePolygon(a, p);\n\t\tcase \"polygon\": return testPolygonPolygon(p, a.pts);\n\t\tcase \"point\": return testPolygonPoint(p, a.pt);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a as Area).shape}`);\n}\n\nfunction testAreaPoint(a: Area, p: Point): boolean {\n\tswitch (a.shape) {\n\t\tcase \"rect\": return testRectPoint(a, p);\n\t\tcase \"line\": return testLinePoint(a, p);\n\t\tcase \"circle\": return testCirclePoint(a, p);\n\t\tcase \"polygon\": return testPolygonPoint(a.pts, p);\n\t\tcase \"point\": return testPointPoint(a.pt, p);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a as Area).shape}`);\n}\n\nfunction testAreaArea(a1: Area, a2: Area): boolean {\n\tswitch (a2.shape) {\n\t\tcase \"rect\": return testAreaRect(a1, a2);\n\t\tcase \"line\": return testAreaLine(a1, a2);\n\t\tcase \"circle\": return testAreaCircle(a1, a2);\n\t\tcase \"polygon\": return testAreaPolygon(a1, a2.pts);\n\t\tcase \"point\": return testAreaPoint(a1, a2.pt);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a2 as Area).shape}`);\n}\n\nfunction minkDiff(r1: Rect, r2: Rect): Rect {\n\treturn {\n\t\tp1: vec2(r1.p1.x - r2.p2.x, r1.p1.y - r2.p2.y),\n\t\tp2: vec2(r1.p2.x - r2.p1.x, r1.p2.y - r2.p1.y),\n\t};\n}\n\nfunction makeLine(p1: Vec2, p2: Vec2): Line {\n\treturn {\n\t\tp1: p1.clone(),\n\t\tp2: p2.clone(),\n\t};\n}\n\nexport {\n\tvec2,\n\tvec3,\n\tmat4,\n\tquad,\n\trgb,\n\thsl2rgb,\n\trng,\n\trand,\n\trandi,\n\trandSeed,\n\tchance,\n\tchoose,\n\tclamp,\n\tlerp,\n\tmap,\n\tmapc,\n\twave,\n\tdeg2rad,\n\trad2deg,\n\ttestAreaRect,\n\ttestAreaLine,\n\ttestAreaCircle,\n\ttestAreaPolygon,\n\ttestAreaPoint,\n\ttestAreaArea,\n\ttestLineLineT,\n\ttestRectRect2,\n\ttestLineLine,\n\ttestRectRect,\n\ttestRectLine,\n\ttestRectPoint,\n\ttestPolygonPoint,\n\ttestLinePolygon,\n\ttestPolygonPolygon,\n\ttestCircleCircle,\n\ttestCirclePoint,\n\ttestRectPolygon,\n\tminkDiff,\n\tdir,\n\tisVec2,\n\tisVec3,\n\tisColor,\n\tisMat4,\n};\n","class IDList<T> extends Map<number, T> {\n\t_lastID: number;\n\tconstructor(...args) {\n\t\tsuper(...args);\n\t\tthis._lastID = 0;\n\t}\n\tpush(v: T): number {\n\t\tconst id = this._lastID;\n\t\tthis.set(id, v);\n\t\tthis._lastID++;\n\t\treturn id;\n\t}\n\tpushd(v: T): () => void {\n\t\tconst id = this.push(v);\n\t\treturn () => this.delete(id);\n\t}\n}\n\nfunction deepEq(o1: any, o2: any): boolean {\n\tconst t1 = typeof o1;\n\tconst t2 = typeof o2;\n\tif (t1 !== t2) {\n\t\treturn false;\n\t}\n\tif (t1 === \"object\" && t2 === \"object\") {\n\t\tconst k1 = Object.keys(o1);\n\t\tconst k2 = Object.keys(o2);\n\t\tif (k1.length !== k2.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (const k of k1) {\n\t\t\tconst v1 = o1[k];\n\t\t\tconst v2 = o2[k];\n\t\t\tif (!(typeof v1 === \"function\" && typeof v2 === \"function\")) {\n\t\t\t\tif (!deepEq(v1, v2)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\treturn o1 === o2;\n}\n\nfunction downloadURL(url: string, filename: string) {\n\tconst a = document.createElement(\"a\");\n\tdocument.body.appendChild(a);\n\ta.setAttribute(\"style\", \"display: none\");\n\ta.href = url;\n\ta.download = filename;\n\ta.click();\n\tdocument.body.removeChild(a);\n}\n\nfunction downloadBlob(blob: Blob, filename: string) {\n\tconst url = URL.createObjectURL(blob);\n\tdownloadURL(url, filename);\n\tURL.revokeObjectURL(url);\n}\n\nexport {\n\tdeepEq,\n\tIDList,\n\tdownloadBlob,\n\tdownloadURL,\n};\n","import {\n\tvec2,\n\tvec3,\n\tquad,\n\trgb,\n\tmat4,\n\tdir,\n\tdeg2rad,\n\tisVec2,\n\tisVec3,\n\tisColor,\n\tisMat4,\n} from \"./math\";\n\nimport {\n\tdeepEq,\n} from \"./utils\";\n\nimport {\n\tColor,\n\tVec2,\n\tMat4,\n\tQuad,\n\tOrigin,\n\tGfxShader,\n\tGfxTexture,\n\tGfxTexData,\n\tGfxFont,\n\tUniform,\n\tTexFilter,\n\tRenderProps,\n\tCharTransform,\n\tTexWrap,\n\tFormattedText,\n\tDrawRectOpt,\n\tDrawLineOpt,\n\tDrawLinesOpt,\n\tDrawTriangleOpt,\n\tDrawPolygonOpt,\n\tDrawCircleOpt,\n\tDrawEllipseOpt,\n\tDrawUVQuadOpt,\n\tVertex,\n\tDrawTextOpt,\n} from \"./types\";\n\ntype GfxCtx = {\n\tvbuf: WebGLBuffer,\n\tibuf: WebGLBuffer,\n\tvqueue: number[],\n\tiqueue: number[],\n\tbackground: Color,\n\tdefShader: GfxShader,\n\tcurShader: GfxShader,\n\tdefTex: GfxTexture,\n\tcurTex: GfxTexture,\n\tbgTex: GfxTexture,\n\tcurUniform: Uniform,\n\ttransform: Mat4,\n\ttransformStack: Mat4[],\n\tdrawCalls: number,\n\tlastDrawCalls: number,\n\twidth: number,\n\theight: number,\n};\n\ntype GfxOpt = {\n\tbackground?: Color,\n\twidth?: number,\n\theight?: number,\n\tscale?: number,\n\ttexFilter?: TexFilter,\n    stretch?: boolean,\n    letterbox?: boolean,\n};\n\ntype DrawTextureOpt = RenderProps & {\n\ttex: GfxTexture,\n\twidth?: number,\n\theight?: number,\n\ttiled?: boolean,\n\tflipX?: boolean,\n\tflipY?: boolean,\n\tquad?: Quad,\n\torigin?: Origin | Vec2,\n}\n\n// TODO: name\ntype DrawTextOpt2 = RenderProps & {\n\ttext: string,\n\tfont?: GfxFont,\n\tsize?: number,\n\twidth?: number,\n\torigin?: Origin | Vec2,\n\ttransform?: (idx: number, ch: string) => CharTransform,\n}\n\ninterface GfxTexOpt {\n\tfilter?: TexFilter,\n\twrap?: TexWrap,\n}\n\ntype Gfx = {\n\twidth(): number,\n\theight(): number,\n\tscale(): number,\n\tbackground(): Color,\n\tmakeTex(data: GfxTexData, opt?: GfxTexOpt): GfxTexture,\n\tmakeShader(vert: string, frag: string): GfxShader,\n\tmakeFont(\n\t\ttex: GfxTexture,\n\t\tgw: number,\n\t\tgh: number,\n\t\tchars: string,\n\t): GfxFont,\n\tdrawTexture(opt: DrawTextureOpt),\n\tdrawText(opt: DrawTextOpt2),\n\tdrawFmtText(ftext: FormattedText),\n\tdrawRect(opt: DrawRectOpt),\n\tdrawLine(opt: DrawLineOpt),\n\tdrawLines(opt: DrawLinesOpt),\n\tdrawTriangle(opt: DrawTriangleOpt),\n\tdrawCircle(opt: DrawCircleOpt),\n\tdrawEllipse(opt: DrawEllipseOpt),\n\tdrawPolygon(opt: DrawPolygonOpt),\n\tdrawUVQuad(opt: DrawUVQuadOpt),\n\tfmtText(opt: DrawTextOpt2): FormattedText,\n\tframeStart(),\n\tframeEnd(),\n\tpushTransform(): void,\n\tpopTransform(): void,\n\tpushTranslate(x: number, y: number): void,\n\tpushTranslate(p: Vec2): void,\n\tpushScale(sx: number, sy: number): void,\n\tpushScale(s: number): void,\n\tpushScale(s: Vec2): void,\n\tpushRotateX(angle: number): void,\n\tpushRotateY(angle: number): void,\n\tpushRotateZ(angle: number): void,\n\tapplyMatrix(m: Mat4),\n\tdrawCalls(): number,\n};\n\nconst DEF_ORIGIN = \"topleft\";\nconst STRIDE = 9;\nconst QUEUE_COUNT = 65536;\nconst BG_GRID_SIZE = 64;\n\nconst VERT_TEMPLATE = `\nattribute vec3 a_pos;\nattribute vec2 a_uv;\nattribute vec4 a_color;\n\nvarying vec3 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nvec4 def_vert() {\n\treturn vec4(a_pos, 1.0);\n}\n\n{{user}}\n\nvoid main() {\n\tvec4 pos = vert(a_pos, a_uv, a_color);\n\tv_pos = a_pos;\n\tv_uv = a_uv;\n\tv_color = a_color;\n\tgl_Position = pos;\n}\n`;\n\nconst FRAG_TEMPLATE = `\nprecision mediump float;\n\nvarying vec3 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nuniform sampler2D u_tex;\n\nvec4 def_frag() {\n\treturn v_color * texture2D(u_tex, v_uv);\n}\n\n{{user}}\n\nvoid main() {\n\tgl_FragColor = frag(v_pos, v_uv, v_color, u_tex);\n\tif (gl_FragColor.a == 0.0) {\n\t\tdiscard;\n\t}\n}\n`;\n\nconst DEF_VERT = `\nvec4 vert(vec3 pos, vec2 uv, vec4 color) {\n\treturn def_vert();\n}\n`;\n\nconst DEF_FRAG = `\nvec4 frag(vec3 pos, vec2 uv, vec4 color, sampler2D tex) {\n\treturn def_frag();\n}\n`;\n\nfunction originPt(orig: Origin | Vec2): Vec2 {\n\tswitch (orig) {\n\t\tcase \"topleft\": return vec2(-1, -1);\n\t\tcase \"top\": return vec2(0, -1);\n\t\tcase \"topright\": return vec2(1, -1);\n\t\tcase \"left\": return vec2(-1, 0);\n\t\tcase \"center\": return vec2(0, 0);\n\t\tcase \"right\": return vec2(1, 0);\n\t\tcase \"botleft\": return vec2(-1, 1);\n\t\tcase \"bot\": return vec2(0, 1);\n\t\tcase \"botright\": return vec2(1, 1);\n\t\tdefault: return orig;\n\t}\n}\n\nfunction gfxInit(gl: WebGLRenderingContext, gopt: GfxOpt): Gfx {\n\n\tconst gfx: GfxCtx = (() => {\n\n\t\tconst defShader = makeShader(DEF_VERT, DEF_FRAG);\n\t\tconst emptyTex = makeTex(\n\t\t\tnew ImageData(new Uint8ClampedArray([ 255, 255, 255, 255, ]), 1, 1)\n\t\t);\n\n\t\tconst c = gopt.background ?? rgb(0, 0, 0);\n\n\t\tgl.clearColor(c.r / 255, c.g / 255, c.b / 255, 1);\n\t\tgl.enable(gl.BLEND);\n\t\tgl.enable(gl.SCISSOR_TEST);\n\t\tgl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\n\t\tconst vbuf = gl.createBuffer();\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, vbuf);\n\t\tgl.bufferData(gl.ARRAY_BUFFER, QUEUE_COUNT * 4, gl.DYNAMIC_DRAW);\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null);\n\n\t\tconst ibuf = gl.createBuffer();\n\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibuf);\n\t\tgl.bufferData(gl.ELEMENT_ARRAY_BUFFER, QUEUE_COUNT * 2, gl.DYNAMIC_DRAW);\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n\t\t// a checkerboard texture\n\t\tconst bgTex = makeTex(\n\t\t\tnew ImageData(new Uint8ClampedArray([\n\t\t\t\t128, 128, 128, 255,\n\t\t\t\t190, 190, 190, 255,\n\t\t\t\t190, 190, 190, 255,\n\t\t\t\t128, 128, 128, 255,\n\t\t\t]), 2, 2), {\n\t\t\t\twrap: \"repeat\",\n\t\t\t\tfilter: \"nearest\",\n\t\t\t},\n\t\t);\n\n\t\treturn {\n\t\t\tdrawCalls: 0,\n\t\t\tlastDrawCalls: 0,\n\t\t\tdefShader: defShader,\n\t\t\tcurShader: defShader,\n\t\t\tdefTex: emptyTex,\n\t\t\tcurTex: emptyTex,\n\t\t\tcurUniform: {},\n\t\t\tvbuf: vbuf,\n\t\t\tibuf: ibuf,\n\t\t\tvqueue: [],\n\t\t\tiqueue: [],\n\t\t\ttransform: mat4(),\n\t\t\ttransformStack: [],\n\t\t\tbackground: c,\n\t\t\tbgTex: bgTex,\n\t\t\twidth: gopt.width,\n\t\t\theight: gopt.height,\n\t\t};\n\n\t})();\n\n\tfunction powerOfTwo(n) {\n\t\treturn (Math.log(n) / Math.log(2)) % 1 === 0;\n\t}\n\n\tfunction makeTex(data: GfxTexData, opt: GfxTexOpt = {}): GfxTexture {\n\n\t\tconst id = gl.createTexture();\n\n\t\tgl.bindTexture(gl.TEXTURE_2D, id);\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n\n\t\tconst filter = (() => {\n\t\t\tswitch (opt.filter ?? gopt.texFilter) {\n\t\t\t\tcase \"linear\": return gl.LINEAR;\n\t\t\t\tcase \"nearest\": return gl.NEAREST;\n\t\t\t\tdefault: return gl.NEAREST;\n\t\t\t}\n\t\t})();\n\n\t\tconst wrap = (() => {\n\t\t\tswitch (opt.wrap) {\n\t\t\t\tcase \"repeat\": return gl.REPEAT;\n\t\t\t\tcase \"clampToEdge\": return gl.CLAMP_TO_EDGE;\n\t\t\t\tdefault: return gl.CLAMP_TO_EDGE;\n\t\t\t}\n\t\t})();\n\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filter);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filter);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrap);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrap);\n\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\n\t\treturn {\n\t\t\twidth: data.width,\n\t\t\theight: data.height,\n\t\t\tbind() {\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, id);\n\t\t\t},\n\t\t\tunbind() {\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t\t\t},\n\t\t};\n\n\t}\n\n\tfunction makeShader(\n\t\tvertSrc: string | null = DEF_VERT,\n\t\tfragSrc: string | null = DEF_FRAG,\n\t): GfxShader {\n\n\t\tlet msg;\n\t\tconst vcode = VERT_TEMPLATE.replace(\"{{user}}\", vertSrc ?? DEF_VERT);\n\t\tconst fcode = FRAG_TEMPLATE.replace(\"{{user}}\", fragSrc ?? DEF_FRAG);\n\t\tconst vertShader = gl.createShader(gl.VERTEX_SHADER);\n\t\tconst fragShader = gl.createShader(gl.FRAGMENT_SHADER);\n\n\t\tgl.shaderSource(vertShader, vcode);\n\t\tgl.shaderSource(fragShader, fcode);\n\t\tgl.compileShader(vertShader);\n\t\tgl.compileShader(fragShader);\n\n\t\tif ((msg = gl.getShaderInfoLog(vertShader))) {\n\t\t\tthrow new Error(msg);\n\t\t}\n\n\t\tif ((msg = gl.getShaderInfoLog(fragShader))) {\n\t\t\tthrow new Error(msg);\n\t\t}\n\n\t\tconst id = gl.createProgram();\n\n\t\tgl.attachShader(id, vertShader);\n\t\tgl.attachShader(id, fragShader);\n\n\t\tgl.bindAttribLocation(id, 0, \"a_pos\");\n\t\tgl.bindAttribLocation(id, 1, \"a_uv\");\n\t\tgl.bindAttribLocation(id, 2, \"a_color\");\n\n\t\tgl.linkProgram(id);\n\n\t\tif ((msg = gl.getProgramInfoLog(id))) {\n\t\t\t// for some reason on safari it always has a \"\\n\" msg\n\t\t\tif (msg !== \"\\n\") {\n\t\t\t\tthrow new Error(msg);\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\n\t\t\tbind() {\n\t\t\t\tgl.useProgram(id);\n\t\t\t},\n\n\t\t\tunbind() {\n\t\t\t\tgl.useProgram(null);\n\t\t\t},\n\n\t\t\tbindAttribs() {\n\t\t\t\tgl.vertexAttribPointer(0, 3, gl.FLOAT, false, STRIDE * 4, 0);\n\t\t\t\tgl.enableVertexAttribArray(0);\n\t\t\t\tgl.vertexAttribPointer(1, 2, gl.FLOAT, false, STRIDE * 4, 12);\n\t\t\t\tgl.enableVertexAttribArray(1);\n\t\t\t\tgl.vertexAttribPointer(2, 4, gl.FLOAT, false, STRIDE * 4, 20);\n\t\t\t\tgl.enableVertexAttribArray(2);\n\t\t\t},\n\n\t\t\tsend(uniform: Uniform) {\n\t\t\t\tthis.bind();\n\t\t\t\tfor (const name in uniform) {\n\t\t\t\t\tconst val = uniform[name];\n\t\t\t\t\tconst loc = gl.getUniformLocation(id, name);\n\t\t\t\t\tif (typeof val === \"number\") {\n\t\t\t\t\t\tgl.uniform1f(loc, val);\n\t\t\t\t\t} else if (isMat4(val)) {\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tgl.uniformMatrix4fv(loc, false, new Float32Array(val.m));\n\t\t\t\t\t} else if (isColor(val)) {\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tgl.uniform4f(loc, val.r, val.g, val.b, val.a);\n\t\t\t\t\t} else if (isVec3(val)) {\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tgl.uniform3f(loc, val.x, val.y, val.z);\n\t\t\t\t\t} else if (isVec2(val)) {\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tgl.uniform2f(loc, val.x, val.y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.unbind();\n\t\t\t},\n\n\t\t};\n\n\t}\n\n\tfunction makeFont(\n\t\ttex: GfxTexture,\n\t\tgw: number,\n\t\tgh: number,\n\t\tchars: string,\n\t): GfxFont {\n\n\t\tconst cols = tex.width / gw;\n\t\tconst rows = tex.height / gh;\n\t\tconst qw = 1.0 / cols;\n\t\tconst qh = 1.0 / rows;\n\t\tconst map: Record<string, Vec2> = {};\n\t\tconst charMap = chars.split(\"\").entries();\n\n\t\tfor (const [i, ch] of charMap) {\n\t\t\tmap[ch] = vec2(\n\t\t\t\t(i % cols) * qw,\n\t\t\t\tMath.floor(i / cols) * qh,\n\t\t\t);\n\t\t}\n\n\t\treturn {\n\t\t\ttex: tex,\n\t\t\tmap: map,\n\t\t\tqw: qw,\n\t\t\tqh: qh,\n\t\t};\n\n\t}\n\n\t// TODO: expose\n\tfunction drawRaw(\n\t\tverts: Vertex[],\n\t\tindices: number[],\n\t\ttex: GfxTexture = gfx.defTex,\n\t\tshader: GfxShader = gfx.defShader,\n\t\tuniform: Uniform = {},\n\t) {\n\n\t\ttex = tex ?? gfx.defTex;\n\t\tshader = shader ?? gfx.defShader;\n\n\t\t// flush on texture / shader change and overflow\n\t\tif (\n\t\t\ttex !== gfx.curTex\n\t\t\t|| shader !== gfx.curShader\n\t\t\t|| !deepEq(gfx.curUniform, uniform)\n\t\t\t|| gfx.vqueue.length + verts.length * STRIDE > QUEUE_COUNT\n\t\t\t|| gfx.iqueue.length + indices.length > QUEUE_COUNT\n\t\t) {\n\t\t\tflush();\n\t\t}\n\n\t\tgfx.curTex = tex;\n\t\tgfx.curShader = shader;\n\t\tgfx.curUniform = uniform;\n\n\t\tindices.forEach((i) => {\n\t\t\tgfx.iqueue.push(i + gfx.vqueue.length / STRIDE);\n\t\t});\n\n\t\tverts.forEach((v) => {\n\t\t\tconst pt = toNDC(gfx.transform.multVec2(v.pos.xy()));\n\t\t\tgfx.vqueue.push(\n\t\t\t\tpt.x, pt.y, v.pos.z,\n\t\t\t\tv.uv.x, v.uv.y,\n\t\t\t\tv.color.r / 255, v.color.g / 255, v.color.b / 255, v.opacity,\n\t\t\t);\n\t\t});\n\n\t}\n\n\tfunction flush() {\n\n\t\tif (\n\t\t\t!gfx.curTex\n\t\t\t|| !gfx.curShader\n\t\t\t|| gfx.vqueue.length === 0\n\t\t\t|| gfx.iqueue.length === 0\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tgfx.curShader.send(gfx.curUniform);\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, gfx.vbuf);\n\t\tgl.bufferSubData(gl.ARRAY_BUFFER, 0, new Float32Array(gfx.vqueue));\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, gfx.ibuf);\n\t\tgl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, 0, new Uint16Array(gfx.iqueue));\n\t\tgfx.curShader.bind();\n\t\tgfx.curShader.bindAttribs();\n\t\tgfx.curTex.bind();\n\t\tgl.drawElements(gl.TRIANGLES, gfx.iqueue.length, gl.UNSIGNED_SHORT, 0);\n\t\tgfx.curTex.unbind();\n\t\tgfx.curShader.unbind();\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null);\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n\t\tgfx.iqueue = [];\n\t\tgfx.vqueue = [];\n\n\t\tgfx.drawCalls++;\n\n\t}\n\n\tfunction frameStart() {\n\n\t\tgl.clear(gl.COLOR_BUFFER_BIT);\n\n\t\tif (!gopt.background) {\n\t\t\tdrawUVQuad({\n\t\t\t\twidth: width(),\n\t\t\t\theight: height(),\n\t\t\t\tquad: quad(\n\t\t\t\t\t0,\n\t\t\t\t\t0,\n\t\t\t\t\twidth() * scale() / BG_GRID_SIZE,\n\t\t\t\t\theight() * scale() / BG_GRID_SIZE,\n\t\t\t\t),\n\t\t\t\ttex: gfx.bgTex,\n\t\t\t})\n\t\t}\n\n\t\tgfx.drawCalls = 0;\n\t\tgfx.transformStack = [];\n\t\tgfx.transform = mat4();\n\n\t}\n\n\tfunction frameEnd() {\n\t\tflush();\n\t\tgfx.lastDrawCalls = gfx.drawCalls;\n\t}\n\n\tfunction drawCalls() {\n\t\treturn gfx.lastDrawCalls;\n\t}\n\n\tfunction toNDC(pt: Vec2): Vec2 {\n\t\treturn vec2(\n\t\t\tpt.x / width() * 2 - 1,\n\t\t\t-pt.y / height() * 2 + 1,\n\t\t);\n\t}\n\n\tfunction applyMatrix(m: Mat4) {\n\t\tgfx.transform = m.clone();\n\t}\n\n\tfunction pushTranslate(...args) {\n\t\tif (args[0] === undefined) return;\n\t\tconst p = vec2(...args);\n\t\tif (p.x === 0 && p.y === 0) return;\n\t\tgfx.transform = gfx.transform.translate(p);\n\t}\n\n\tfunction pushScale(...args) {\n\t\tif (args[0] === undefined) return;\n\t\tconst p = vec2(...args);\n\t\tif (p.x === 1 && p.y === 1) return;\n\t\tgfx.transform = gfx.transform.scale(p);\n\t}\n\n\tfunction pushRotateX(a: number) {\n\t\tif (!a) {\n\t\t\treturn;\n\t\t}\n\t\tgfx.transform = gfx.transform.rotateX(a);\n\t}\n\n\tfunction pushRotateY(a: number) {\n\t\tif (!a) {\n\t\t\treturn;\n\t\t}\n\t\tgfx.transform = gfx.transform.rotateY(a);\n\t}\n\n\tfunction pushRotateZ(a: number) {\n\t\tif (!a) {\n\t\t\treturn;\n\t\t}\n\t\tgfx.transform = gfx.transform.rotateZ(a);\n\t}\n\n\tfunction pushTransform() {\n\t\tgfx.transformStack.push(gfx.transform.clone());\n\t}\n\n\tfunction popTransform() {\n\t\tif (gfx.transformStack.length > 0) {\n\t\t\tgfx.transform = gfx.transformStack.pop();\n\t\t}\n\t}\n\n\t// draw a uv textured quad\n\tfunction drawUVQuad(opt: DrawUVQuadOpt) {\n\n\t\tif (opt.width === undefined || opt.height === undefined) {\n\t\t\tthrow new Error(\"drawUVQuad() requires property \\\"width\\\" and \\\"height\\\".\");\n\t\t}\n\n\t\tif (opt.width <= 0 || opt.height <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst w = opt.width;\n\t\tconst h = opt.height;\n\t\tconst origin = originPt(opt.origin || DEF_ORIGIN);\n\t\tconst offset = origin.scale(vec2(w, h).scale(-0.5));\n\t\tconst q = opt.quad || quad(0, 0, 1, 1);\n\t\tconst color = opt.color || rgb(255, 255, 255);\n\t\tconst opacity = opt.opacity ?? 1;\n\n\t\tpushTransform();\n\t\tpushTranslate(opt.pos);\n\t\tpushRotateZ(opt.angle);\n\t\tpushScale(opt.scale);\n\t\tpushTranslate(offset);\n\n\t\tdrawRaw([\n\t\t\t{\n\t\t\t\tpos: vec3(-w / 2, h / 2, 0),\n\t\t\t\tuv: vec2(opt.flipX ? q.x + q.w : q.x, opt.flipY ? q.y : q.y + q.h),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: vec3(-w / 2, -h / 2, 0),\n\t\t\t\tuv: vec2(opt.flipX ? q.x + q.w : q.x, opt.flipY ? q.y + q.h : q.y),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: vec3(w / 2, -h / 2, 0),\n\t\t\t\tuv: vec2(opt.flipX ? q.x : q.x + q.w, opt.flipY ? q.y + q.h : q.y),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: vec3(w / 2, h / 2, 0),\n\t\t\t\tuv: vec2(opt.flipX ? q.x : q.x + q.w, opt.flipY ? q.y : q.y + q.h),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t], [0, 1, 3, 1, 2, 3], opt.tex, opt.shader, opt.uniform);\n\n\t\tpopTransform();\n\n\t}\n\n\t// TODO: clean\n\tfunction drawTexture(\n\t\topt: DrawTextureOpt,\n\t) {\n\n\t\tif (!opt.tex) {\n\t\t\tthrow new Error(\"drawTexture() requires property \\\"tex\\\".\");\n\t\t}\n\n\t\tconst q = opt.quad ?? quad(0, 0, 1, 1);\n\t\tconst w = opt.tex.width * q.w;\n\t\tconst h = opt.tex.height * q.h;\n\t\tconst scale = vec2(1);\n\n\t\tif (opt.tiled) {\n\n\t\t\t// TODO: draw fract\n\t\t\tconst repX = Math.ceil((opt.width || w) / w);\n\t\t\tconst repY = Math.ceil((opt.height || h) / h);\n\t\t\tconst origin = originPt(opt.origin || DEF_ORIGIN).add(vec2(1, 1)).scale(0.5);\n\t\t\tconst offset = origin.scale(repX * w, repY * h);\n\n\t\t\t// TODO: rotation\n\t\t\tfor (let i = 0; i < repX; i++) {\n\t\t\t\tfor (let j = 0; j < repY; j++) {\n\t\t\t\t\tdrawUVQuad({\n\t\t\t\t\t\t...opt,\n\t\t\t\t\t\tpos: (opt.pos || vec2(0)).add(vec2(w * i, h * j)).sub(offset),\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tscale: scale.scale(opt.scale || vec2(1)),\n\t\t\t\t\t\ttex: opt.tex,\n\t\t\t\t\t\tquad: q,\n\t\t\t\t\t\twidth: w,\n\t\t\t\t\t\theight: h,\n\t\t\t\t\t\torigin: \"topleft\",\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\n\t\t\t// TODO: should this ignore scale?\n\t\t\tif (opt.width && opt.height) {\n\t\t\t\tscale.x = opt.width / w;\n\t\t\t\tscale.y = opt.height / h;\n\t\t\t} else if (opt.width) {\n\t\t\t\tscale.x = opt.width / w;\n\t\t\t\tscale.y = scale.x;\n\t\t\t} else if (opt.height) {\n\t\t\t\tscale.y = opt.height / h;\n\t\t\t\tscale.x = scale.y;\n\t\t\t}\n\n\t\t\tdrawUVQuad({\n\t\t\t\t...opt,\n\t\t\t\t// @ts-ignore\n\t\t\t\tscale: scale.scale(opt.scale || vec2(1)),\n\t\t\t\ttex: opt.tex,\n\t\t\t\tquad: q,\n\t\t\t\twidth: w,\n\t\t\t\theight: h,\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t// generate vertices to form an arc\n\tfunction getArcPts(\n\t\tpos: Vec2,\n\t\tradiusX: number,\n\t\tradiusY: number,\n\t\tstart: number,\n\t\tend: number,\n\t\tres: number = 1,\n\t): Vec2[] {\n\n\t\t// normalize and turn start and end angles to radians\n\t\tstart = deg2rad(start % 360);\n\t\tend = deg2rad(end % 360);\n\t\tif (end <= start) end += Math.PI * 2;\n\n\t\t// TODO: better way to get this?\n\t\t// the number of vertices is sqrt(r1 + r2) * 3 * res with a minimum of 16\n\t\tconst nverts = Math.ceil(Math.max(Math.sqrt(radiusX + radiusY) * 3 * (res || 1), 16));\n\t\tconst step = (end - start) / nverts;\n\t\tconst pts = [];\n\n\t\t// calculate vertices\n\t\tfor (let a = start; a < end; a += step) {\n\t\t\tpts.push(pos.add(radiusX * Math.cos(a), radiusY * Math.sin(a)));\n\t\t}\n\n\t\t// doing this on the side due to possible floating point inaccuracy\n\t\tpts.push(pos.add(radiusX * Math.cos(end), radiusY * Math.sin(end)));\n\n\t\treturn pts;\n\n\t}\n\n\tfunction drawRect(opt: DrawRectOpt) {\n\n\t\tif (opt.width === undefined || opt.height === undefined) {\n\t\t\tthrow new Error(\"drawRect() requires property \\\"width\\\" and \\\"height\\\".\");\n\t\t}\n\n\t\tif (opt.width <= 0 || opt.height <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst w = opt.width;\n\t\tconst h = opt.height;\n\t\tconst origin = originPt(opt.origin || DEF_ORIGIN).add(1, 1);\n\t\tconst offset = origin.scale(vec2(w, h).scale(-0.5));\n\n\t\tlet pts = [\n\t\t\tvec2(0, 0),\n\t\t\tvec2(w, 0),\n\t\t\tvec2(w, h),\n\t\t\tvec2(0, h),\n\t\t];\n\n\t\t// TODO: drawPolygon should handle generic rounded corners\n\t\tif (opt.radius) {\n\n\t\t\t// maxium radius is half the shortest side\n\t\t\tconst r = Math.min(Math.min(w, h) / 2, opt.radius);\n\n\t\t\tpts = [\n\t\t\t\tvec2(r, 0),\n\t\t\t\tvec2(w - r, 0),\n\t\t\t\t...getArcPts(vec2(w - r, r), r, r, 270, 360),\n\t\t\t\tvec2(w, r),\n\t\t\t\tvec2(w, h - r),\n\t\t\t\t...getArcPts(vec2(w - r, h - r), r, r, 0, 90),\n\t\t\t\tvec2(w - r, h),\n\t\t\t\tvec2(r, h),\n\t\t\t\t...getArcPts(vec2(r, h - r), r, r, 90, 180),\n\t\t\t\tvec2(0, h - r),\n\t\t\t\tvec2(0, r),\n\t\t\t\t...getArcPts(vec2(r, r), r, r, 180, 270),\n\t\t\t];\n\n\t\t}\n\n\t\tdrawPolygon({ ...opt, offset, pts });\n\n\t}\n\n\tfunction drawLine(opt: DrawLineOpt) {\n\n\t\tconst { p1, p2 } = opt;\n\n\t\tif (!p1 || !p2) {\n\t\t\tthrow new Error(\"drawLine() requires properties \\\"p1\\\" and \\\"p2\\\".\");\n\t\t}\n\n\t\tconst w = opt.width || 1;\n\n\t\t// the displacement from the line end point to the corner point\n\t\tconst dis = p2.sub(p1).unit().normal().scale(w * 0.5);\n\n\t\t// calculate the 4 corner points of the line polygon\n\t\tconst verts = [\n\t\t\tp1.sub(dis),\n\t\t\tp1.add(dis),\n\t\t\tp2.add(dis),\n\t\t\tp2.sub(dis),\n\t\t].map((p) => ({\n\t\t\tpos: vec3(p.x, p.y, 0),\n\t\t\tuv: vec2(0),\n\t\t\tcolor: opt.color ?? rgb(),\n\t\t\topacity: opt.opacity ?? 1,\n\t\t}));\n\n\t\tdrawRaw(verts, [0, 1, 3, 1, 2, 3], gfx.defTex, opt.shader, opt.uniform);\n\n\t}\n\n\tfunction drawLines(opt: DrawLinesOpt) {\n\n\t\tconst pts = opt.pts;\n\n\t\tif (!pts) {\n\t\t\tthrow new Error(\"drawLines() requires property \\\"pts\\\".\");\n\t\t}\n\n\t\tif (pts.length < 2) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (opt.radius && pts.length >= 3) {\n\n\t\t\t// TODO: rounded vertices for arbitury polygonic shape\n\t\t\tlet minLen = pts[0].dist(pts[1]);\n\n\t\t\tfor (let i = 1; i < pts.length - 1; i++) {\n\t\t\t\tminLen = Math.min(pts[i].dist(pts[i + 1]), minLen);\n\t\t\t}\n\n\t\t\tconst radius = Math.min(opt.radius, minLen / 2);\n\n\t\t\tdrawLine({ ...opt, p1: pts[0], p2: pts[1], });\n\n\t\t\tfor (let i = 1; i < pts.length - 2; i++) {\n\t\t\t\tconst p1 = pts[i];\n\t\t\t\tconst p2 = pts[i + 1];\n\t\t\t\tdrawLine({\n\t\t\t\t\t...opt,\n\t\t\t\t\tp1: p1,\n\t\t\t\t\tp2: p2,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tdrawLine({ ...opt, p1: pts[pts.length - 2], p2: pts[pts.length - 1], });\n\n\t\t} else {\n\n\t\t\tfor (let i = 0; i < pts.length - 1; i++) {\n\t\t\t\tdrawLine({\n\t\t\t\t\t...opt,\n\t\t\t\t\tp1: pts[i],\n\t\t\t\t\tp2: pts[i + 1],\n\t\t\t\t});\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction drawTriangle(opt: DrawTriangleOpt) {\n\t\tif (!opt.p1 || !opt.p2 || !opt.p3) {\n\t\t\tthrow new Error(\"drawPolygon() requires properties \\\"p1\\\", \\\"p2\\\" and \\\"p3\\\".\");\n\t\t}\n\t\treturn drawPolygon({\n\t\t\t...opt,\n\t\t\tpts: [opt.p1, opt.p2, opt.p3],\n\t\t});\n\t}\n\n\t// TODO: origin\n\tfunction drawCircle(opt: DrawCircleOpt) {\n\n\t\tif (!opt.radius) {\n\t\t\tthrow new Error(\"drawCircle() requires property \\\"radius\\\".\");\n\t\t}\n\n\t\tif (opt.radius === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tdrawEllipse({\n\t\t\t...opt,\n\t\t\tradiusX: opt.radius,\n\t\t\tradiusY: opt.radius,\n\t\t\tangle: 0,\n\t\t});\n\n\t}\n\n\t// TODO: use fan-like triangulation\n\tfunction drawEllipse(opt: DrawEllipseOpt) {\n\n\t\tif (opt.radiusX === undefined || opt.radiusY === undefined) {\n\t\t\tthrow new Error(\"drawEllipse() requires properties \\\"radiusX\\\" and \\\"radiusY\\\".\");\n\t\t}\n\n\t\tif (opt.radiusX === 0 || opt.radiusY === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tdrawPolygon({\n\t\t\t...opt,\n\t\t\tpts: getArcPts(\n\t\t\t\tvec2(0),\n\t\t\t\topt.radiusX,\n\t\t\t\topt.radiusY,\n\t\t\t\topt.start ?? 0,\n\t\t\t\topt.end ?? 360,\n\t\t\t\topt.resolution\n\t\t\t),\n\t\t\tradius: 0,\n\t\t});\n\n\t}\n\n\tfunction drawPolygon(opt: DrawPolygonOpt) {\n\n\t\tif (!opt.pts) {\n\t\t\tthrow new Error(\"drawPolygon() requires property \\\"pts\\\".\");\n\t\t}\n\n\t\tconst npts = opt.pts.length;\n\n\t\tif (npts < 3) {\n\t\t\treturn;\n\t\t}\n\n\t\tpushTransform();\n\t\tpushTranslate(opt.pos);\n\t\tpushScale(opt.scale);\n\t\tpushRotateZ(opt.angle);\n\t\tpushTranslate(opt.offset);\n\n\t\tif (opt.fill !== false) {\n\n\t\t\tconst color = opt.color ?? rgb();\n\n\t\t\tconst verts = opt.pts.map((pt) => ({\n\t\t\t\tpos: vec3(pt.x, pt.y, 0),\n\t\t\t\tuv: vec2(0, 0),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opt.opacity ?? 1,\n\t\t\t}));\n\n\t\t\t// TODO: better triangulation\n\t\t\tconst indices = [...Array(npts - 2).keys()]\n\t\t\t\t.map((n) => [0, n + 1, n + 2])\n\t\t\t\t.flat();\n\n\t\t\tdrawRaw(verts, opt.indices ?? indices, gfx.defTex, opt.shader, opt.uniform);\n\n\t\t}\n\n\t\tif (opt.outline) {\n\t\t\tdrawLines({\n\t\t\t\tpts: [ ...opt.pts, opt.pts[0] ],\n\t\t\t\tradius: opt.radius,\n\t\t\t\twidth: opt.outline.width,\n\t\t\t\tcolor: opt.outline.color,\n\t\t\t});\n\t\t}\n\n\t\tpopTransform();\n\n\t}\n\n\t// format text and return a list of chars with their calculated position\n\tfunction fmtText(opt: DrawTextOpt2): FormattedText {\n\n\t\tif (opt.text === undefined) {\n\t\t\tthrow new Error(\"fmtText() requires property \\\"text\\\".\");\n\t\t}\n\n\t\tconst font = opt.font;\n\t\tconst chars = (opt.text + \"\").split(\"\");\n\t\tconst gw = font.qw * font.tex.width;\n\t\tconst gh = font.qh * font.tex.height;\n\t\tconst size = opt.size || gh;\n\t\tconst scale = vec2(size / gh).scale(vec2(opt.scale || 1));\n\t\tconst cw = scale.x * gw;\n\t\tconst ch = scale.y * gh;\n\t\tlet curX = 0;\n\t\tlet th = ch;\n\t\tlet tw = 0;\n\t\tconst flines = [];\n\t\tlet curLine = [];\n\t\tlet lastSpace = null;\n\t\tlet cursor = 0;\n\n\t\twhile (cursor < chars.length) {\n\n\t\t\tlet char = chars[cursor];\n\n\t\t\t// check new line\n\t\t\tif (char === \"\\n\") {\n\t\t\t\t// always new line on '\\n'\n\t\t\t\tth += ch;\n\t\t\t\tcurX = 0;\n\t\t\t\tlastSpace = null;\n\t\t\t\tflines.push(curLine);\n\t\t\t\tcurLine = [];\n\t\t\t} else if ((opt.width ? (curX + cw > opt.width) : false)) {\n\t\t\t\t// new line on last word if width exceeds\n\t\t\t\tth += ch;\n\t\t\t\tcurX = 0;\n\t\t\t\tif (lastSpace != null) {\n\t\t\t\t\tcursor -= curLine.length - lastSpace;\n\t\t\t\t\tchar = chars[cursor];\n\t\t\t\t\tcurLine = curLine.slice(0, lastSpace);\n\t\t\t\t}\n\t\t\t\tlastSpace = null;\n\t\t\t\tflines.push(curLine);\n\t\t\t\tcurLine = [];\n\t\t\t}\n\n\t\t\t// push char\n\t\t\tif (char !== \"\\n\") {\n\t\t\t\tcurLine.push(char);\n\t\t\t\tcurX += cw;\n\t\t\t\tif (char === \" \") {\n\t\t\t\t\tlastSpace = curLine.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttw = Math.max(tw, curX);\n\t\t\tcursor++;\n\n\t\t}\n\n\t\tflines.push(curLine);\n\n\t\tif (opt.width) {\n\t\t\ttw = opt.width;\n\t\t}\n\n\t\t// whole text offset\n\t\tconst fchars = [];\n\t\tconst pos = vec2(opt.pos || 0);\n\t\tconst offset = originPt(opt.origin || DEF_ORIGIN).scale(0.5);\n\t\t// this math is complicated i forgot how it works instantly\n\t\tconst ox = -offset.x * cw - (offset.x + 0.5) * (tw - cw);\n\t\tconst oy = -offset.y * ch - (offset.y + 0.5) * (th - ch);\n\t\tlet idx = 0;\n\n\t\tflines.forEach((line, ln) => {\n\n\t\t\t// line offset\n\t\t\tconst oxl = (tw - line.length * cw) * (offset.x + 0.5);\n\n\t\t\tline.forEach((char, cn) => {\n\t\t\t\tconst qpos = font.map[char];\n\t\t\t\tconst x = cn * cw;\n\t\t\t\tconst y = ln * ch;\n\t\t\t\tidx += 1;\n\t\t\t\tif (qpos) {\n\t\t\t\t\tconst fchar = {\n\t\t\t\t\t\ttex: font.tex,\n\t\t\t\t\t\tquad: quad(qpos.x, qpos.y, font.qw, font.qh),\n\t\t\t\t\t\tch: char,\n\t\t\t\t\t\tpos: vec2(pos.x + x + ox + oxl, pos.y + y + oy),\n\t\t\t\t\t\topacity: opt.opacity,\n\t\t\t\t\t\tcolor: opt.color ?? rgb(255, 255, 255),\n\t\t\t\t\t\torigin: opt.origin,\n\t\t\t\t\t\tscale: scale,\n\t\t\t\t\t\tangle: 0,\n\t\t\t\t\t}\n\t\t\t\t\tif (opt.transform) {\n\t\t\t\t\t\tconst tr = opt.transform(idx, char) ?? {};\n\t\t\t\t\t\tif (tr.pos) fchar.pos = fchar.pos.add(tr.pos);\n\t\t\t\t\t\tif (tr.scale) fchar.scale = fchar.scale.scale(vec2(tr.scale));\n\t\t\t\t\t\tif (tr.angle) fchar.angle += tr.angle;\n\t\t\t\t\t\tif (tr.color) fchar.color = fchar.color.mult(tr.color);\n\t\t\t\t\t\tif (tr.opacity) fchar.opacity *= tr.opacity;\n\t\t\t\t\t}\n\t\t\t\t\tfchars.push(fchar);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn {\n\t\t\twidth: tw,\n\t\t\theight: th,\n\t\t\tchars: fchars,\n\t\t};\n\n\t}\n\n\tfunction drawText(opt: DrawTextOpt2) {\n\t\tdrawFmtText(fmtText(opt));\n\t}\n\n\t// TODO: rotation\n\tfunction drawFmtText(ftext: FormattedText) {\n\t\tfor (const ch of ftext.chars) {\n\t\t\tdrawUVQuad({\n\t\t\t\ttex: ch.tex,\n\t\t\t\twidth: ch.tex.width * ch.quad.w,\n\t\t\t\theight: ch.tex.height * ch.quad.h,\n\t\t\t\tpos: ch.pos,\n\t\t\t\tscale: ch.scale,\n\t\t\t\tangle: ch.angle,\n\t\t\t\tcolor: ch.color,\n\t\t\t\topacity: ch.opacity,\n\t\t\t\tquad: ch.quad,\n\t\t\t\t// TODO: topleft\n\t\t\t\torigin: \"center\",\n\t\t\t});\n\t\t}\n\t}\n\n//  \twindow.addEventListener(\"resize\", updateSize);\n\n\tfunction updateSize() {\n\t\tif (gopt.width && gopt.height && gopt.stretch) {\n\t\t\tif (gopt.letterbox) {\n\t\t\t\t// TODO: not working\n\t\t\t\tconst r1 = gl.drawingBufferWidth / gl.drawingBufferHeight;\n\t\t\t\tconst r2 = gopt.width / gopt.height;\n\t\t\t\tif (r1 > r2) {\n\t\t\t\t\tgfx.width = gopt.height * r1;\n\t\t\t\t\tgfx.height = gopt.height;\n\t\t\t\t\tconst sw = gl.drawingBufferHeight * r2;\n\t\t\t\t\tconst sh = gl.drawingBufferHeight;\n\t\t\t\t\tconst x = (gl.drawingBufferWidth - sw) / 2;\n\t\t\t\t\tgl.scissor(x, 0, sw, sh);\n\t\t\t\t\tgl.viewport(x, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\t\t\t\t} else {\n\t\t\t\t\tgfx.width = gopt.width;\n\t\t\t\t\tgfx.height = gopt.width / r1;\n\t\t\t\t\tconst sw = gl.drawingBufferWidth;\n\t\t\t\t\tconst sh = gl.drawingBufferWidth / r2;\n\t\t\t\t\tconst y = (gl.drawingBufferHeight - sh) / 2;\n\t\t\t\t\tgl.scissor(0, gl.drawingBufferHeight - sh - y, sw, sh);\n\t\t\t\t\tgl.viewport(0, -y, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tgfx.width = gopt.width;\n\t\t\t\tgfx.height = gopt.height;\n\t\t\t\tgl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\t\t\t}\n\t\t} else {\n\t\t\tgfx.width = gl.drawingBufferWidth / scale();\n\t\t\tgfx.height = gl.drawingBufferHeight / scale();\n\t\t\tgl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\t\t}\n\t}\n\n\t// get game width\n\tfunction width(): number {\n\t\treturn gfx.width;\n\t}\n\n\t// get game height\n\tfunction height(): number {\n\t\treturn gfx.height;\n\t}\n\n\tfunction scale(): number {\n\t\treturn gopt.scale ?? 1;\n\t}\n\n\tfunction background(): Color {\n\t\treturn gfx.background.clone();\n\t}\n\n\tupdateSize();\n\tframeStart();\n\tframeEnd();\n\n\treturn {\n\t\twidth,\n\t\theight,\n\t\tscale,\n\t\tmakeTex,\n\t\tmakeShader,\n\t\tmakeFont,\n\t\tdrawTexture,\n\t\tdrawText,\n\t\tdrawFmtText,\n\t\tdrawRect,\n\t\tdrawLine,\n\t\tdrawLines,\n\t\tdrawTriangle,\n\t\tdrawCircle,\n\t\tdrawEllipse,\n\t\tdrawPolygon,\n\t\tdrawUVQuad,\n\t\tfmtText,\n\t\tframeStart,\n\t\tframeEnd,\n\t\tpushTranslate,\n\t\tpushScale,\n\t\tpushRotateX,\n\t\tpushRotateY,\n\t\tpushRotateZ,\n\t\tpushTransform,\n\t\tpopTransform,\n\t\tapplyMatrix,\n\t\tdrawCalls,\n\t\tbackground,\n\t};\n\n}\n\nexport {\n\tGfx,\n\toriginPt,\n\tgfxInit,\n};\n","import {\n\tvec2,\n} from \"./math\";\n\nimport {\n\tKey,\n\tMouseButton,\n\tVec2,\n\tCursor,\n} from \"./types\";\n\ntype ButtonState =\n\t\"up\"\n\t| \"pressed\"\n\t| \"rpressed\"\n\t| \"down\"\n\t| \"released\"\n\t;\n\ntype AppOpt = {\n\twidth?: number,\n\theight?: number,\n\tstretch?: boolean,\n\tscale?: number,\n\tcrisp?: boolean,\n\tcanvas?: HTMLCanvasElement,\n\troot?: HTMLElement,\n\ttouchToMouse?: boolean,\n\taudioCtx?: AudioContext,\n};\n\ntype AppCtx = {\n\tcanvas: HTMLCanvasElement,\n\tmousePos: Vec2,\n\tmouseDeltaPos: Vec2,\n\tmouseStates: Record<string, ButtonState>,\n\tkeyStates: Record<string, ButtonState>,\n\tcharInputted: string[],\n\tisMouseMoved: boolean,\n\ttime: number,\n\tdt: number,\n\trealTime: number,\n\tskipTime: boolean,\n\tscale: number,\n\tisTouch: boolean,\n\tloopID: number | null,\n\tstopped: boolean,\n\tfps: number,\n\tfpsBuf: number[],\n\tfpsTimer: number,\n\tisKeyPressed: boolean,\n\tisKeyPressedRepeat: boolean,\n};\n\ntype App = {\n\tgl: WebGLRenderingContext,\n\tmousePos(): Vec2,\n\tmouseDeltaPos(): Vec2,\n\tisKeyDown(k?: Key): boolean,\n\tisKeyPressed(k?: Key): boolean,\n\tisKeyPressedRepeat(k?: Key): boolean,\n\tisKeyReleased(k?: Key): boolean,\n\tisMouseDown(m?: MouseButton): boolean,\n\tisMousePressed(m?: MouseButton): boolean,\n\tisMouseReleased(m?: MouseButton): boolean,\n\tisMouseMoved(m?: MouseButton): boolean,\n\tcharInputted(): string[],\n\tcursor(c?: Cursor): Cursor,\n\tfullscreen(f?: boolean): void,\n\tisFullscreen(): boolean,\n\tdt(): number,\n\tfps(): number,\n\ttime(): number,\n\tscreenshot(): string,\n\trun(f: () => void),\n\tquit(),\n\tisFocused(): boolean,\n\tfocus(),\n\tcanvas: HTMLCanvasElement,\n\tisTouch: boolean,\n\tscale: number,\n};\n\nfunction processBtnState(s: ButtonState): ButtonState {\n\tif (s === \"pressed\" || s === \"rpressed\") {\n\t\treturn \"down\";\n\t}\n\tif (s === \"released\") {\n\t\treturn \"up\";\n\t}\n\treturn s;\n}\n\nfunction enterFullscreen(el: HTMLElement) {\n\tif (el.requestFullscreen) el.requestFullscreen();\n\t// @ts-ignore\n\telse if (el.webkitRequestFullscreen) el.webkitRequestFullscreen();\n};\n\nfunction exitFullscreen() {\n\tif (document.exitFullscreen) document.exitFullscreen();\n\t// @ts-ignore\n\telse if (document.webkitExitFullScreen) document.webkitExitFullScreen();\n};\n\nfunction getFullscreenElement(): Element | void {\n\treturn document.fullscreenElement\n\t\t// @ts-ignore\n\t\t|| document.webkitFullscreenElement\n\t\t;\n};\n\nfunction appInit(gopt: AppOpt = {}): App {\n\n    const root = gopt.root ?? document.body;\n\n\tif (root === document.body) {\n\t\tdocument.body.style[\"width\"] = \"100%\";\n\t\tdocument.body.style[\"height\"] = \"100%\";\n\t\tdocument.body.style[\"margin\"] = \"0px\";\n\t\tdocument.documentElement.style[\"width\"] = \"100%\";\n\t\tdocument.documentElement.style[\"height\"] = \"100%\";\n\t}\n\n\tconst app: AppCtx = {\n\t\tcanvas: gopt.canvas ?? (() => {\n\t\t\tconst canvas = document.createElement(\"canvas\");\n\t\t\troot.appendChild(canvas);\n\t\t\treturn canvas;\n\t\t})(),\n\t\tkeyStates: {},\n\t\tcharInputted: [],\n\t\tisMouseMoved: false,\n\t\tisKeyPressed: false,\n\t\tisKeyPressedRepeat: false,\n\t\tmouseStates: {},\n\t\tmousePos: vec2(0, 0),\n\t\tmouseDeltaPos: vec2(0, 0),\n\t\ttime: 0,\n\t\trealTime: 0,\n\t\tskipTime: false,\n\t\tdt: 0.0,\n\t\tscale: gopt.scale ?? 1,\n\t\tisTouch: false,\n\t\tloopID: null,\n\t\tstopped: false,\n\t\tfps: 0,\n\t\tfpsBuf: [],\n\t\tfpsTimer: 0,\n\t};\n\n\tconst keyMap = {\n\t\t\"ArrowLeft\": \"left\",\n\t\t\"ArrowRight\": \"right\",\n\t\t\"ArrowUp\": \"up\",\n\t\t\"ArrowDown\": \"down\",\n\t\t\" \": \"space\",\n\t};\n\n\tconst preventDefaultKeys = [\n\t\t\"space\",\n\t\t\"left\",\n\t\t\"right\",\n\t\t\"up\",\n\t\t\"down\",\n\t\t\"tab\",\n\t\t\"f1\",\n\t\t\"f2\",\n\t\t\"f3\",\n\t\t\"f4\",\n\t\t\"f5\",\n\t\t\"f6\",\n\t\t\"f7\",\n\t\t\"f8\",\n\t\t\"f9\",\n\t\t\"f10\",\n\t\t\"f11\",\n\t\t\"s\",\n\t];\n\n\tif (gopt.width && gopt.height && !gopt.stretch) {\n\t\tapp.canvas.width = gopt.width * app.scale;\n\t\tapp.canvas.height = gopt.height * app.scale;\n\t} else {\n\t\tapp.canvas.width = app.canvas.parentElement.offsetWidth;\n\t\tapp.canvas.height = app.canvas.parentElement.offsetHeight;\n\t}\n\n\tconst styles = [\n\t\t\"outline: none\",\n\t\t\"cursor: default\",\n\t];\n\n\tif (gopt.crisp) {\n\t\tstyles.push(\"image-rendering: pixelated\");\n\t\tstyles.push(\"image-rendering: crisp-edges\");\n\t}\n\n\t// @ts-ignore\n\tapp.canvas.style = styles.join(\";\");\n\tapp.canvas.setAttribute(\"tabindex\", \"0\");\n\n\tconst gl = app.canvas\n\t\t.getContext(\"webgl\", {\n\t\t\tantialias: true,\n\t\t\tdepth: true,\n\t\t\tstencil: true,\n\t\t\talpha: true,\n\t\t\tpreserveDrawingBuffer: true,\n\t\t});\n\n\tapp.isTouch = (\"ontouchstart\" in window) || navigator.maxTouchPoints > 0;\n\n\tapp.canvas.addEventListener(\"mousemove\", (e) => {\n\t\tif (isFullscreen()) {\n\t\t\t// in fullscreen mode browser adds letter box to preserve original canvas aspect ratio, but won't give us the transformed mouse position\n\t\t\t// TODO\n\t\t\tapp.mousePos = vec2(e.offsetX, e.offsetY).scale(1 / app.scale);\n\t\t} else {\n\t\t\tapp.mousePos = vec2(e.offsetX, e.offsetY).scale(1 / app.scale);\n\t\t}\n\t\tapp.mouseDeltaPos = vec2(e.movementX, e.movementY).scale(1 / app.scale);\n\t\tapp.isMouseMoved = true;\n\t});\n\n\t// according to https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\n\tconst mouseButtons = [\n\t\t\"left\",\n\t\t\"middle\",\n\t\t\"right\",\n\t\t\"back\",\n\t\t\"forward\",\n\t];\n\n\tapp.canvas.addEventListener(\"mousedown\", (e) => {\n\t\tconst m = mouseButtons[e.button];\n\t\tif (m) {\n\t\t\tapp.mouseStates[m] = \"pressed\";\n\t\t}\n\t});\n\n\tapp.canvas.addEventListener(\"mouseup\", (e) => {\n\t\tconst m = mouseButtons[e.button];\n\t\tif (m) {\n\t\t\tapp.mouseStates[m] = \"released\";\n\t\t}\n\t});\n\n\tapp.canvas.addEventListener(\"keydown\", (e) => {\n\n\t\tconst k = keyMap[e.key] || e.key.toLowerCase();\n\n\t\tif (preventDefaultKeys.includes(k)) {\n\t\t\te.preventDefault();\n\t\t}\n\n\t\tif (k.length === 1) {\n\t\t\tapp.charInputted.push(e.key);\n\t\t}\n\n\t\tif (k === \"space\") {\n\t\t\tapp.charInputted.push(\" \");\n\t\t}\n\n\t\tif (e.repeat) {\n\t\t\tapp.isKeyPressedRepeat = true;\n\t\t\tapp.keyStates[k] = \"rpressed\";\n\t\t} else {\n\t\t\tapp.isKeyPressed = true;\n\t\t\tapp.keyStates[k] = \"pressed\";\n\t\t}\n\n\t});\n\n\tapp.canvas.addEventListener(\"keyup\", (e: KeyboardEvent) => {\n\t\tconst k = keyMap[e.key] || e.key.toLowerCase();\n\t\tapp.keyStates[k] = \"released\";\n\t});\n\n\tapp.canvas.addEventListener(\"touchstart\", (e) => {\n\t\tif (!gopt.touchToMouse) return;\n\t\t// disable long tap context menu\n\t\te.preventDefault();\n\t\tconst t = e.touches[0];\n\t\tapp.mousePos = vec2(t.clientX, t.clientY).scale(1 / app.scale);\n\t\tapp.mouseStates[\"left\"] = \"pressed\";\n\t});\n\n\tapp.canvas.addEventListener(\"touchmove\", (e) => {\n\t\tif (!gopt.touchToMouse) return;\n\t\t// disable scrolling\n\t\te.preventDefault();\n\t\tconst t = e.touches[0];\n\t\tapp.mousePos = vec2(t.clientX, t.clientY).scale(1 / app.scale);\n\t\tapp.isMouseMoved = true;\n\t});\n\n\tapp.canvas.addEventListener(\"touchend\", (e) => {\n\t\tif (!gopt.touchToMouse) return;\n\t\tapp.mouseStates[\"left\"] = \"released\";\n\t});\n\n\tapp.canvas.addEventListener(\"touchcancel\", (e) => {\n\t\tif (!gopt.touchToMouse) return;\n\t\tapp.mouseStates[\"left\"] = \"released\";\n\t});\n\n\tapp.canvas.addEventListener(\"contextmenu\", function (e) {\n\t\te.preventDefault();\n\t});\n\n\tdocument.addEventListener(\"visibilitychange\", () => {\n\t\tswitch (document.visibilityState) {\n\t\t\tcase \"visible\":\n\t\t\t\t// prevent a surge of dt() when switch back after the tab being hidden for a while\n\t\t\t\tapp.skipTime = true;\n\t\t\t\t// TODO: don't resume if debug.paused\n\t\t\t\tgopt.audioCtx?.resume();\n\t\t\t\tbreak;\n\t\t\tcase \"hidden\":\n\t\t\t\tgopt.audioCtx?.suspend();\n\t\t\t\tbreak;\n\t\t}\n\t});\n\n\t// TODO: not quite working\n//  \twindow.addEventListener(\"resize\", () => {\n//  \t\tif (!(gopt.width && gopt.height && !gopt.stretch)) {\n//  \t\t\tapp.canvas.width = app.canvas.parentElement.offsetWidth;\n//  \t\t\tapp.canvas.height = app.canvas.parentElement.offsetHeight;\n//  \t\t}\n//  \t});\n\n\tfunction mousePos(): Vec2 {\n\t\treturn app.mousePos.clone();\n\t}\n\n\tfunction mouseDeltaPos(): Vec2 {\n\t\treturn app.mouseDeltaPos.clone();\n\t}\n\n\tfunction isMousePressed(m = \"left\"): boolean {\n\t\treturn app.mouseStates[m] === \"pressed\";\n\t}\n\n\tfunction isMouseDown(m = \"left\"): boolean {\n\t\treturn app.mouseStates[m] === \"pressed\" || app.mouseStates[m] === \"down\";\n\t}\n\n\tfunction isMouseReleased(m = \"left\"): boolean {\n\t\treturn app.mouseStates[m] === \"released\";\n\t}\n\n\tfunction isMouseMoved(): boolean {\n\t\treturn app.isMouseMoved;\n\t}\n\n\tfunction isKeyPressed(k?: string): boolean {\n\t\tif (k === undefined) {\n\t\t\treturn app.isKeyPressed;\n\t\t} else {\n\t\t\treturn app.keyStates[k] === \"pressed\";\n\t\t}\n\t}\n\n\tfunction isKeyPressedRepeat(k: string): boolean {\n\t\tif (k === undefined) {\n\t\t\treturn app.isKeyPressedRepeat;\n\t\t} else {\n\t\t\treturn app.keyStates[k] === \"pressed\" || app.keyStates[k] === \"rpressed\";\n\t\t}\n\t}\n\n\tfunction isKeyDown(k: string): boolean {\n\t\treturn app.keyStates[k] === \"pressed\"\n\t\t\t|| app.keyStates[k] === \"rpressed\"\n\t\t\t|| app.keyStates[k] === \"down\";\n\t}\n\n\tfunction isKeyReleased(k: string): boolean {\n\t\treturn app.keyStates[k] === \"released\";\n\t}\n\n\tfunction charInputted(): string[] {\n\t\treturn [...app.charInputted];\n\t}\n\n\t// get delta time between last frame\n\tfunction dt(): number {\n\t\treturn app.dt;\n\t}\n\n\t// get current running time\n\tfunction time(): number {\n\t\treturn app.time;\n\t}\n\n\tfunction fps(): number {\n\t\treturn app.fps;\n\t}\n\n\t// get a base64 png image of canvas\n\tfunction screenshot(): string {\n\t\treturn app.canvas.toDataURL();\n\t}\n\n\t// TODO: custom cursor\n\tfunction cursor(c?: Cursor): Cursor {\n\t\tif (c) {\n\t\t\tapp.canvas.style.cursor = c;\n\t\t}\n\t\treturn app.canvas.style.cursor;\n\t}\n\n\tfunction fullscreen(f: boolean = true) {\n\t\tif (f) {\n\t\t\tenterFullscreen(app.canvas);\n\t\t} else {\n\t\t\texitFullscreen();\n\t\t}\n\t}\n\n\tfunction isFullscreen(): boolean {\n\t\treturn Boolean(getFullscreenElement());\n\t}\n\n\tfunction run(f: () => void) {\n\n\t\tconst frame = (t: number) => {\n\n\t\t\tif (document.visibilityState !== \"visible\") {\n\t\t\t\tapp.loopID = requestAnimationFrame(frame);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst realTime = t / 1000;\n\t\t\tconst realDt = realTime - app.realTime;\n\n\t\t\tapp.realTime = realTime;\n\n\t\t\tif (!app.skipTime) {\n\t\t\t\tapp.dt = realDt;\n\t\t\t\tapp.time += app.dt;\n\t\t\t\tapp.fpsBuf.push(1 / app.dt);\n\t\t\t\tapp.fpsTimer += app.dt;\n\t\t\t\tif (app.fpsTimer >= 1) {\n\t\t\t\t\tapp.fpsTimer = 0;\n\t\t\t\t\tapp.fps = Math.round(app.fpsBuf.reduce((a, b) => a + b) / app.fpsBuf.length);\n\t\t\t\t\tapp.fpsBuf = [];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tapp.skipTime = false;\n\n\t\t\tf();\n\n\t\t\tfor (const k in app.keyStates) {\n\t\t\t\tapp.keyStates[k] = processBtnState(app.keyStates[k]);\n\t\t\t}\n\n\t\t\tfor (const m in app.mouseStates) {\n\t\t\t\tapp.mouseStates[m] = processBtnState(app.mouseStates[m]);\n\t\t\t}\n\n\t\t\tapp.charInputted = [];\n\t\t\tapp.isMouseMoved = false;\n\t\t\tapp.isKeyPressed = false;\n\t\t\tapp.isKeyPressedRepeat = false;\n\t\t\tapp.loopID = requestAnimationFrame(frame);\n\n\t\t};\n\n\t\tapp.stopped = false;\n\t\tapp.loopID = requestAnimationFrame(frame);\n\n\t}\n\n\tfunction quit() {\n\t\tcancelAnimationFrame(app.loopID);\n\t\tapp.stopped = true;\n\t}\n\n\treturn {\n\t\tgl,\n\t\tmousePos,\n\t\tmouseDeltaPos,\n\t\tisKeyDown,\n\t\tisKeyPressed,\n\t\tisKeyPressedRepeat,\n\t\tisKeyReleased,\n\t\tisMouseDown,\n\t\tisMousePressed,\n\t\tisMouseReleased,\n\t\tisMouseMoved,\n\t\tcharInputted,\n\t\tcursor,\n\t\tdt,\n\t\ttime,\n\t\tfps,\n\t\tscreenshot,\n\t\trun,\n\t\tquit,\n\t\tisFocused: () => document.activeElement === app.canvas,\n\t\tfocus: () => app.canvas.focus(),\n\t\tcanvas: app.canvas,\n\t\tisTouch: app.isTouch,\n\t\tscale: app.scale,\n\t\tfullscreen,\n\t\tisFullscreen,\n\t};\n\n}\n\nexport {\n\tApp,\n\tappInit,\n};\n","// TODO: onend event\n\nimport {\n\tclamp,\n} from \"./math\";\n\nimport {\n\tSoundData,\n\tAudioPlay,\n\tAudioPlayOpt,\n} from \"./types\";\n\ntype Audio = {\n\tctx: AudioContext,\n\tmasterNode: GainNode,\n\tvolume(v: number): number,\n\tplay(snd: SoundData, opt?: AudioPlayOpt): AudioPlay,\n\tburp(opt?: AudioPlayOpt): AudioPlay,\n};\n\nconst MIN_GAIN = 0;\nconst MAX_GAIN = 3;\nconst MIN_SPEED = 0;\nconst MAX_SPEED = 3;\nconst MIN_DETUNE = -1200;\nconst MAX_DETUNE = 1200;\n\n// @ts-ignore\nimport burpBytes from \"./burp.mp3\";\n\nfunction audioInit(): Audio {\n\t// TODO handle audio unavailable\n\tconst ctx = new (window.AudioContext || (window as any).webkitAudioContext)() as AudioContext\n\tconst masterNode = ctx.createGain();\n\tmasterNode.connect(ctx.destination);\n\n\n\tconst burpSnd = {\n\t\tbuf: new AudioBuffer({\n\t\t\tlength: 1,\n\t\t\tnumberOfChannels: 1,\n\t\t\tsampleRate: 44100\n\t\t}),\n\t};\n\n\tctx.decodeAudioData(burpBytes.buffer.slice(0), (buf) => {\n\t\tburpSnd.buf = buf;\n\t}, () => {\n\t\tthrow new Error(\"failed to make burp\")\n\t});\n\n\t// get / set master volume\n\tfunction volume(v?: number): number {\n\t\tif (v !== undefined) {\n\t\t\tmasterNode.gain.value = clamp(v, MIN_GAIN, MAX_GAIN);\n\t\t}\n\t\treturn masterNode.gain.value;\n\t}\n\n\t// plays a sound, returns a control handle\n\tfunction play(\n\t\tsnd: SoundData,\n\t\topt: AudioPlayOpt = {\n\t\t\tloop: false,\n\t\t\tvolume: 1,\n\t\t\tspeed: 1,\n\t\t\tdetune: 0,\n\t\t\tseek: 0,\n\t\t},\n\t): AudioPlay {\n\n\t\tlet stopped = false;\n\t\tlet srcNode = ctx.createBufferSource();\n\n\t\tsrcNode.buffer = snd.buf;\n\t\tsrcNode.loop = opt.loop ? true : false;\n\n\t\tconst gainNode = ctx.createGain();\n\n\t\tsrcNode.connect(gainNode);\n\t\tgainNode.connect(masterNode);\n\n\t\tconst pos = opt.seek ?? 0;\n\n\t\tsrcNode.start(0, pos);\n\n\t\tlet startTime = ctx.currentTime - pos;\n\t\tlet stopTime: number | null = null;\n\n\t\tconst handle = {\n\n\t\t\tstop() {\n\t\t\t\tif (stopped) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.pause();\n\t\t\t\tstartTime = ctx.currentTime;\n\t\t\t},\n\n\t\t\tplay(seek?: number) {\n\n\t\t\t\tif (!stopped) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst oldNode = srcNode;\n\n\t\t\t\tsrcNode = ctx.createBufferSource();\n\t\t\t\tsrcNode.buffer = oldNode.buffer;\n\t\t\t\tsrcNode.loop = oldNode.loop;\n\t\t\t\tsrcNode.playbackRate.value = oldNode.playbackRate.value;\n\n\t\t\t\tif (srcNode.detune) {\n\t\t\t\t\tsrcNode.detune.value = oldNode.detune.value;\n\t\t\t\t}\n\n\t\t\t\tsrcNode.connect(gainNode);\n\n\t\t\t\tconst pos = seek ?? this.time();\n\n\t\t\t\tsrcNode.start(0, pos);\n\t\t\t\tstartTime = ctx.currentTime - pos;\n\t\t\t\tstopped = false;\n\t\t\t\tstopTime = null;\n\n\t\t\t},\n\n\t\t\tpause() {\n\t\t\t\tif (stopped) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tsrcNode.stop();\n\t\t\t\tstopped = true;\n\t\t\t\tstopTime = ctx.currentTime;\n\t\t\t},\n\n\t\t\tisPaused(): boolean {\n\t\t\t\treturn stopped;\n\t\t\t},\n\n\t\t\tpaused(): boolean {\n\t\t\t\treturn this.isPaused();\n\t\t\t},\n\n\t\t\tisStopped(): boolean {\n\t\t\t\treturn stopped;\n\t\t\t},\n\n\t\t\tstopped(): boolean {\n\t\t\t\treturn this.isStopped();\n\t\t\t},\n\n\t\t\t// TODO: affect time()\n\t\t\tspeed(val?: number): number {\n\t\t\t\tif (val !== undefined) {\n\t\t\t\t\tsrcNode.playbackRate.value = clamp(val, MIN_SPEED, MAX_SPEED);\n\t\t\t\t}\n\t\t\t\treturn srcNode.playbackRate.value;\n\t\t\t},\n\n\t\t\tdetune(val?: number): number {\n\t\t\t\tif (!srcNode.detune) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tif (val !== undefined) {\n\t\t\t\t\tsrcNode.detune.value = clamp(val, MIN_DETUNE, MAX_DETUNE);\n\t\t\t\t}\n\t\t\t\treturn srcNode.detune.value;\n\t\t\t},\n\n\t\t\tvolume(val?: number): number {\n\t\t\t\tif (val !== undefined) {\n\t\t\t\t\tgainNode.gain.value = clamp(val, MIN_GAIN, MAX_GAIN);\n\t\t\t\t}\n\t\t\t\treturn gainNode.gain.value;\n\t\t\t},\n\n\t\t\tloop() {\n\t\t\t\tsrcNode.loop = true;\n\t\t\t},\n\n\t\t\tunloop() {\n\t\t\t\tsrcNode.loop = false;\n\t\t\t},\n\n\t\t\tduration(): number {\n\t\t\t\treturn snd.buf.duration;\n\t\t\t},\n\n\t\t\ttime(): number {\n\t\t\t\tif (stopped) {\n\t\t\t\t\treturn stopTime - startTime;\n\t\t\t\t} else {\n\t\t\t\t\treturn ctx.currentTime - startTime;\n\t\t\t\t}\n\t\t\t},\n\n\t\t};\n\n\t\thandle.speed(opt.speed);\n\t\thandle.detune(opt.detune);\n\t\thandle.volume(opt.volume);\n\n\t\treturn handle;\n\n\t}\n\n\tfunction burp(opt?: AudioPlayOpt): AudioPlay {\n\t\treturn play(burpSnd, opt);\n\t}\n\n\treturn {\n\t\tctx,\n\t\tmasterNode,\n\t\tvolume,\n\t\tplay,\n\t\tburp,\n\t};\n\n}\n\nexport {\n\tAudio,\n\taudioInit,\n};\n","import {\n\tquad,\n} from \"./math\";\n\nimport {\n\tAudio,\n} from \"./audio\";\n\nimport {\n\tGfx,\n} from \"./gfx\";\n\nimport {\n\tSpriteData,\n\tSoundData,\n\tFontData,\n\tShaderData,\n\tSpriteLoadSrc,\n\tSpriteLoadOpt,\n\tSpriteAtlasData,\n\tFontLoadOpt,\n\tQuad,\n\tGfxTexData,\n} from \"./types\";\n\n// @ts-ignore\nimport apl386Src from \"./apl386.png\";\n// @ts-ignore\nimport apl386oSrc from \"./apl386o.png\";\n// @ts-ignore\nimport sinkSrc from \"./sink.png\";\n// @ts-ignore\nimport sinkoSrc from \"./sinko.png\";\n// @ts-ignore\nimport beanSrc from \"./bean.png\";\n\ntype AssetsOpt = {\n\terrHandler?: (err: string) => void,\n};\n\ntype LoaderID = number;\n\ntype AssetsCtx = {\n\tlastLoaderID: LoaderID,\n\tloadRoot: string,\n\t// TODO: just use a counter?\n\tloaders: Record<number, boolean>,\n\t// TODO: allow Promise<SoundData>?\n\tsprites: Record<string, SpriteData>,\n\tsounds: Record<string, SoundData>,\n\tfonts: Record<string, FontData>,\n\tshaders: Record<string, ShaderData>,\n};\n\ntype Assets = {\n\tloadRoot(path?: string): string,\n\tloadSprite(\n\t\tname: string | null,\n\t\tsrc: SpriteLoadSrc,\n\t\topt?: SpriteLoadOpt,\n\t): Promise<SpriteData>,\n\tloadSpriteAtlas(\n\t\tsrc: SpriteLoadSrc,\n\t\tdata: SpriteAtlasData,\n\t): Promise<Record<string, SpriteData>>,\n\tloadSpriteAtlas(\n\t\tsrc: SpriteLoadSrc,\n\t\turl: string,\n\t): Promise<Record<string, SpriteData>>,\n\tloadAseprite(\n\t\tname: string | null,\n\t\timgSrc: SpriteLoadSrc,\n\t\tjsonSrc: string\n\t): Promise<SpriteData>,\n\tloadPedit(name: string | null, src: string): Promise<SpriteData>,\n\tloadBean(name?: string): Promise<SpriteData>,\n\tloadSound(\n\t\tname: string | null,\n\t\tsrc: string,\n\t): Promise<SoundData>,\n\tloadFont(\n\t\tname: string | null,\n\t\tsrc: string,\n\t\tgw: number,\n\t\tgh: number,\n\t\topt?: FontLoadOpt,\n\t): Promise<FontData>,\n\tloadShader(\n\t\tname: string | null,\n\t\tvert?: string,\n\t\tfrag?: string,\n\t\tisUrl?: boolean,\n\t): Promise<ShaderData>,\n\tloadProgress(): number,\n\tload<T>(prom: Promise<T>),\n\tsprites: Record<string, SpriteData>,\n\tfonts: Record<string, FontData>,\n\tsounds: Record<string, SoundData>,\n\tshaders: Record<string, ShaderData>,\n};\n\nconst ASCII_CHARS = \" !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\";\nconst CP437_CHARS = \" ☺☻♥♦♣♠•◘○◙♂♀♪♫☼►◄↕‼¶§▬↨↑↓→←∟↔▲▼ !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~⌂ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■\";\n\nfunction loadImg(src: string): Promise<HTMLImageElement> {\n\tconst img = new Image();\n\timg.src = src;\n\timg.crossOrigin = \"anonymous\";\n\treturn new Promise<HTMLImageElement>((resolve, reject) => {\n\t\timg.onload = () => {\n\t\t\tresolve(img);\n\t\t};\n\t\timg.onerror = () => {\n\t\t\treject(`failed to load ${src}`);\n\t\t};\n\t});\n}\n\nfunction isDataUrl(src: string): boolean {\n\treturn src.startsWith(\"data:\");\n}\n\nfunction assetsInit(gfx: Gfx, audio: Audio, gopt: AssetsOpt = {}): Assets {\n\n\tconst assets: AssetsCtx = {\n\t\tlastLoaderID: 0,\n\t\tloadRoot: \"\",\n\t\tloaders: {},\n\t\tsprites: {},\n\t\tsounds: {},\n\t\tfonts: {},\n\t\tshaders: {},\n\t};\n\n\tfunction load<T>(prom: Promise<T>): Promise<T> {\n\t\tconst id = assets.lastLoaderID;\n\t\tassets.loaders[id] = false;\n\t\tassets.lastLoaderID++;\n\t\treturn prom\n\t\t\t.catch(gopt.errHandler ?? console.error)\n\t\t\t.finally(() => assets.loaders[id] = true) as Promise<T>;\n\t}\n\n\t// get current load progress\n\tfunction loadProgress(): number {\n\n\t\tlet total = 0;\n\t\tlet loaded = 0;\n\n\t\tfor (const id in assets.loaders) {\n\t\t\ttotal += 1;\n\t\t\tif (assets.loaders[id]) {\n\t\t\t\tloaded += 1;\n\t\t\t}\n\t\t}\n\n\t\treturn loaded / total;\n\n\t}\n\n\t// global load path prefix\n\tfunction loadRoot(path?: string): string {\n\t\tif (path !== undefined) {\n\t\t\tassets.loadRoot = path;\n\t\t}\n\t\treturn assets.loadRoot;\n\t}\n\n\t// TODO: support SpriteLoadSrc\n\tfunction loadFont(\n\t\tname: string | null,\n\t\tsrc: string,\n\t\tgw: number,\n\t\tgh: number,\n\t\topt: FontLoadOpt = {},\n\t): Promise<FontData> {\n\t\treturn load(new Promise<FontData>((resolve, reject) => {\n\t\t\tconst path = isDataUrl(src) ? src : assets.loadRoot + src;\n\t\t\tloadImg(path)\n\t\t\t\t.then((img) => {\n\t\t\t\t\tconst font = gfx.makeFont(gfx.makeTex(img, opt), gw, gh, opt.chars ?? ASCII_CHARS);\n\t\t\t\t\tif (name) {\n\t\t\t\t\t\tassets.fonts[name] = font;\n\t\t\t\t\t}\n\t\t\t\t\tresolve(font);\n\t\t\t\t})\n\t\t\t\t.catch(reject);\n\t\t}));\n\t}\n\n\tfunction getSprite(name: string): SpriteData | null {\n\t\treturn assets.sprites[name] ?? null;\n\t}\n\n\tfunction getSound(name: string): SoundData | null {\n\t\treturn assets.sounds[name] ?? null;\n\t}\n\n\tfunction getFont(name: string): FontData | null {\n\t\treturn assets.fonts[name] ?? null;\n\t}\n\n\tfunction getShader(name: string): ShaderData | null {\n\t\treturn assets.shaders[name] ?? null;\n\t}\n\n\tfunction slice(x = 1, y = 1, dx = 0, dy = 0, w = 1, h = 1): Quad[] {\n\t\tconst frames = [];\n\t\tconst qw = w / x;\n\t\tconst qh = h / y;\n\t\tfor (let j = 0; j < y; j++) {\n\t\t\tfor (let i = 0; i < x; i++) {\n\t\t\t\tframes.push(quad(\n\t\t\t\t\tdx + i * qw,\n\t\t\t\t\tdy + j * qh,\n\t\t\t\t\tqw,\n\t\t\t\t\tqh,\n\t\t\t\t));\n\t\t\t}\n\t\t}\n\t\treturn frames;\n\t}\n\n\tfunction loadSpriteAtlas(\n\t\tsrc: SpriteLoadSrc,\n\t\tdata: SpriteAtlasData | string\n\t): Promise<Record<string, SpriteData>> {\n\t\tif (typeof data === \"string\") {\n\t\t\t// TODO: this adds a new loader asyncly\n\t\t\treturn load(fetch(loadRoot() + data)\n\t\t\t\t.then((res) => res.json())\n\t\t\t\t.then((data2) => loadSpriteAtlas(src, data2)));\n\t\t}\n\t\treturn load(loadSprite(null, src).then((atlas) => {\n\t\t\tconst map = {};\n\t\t\tconst w = atlas.tex.width;\n\t\t\tconst h = atlas.tex.height;\n\t\t\tfor (const name in data) {\n\t\t\t\tconst info = data[name];\n\t\t\t\tconst spr = {\n\t\t\t\t\ttex: atlas.tex,\n\t\t\t\t\tframes: slice(info.sliceX, info.sliceY, info.x / w, info.y / h, info.width / w, info.height / h),\n\t\t\t\t\tanims: info.anims,\n\t\t\t\t}\n\t\t\t\tassets.sprites[name] = spr;\n\t\t\t\tmap[name] = spr;\n\t\t\t}\n\t\t\treturn map;\n\t\t}));\n\t}\n\n\t// load a sprite to asset manager\n\tfunction loadSprite(\n\t\tname: string | null,\n\t\tsrc: SpriteLoadSrc,\n\t\topt: SpriteLoadOpt = {\n\t\t\tsliceX: 1,\n\t\t\tsliceY: 1,\n\t\t\tanims: {},\n\t\t},\n\t): Promise<SpriteData> {\n\n\t\t// synchronously load sprite from local pixel data\n\t\tfunction loadRawSprite(\n\t\t\tname: string | null,\n\t\t\tsrc: GfxTexData,\n\t\t\topt: SpriteLoadOpt = {\n\t\t\t\tsliceX: 1,\n\t\t\t\tsliceY: 1,\n\t\t\t\tanims: {},\n\t\t\t},\n\t\t) {\n\n\t\t\tconst tex = gfx.makeTex(src, opt);\n\t\t\tconst frames = slice(opt.sliceX || 1, opt.sliceY || 1);\n\n\t\t\tconst sprite = {\n\t\t\t\ttex: tex,\n\t\t\t\tframes: frames,\n\t\t\t\tanims: opt.anims || {},\n\t\t\t};\n\n\t\t\tif (name) {\n\t\t\t\tassets.sprites[name] = sprite;\n\t\t\t}\n\n\t\t\treturn sprite;\n\n\t\t}\n\n\t\treturn load(new Promise<SpriteData>((resolve, reject) => {\n\n\t\t\tif (!src) {\n\t\t\t\treturn reject(`expected sprite src for \"${name}\"`);\n\t\t\t}\n\n\t\t\t// from url\n\t\t\tif (typeof(src) === \"string\") {\n\t\t\t\tconst path = isDataUrl(src) ? src : assets.loadRoot + src;\n\t\t\t\tloadImg(path)\n\t\t\t\t\t.then((img) => resolve(loadRawSprite(name, img, opt)))\n\t\t\t\t\t.catch(reject);\n\t\t\t} else {\n\t\t\t\tresolve(loadRawSprite(name, src, opt));\n\t\t\t}\n\n\t\t}));\n\n\t}\n\n\t// TODO: accept raw json\n\tfunction loadPedit(name: string, src: string): Promise<SpriteData> {\n\n\t\treturn load(new Promise<SpriteData>((resolve, reject) => {\n\n\t\t\tfetch(loadRoot() + src)\n\t\t\t\t.then((res) => res.json())\n\t\t\t\t.then(async (data) => {\n\n\t\t\t\t\tconst images = await Promise.all(data.frames.map(loadImg));\n\t\t\t\t\tconst canvas = document.createElement(\"canvas\");\n\t\t\t\t\tcanvas.width = data.width;\n\t\t\t\t\tcanvas.height = data.height * data.frames.length;\n\n\t\t\t\t\tconst ctx = canvas.getContext(\"2d\");\n\n\t\t\t\t\timages.forEach((img: HTMLImageElement, i) => {\n\t\t\t\t\t\tctx.drawImage(img, 0, i * data.height);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn loadSprite(name, canvas, {\n\t\t\t\t\t\tsliceY: data.frames.length,\n\t\t\t\t\t\tanims: data.anims,\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.then(resolve)\n\t\t\t\t.catch(reject)\n\t\t\t\t;\n\n\t\t}));\n\n\t}\n\n\t// TODO: accept raw json\n\tfunction loadAseprite(\n\t\tname: string | null,\n\t\timgSrc: SpriteLoadSrc,\n\t\tjsonSrc: string\n\t): Promise<SpriteData> {\n\n\t\treturn load(new Promise<SpriteData>((resolve, reject) => {\n\n\t\t\tconst jsonPath = loadRoot() + jsonSrc;\n\n\t\t\tloadSprite(name, imgSrc)\n\t\t\t\t.then((sprite: SpriteData) => {\n\t\t\t\t\tfetch(jsonPath)\n\t\t\t\t\t\t.then((res) => res.json())\n\t\t\t\t\t\t.then((data) => {\n\t\t\t\t\t\t\tconst size = data.meta.size;\n\t\t\t\t\t\t\tsprite.frames = data.frames.map((f: any) => {\n\t\t\t\t\t\t\t\treturn quad(\n\t\t\t\t\t\t\t\t\tf.frame.x / size.w,\n\t\t\t\t\t\t\t\t\tf.frame.y / size.h,\n\t\t\t\t\t\t\t\t\tf.frame.w / size.w,\n\t\t\t\t\t\t\t\t\tf.frame.h / size.h,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tfor (const anim of data.meta.frameTags) {\n\t\t\t\t\t\t\t\tif (anim.from === anim.to) {\n\t\t\t\t\t\t\t\t\tsprite.anims[anim.name] = anim.from\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsprite.anims[anim.name] = {\n\t\t\t\t\t\t\t\t\t\tfrom: anim.from,\n\t\t\t\t\t\t\t\t\t\tto: anim.to,\n\t\t\t\t\t\t\t\t\t\t// TODO: let users define these\n\t\t\t\t\t\t\t\t\t\tspeed: 10,\n\t\t\t\t\t\t\t\t\t\tloop: true,\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tresolve(sprite);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(reject)\n\t\t\t\t\t\t;\n\t\t\t\t})\n\t\t\t\t.catch(reject);\n\n\t\t}));\n\n\t}\n\n\tfunction loadShader(\n\t\tname: string | null,\n\t\tvert?: string,\n\t\tfrag?: string,\n\t\tisUrl: boolean = false,\n\t): Promise<ShaderData> {\n\n\t\tfunction loadRawShader(\n\t\t\tname: string | null,\n\t\t\tvert: string | null,\n\t\t\tfrag: string | null,\n\t\t): ShaderData {\n\t\t\tconst shader = gfx.makeShader(vert, frag);\n\t\t\tif (name) {\n\t\t\t\tassets.shaders[name] = shader;\n\t\t\t}\n\t\t\treturn shader;\n\t\t}\n\n\t\treturn load(new Promise<ShaderData>((resolve, reject) => {\n\n\t\t\tif (!vert && !frag) {\n\t\t\t\treturn reject(\"no shader\");\n\t\t\t}\n\n\t\t\tfunction resolveUrl(url?: string) {\n\t\t\t\treturn url ?\n\t\t\t\t\tfetch(assets.loadRoot + url)\n\t\t\t\t\t\t.then((r) => {\n\t\t\t\t\t\t\tif (r.ok) {\n\t\t\t\t\t\t\t\treturn r.text();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrow new Error(`failed to load ${url}`)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(reject)\n\t\t\t\t\t: new Promise((r) => r(null));\n\t\t\t}\n\n\t\t\tif (isUrl) {\n\t\t\t\tPromise.all([resolveUrl(vert), resolveUrl(frag)])\n\t\t\t\t\t.then(([vcode, fcode]: [string | null, string | null]) => {\n\t\t\t\t\t\tresolve(loadRawShader(name, vcode, fcode));\n\t\t\t\t\t})\n\t\t\t\t\t.catch(reject);\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tresolve(loadRawShader(name, vert, frag));\n\t\t\t\t} catch (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}));\n\n\t}\n\n\t// TODO: accept dataurl\n\t// load a sound to asset manager\n\tfunction loadSound(\n\t\tname: string | null,\n\t\tsrc: string,\n\t): Promise<SoundData> {\n\n\t\tconst url = assets.loadRoot + src;\n\n\t\treturn load(new Promise<SoundData>((resolve, reject) => {\n\n\t\t\tif (!src) {\n\t\t\t\treturn reject(`expected sound src for \"${name}\"`);\n\t\t\t}\n\n\t\t\t// from url\n\t\t\tif (typeof(src) === \"string\") {\n\t\t\t\tfetch(url)\n\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\tif (res.ok) {\n\t\t\t\t\t\t\treturn res.arrayBuffer();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error(`failed to load ${url}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.then((data) => {\n\t\t\t\t\t\treturn new Promise((resolve2, reject2) => {\n\t\t\t\t\t\t\taudio.ctx.decodeAudioData(data, resolve2, reject2);\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.then((buf: AudioBuffer) => {\n\t\t\t\t\t\tconst snd = {\n\t\t\t\t\t\t\tbuf: buf,\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (name) {\n\t\t\t\t\t\t\tassets.sounds[name] = snd;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresolve(snd);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(reject);\n\t\t\t}\n\n\t\t}));\n\n\t}\n\n\tfunction loadBean(name: string = \"bean\"): Promise<SpriteData> {\n\t\treturn loadSprite(name, beanSrc);\n\t}\n\n\tloadFont(\n\t\t\"apl386\",\n\t\tapl386Src,\n\t\t45,\n\t\t74,\n\t);\n\n\tloadFont(\n\t\t\"apl386o\",\n\t\tapl386oSrc,\n\t\t45,\n\t\t74,\n\t);\n\n\tloadFont(\n\t\t\"sink\",\n\t\tsinkSrc,\n\t\t6,\n\t\t8,\n\t\t{\n\t\t\tchars: `█☺☻♥♦♣♠●○▪□■◘♪♫≡►◄⌂ÞÀß×¥↑↓→←◌●▼▲ !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_\\`abcdefghijklmnopqrstuvwxyz{|}~Χ░▒▓ḀḁḂ│┬┤┌┐ḃḄ┼ḅḆḇḈḉḊḋḌ─├┴└┘ḍḎ⁞ḏḐḑḒḓḔḕḖḗḘ▄ḙḚḛḜ…ḝḞḟḠḡḢḣḤḥḦ▌▐ḧḨḩḪḫḬḭḮḯḰḱḲḳḴḵḶḷḸḹḺḻḼḽḾḿṀṁṂṃṄṅṆṇṈṉṊṋṌṍṎṏṐṑṒṓṔṕṖṗṘṙṚṛṜṝṞṟṠṡṢṣṤṥṦṧṨṩṪṫṬṭṮṯṰṱṲṳṴṵṶṷṸṹṺṻṼ`,\n\t\t}\n\t);\n\n\tloadFont(\n\t\t\"sinko\",\n\t\tsinkoSrc,\n\t\t8,\n\t\t10,\n\t);\n\n\treturn {\n\t\tloadRoot,\n\t\tloadSprite,\n\t\tloadSpriteAtlas,\n\t\tloadPedit,\n\t\tloadAseprite,\n\t\tloadBean,\n\t\tloadSound,\n\t\tloadFont,\n\t\tloadShader,\n\t\tloadProgress,\n\t\tload,\n\t\tsprites: assets.sprites,\n\t\tfonts: assets.fonts,\n\t\tsounds: assets.sounds,\n\t\tshaders: assets.shaders,\n\t};\n\n}\n\nexport {\n\tAssetsOpt,\n\tAssets,\n\tassetsInit,\n\tASCII_CHARS,\n\tCP437_CHARS,\n};\n","import {\n\tvec2,\n\trgb,\n\tmap,\n} from \"./math\";\n\nimport {\n\tAssets,\n} from \"./assets\";\n\nimport {\n\tGfx,\n} from \"./gfx\";\n\ntype Log = {\n\ttype: \"info\" | \"error\",\n\tmsg: string,\n};\n\ntype LoggerOpt = {\n\tmax?: number,\n\ttime?: () => number,\n};\n\ntype Logger = {\n\tdraw(),\n\tinfo(msg: string),\n\terror(msg: string),\n\tclear(),\n};\n\nconst LOG_SIZE = 16;\n\nfunction loggerInit(gfx: Gfx, assets: Assets, opt: LoggerOpt = {}): Logger {\n\n\tlet logs: Log[] = [];\n\tconst max = opt.max ?? 1;\n\n\t// TODO: draw rects first to reduce draw calls\n\tfunction draw() {\n\n\t\tif (logs.length > max) {\n\t\t\tlogs = logs.slice(0, max);\n\t\t}\n\n\t\tconst pos = vec2(0, gfx.height());\n\n\t\tlogs.forEach((log, i) => {\n\n\t\t\tconst txtAlpha = map(i, 0, max, 1, 0.5);\n\t\t\tconst bgAlpha = map(i, 0, max, 0.8, 0.2);\n\n\t\t\tconst col = (() => {\n\t\t\t\tswitch (log.type) {\n\t\t\t\t\tcase \"info\": return rgb(255, 255, 255);\n\t\t\t\t\tcase \"error\": return rgb(255, 0, 127);\n\t\t\t\t}\n\t\t\t})();\n\n\t\t\tconst ftext = gfx.fmtText({\n\t\t\t\ttext: log.msg,\n\t\t\t\tfont: assets.fonts[\"sink\"],\n\t\t\t\tpos: pos,\n\t\t\t\torigin: \"botleft\",\n\t\t\t\tcolor: col,\n\t\t\t\tsize: LOG_SIZE / gfx.scale(),\n\t\t\t\twidth: gfx.width(),\n\t\t\t\topacity: txtAlpha,\n\t\t\t});\n\n\t\t\tgfx.drawRect({\n\t\t\t\tpos: pos,\n\t\t\t\twidth: ftext.width,\n\t\t\t\theight: ftext.height,\n\t\t\t\torigin: \"botleft\",\n\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\topacity: bgAlpha,\n\t\t\t});\n\n\t\t\tgfx.drawFmtText(ftext);\n\t\t\tpos.y -= ftext.height;\n\n\t\t});\n\n\t}\n\n\tfunction error(msg: string) {\n\t\tlogs.unshift({\n\t\t\ttype: \"error\",\n\t\t\tmsg: msg,\n\t\t});\n\t}\n\n\tfunction info(msg: string) {\n\t\tlogs.unshift({\n\t\t\ttype: \"info\",\n\t\t\tmsg: msg,\n\t\t});\n\t}\n\n\tfunction clear() {\n\t\tlogs = [];\n\t}\n\n\treturn {\n\t\tinfo,\n\t\terror,\n\t\tdraw,\n\t\tclear,\n\t};\n\n}\n\nexport {\n\tloggerInit,\n};\n","// explosion\n\nimport {\n\tCompList,\n\tVec2,\n\tComp,\n\tKaboomCtx,\n} from \"../types\";\n\n// @ts-ignore\nimport kaSrc from \"./ka.png\";\n// @ts-ignore\nimport boomSrc from \"./boom.png\";\n\ninterface BoomOpt {\n\t/**\n\t * Animation speed.\n\t */\n\tspeed?: number,\n\t/**\n\t * Scale.\n\t */\n\tscale?: number,\n\t/**\n\t * Additional ka components.\n\t */\n\tkaComps?: () => CompList<any>,\n\t/**\n\t * Additional boom components.\n\t */\n\tboomComps?: () => CompList<any>,\n}\n\ninterface Kaboom {\n\t/**\n\t * Remove kaboom.\n\t */\n\tdestroy(): void,\n}\n\ninterface ExplodeComp extends Comp {\n}\n\ninterface KaboomPlug {\n\taddKaboom(pos: Vec2, opt?: BoomOpt): Kaboom,\n}\n\nexport default (k: KaboomCtx) => {\n\n\tfunction explode(speed: number = 2, size: number = 1): ExplodeComp {\n\t\tlet time = 0;\n\t\treturn {\n\t\t\tid: \"explode\",\n\t\t\trequire: [ \"scale\", ],\n\t\t\tupdate() {\n\t\t\t\tconst s = Math.sin(time * speed) * size;\n\t\t\t\tif (s < 0) {\n\t\t\t\t\tk.destroy(this);\n\t\t\t\t}\n\t\t\t\tthis.scale = k.vec2(s);\n\t\t\t\ttime += k.dt();\n\t\t\t},\n\t\t};\n\t}\n\n\tlet kaSprite = null;\n\tlet boomSprite = null;\n\n\tk.loadSprite(null, kaSrc).then((spr) => kaSprite = spr);\n\tk.loadSprite(null, boomSrc).then((spr) => boomSprite = spr);\n\n\tfunction addKaboom(pos: Vec2, opt: BoomOpt = {}): Kaboom {\n\n\t\tconst speed = (opt.speed || 1) * 5;\n\t\tconst scale = opt.scale || 1;\n\n\t\tconst boom = k.add([\n\t\t\tk.pos(pos),\n\t\t\tk.sprite(boomSprite),\n\t\t\tk.scale(0),\n\t\t\tk.stay(),\n\t\t\tk.origin(\"center\"),\n\t\t\texplode(speed, scale),\n\t\t\t...(opt.boomComps ?? (() => []))(),\n\t\t]);\n\n\t\tconst ka = k.add([\n\t\t\tk.pos(pos),\n\t\t\tk.sprite(kaSprite),\n\t\t\tk.scale(0),\n\t\t\tk.stay(),\n\t\t\tk.origin(\"center\"),\n\t\t\tk.timer(0.4 / speed, () => ka.use(explode(speed, scale))),\n\t\t\t...(opt.kaComps ?? (() => []))(),\n\t\t]);\n\n\t\treturn {\n\t\t\tdestroy() {\n\t\t\t\tk.destroy(ka);\n\t\t\t\tk.destroy(boom);\n\t\t\t},\n\t\t};\n\n\t}\n\n\treturn {\n\t\taddKaboom,\n\t};\n\n};\n","import {\n\tvec2,\n\tmat4,\n\tquad,\n\trgb,\n\thsl2rgb,\n\trng,\n\trand,\n\trandi,\n\trandSeed,\n\tchance,\n\tchoose,\n\tclamp,\n\tlerp,\n\tmap,\n\tmapc,\n\twave,\n\ttestAreaRect,\n\ttestAreaLine,\n\ttestAreaCircle,\n\ttestAreaPolygon,\n\ttestAreaPoint,\n\ttestAreaArea,\n\ttestLineLineT,\n\ttestRectRect2,\n\ttestLineLine,\n\ttestRectRect,\n\ttestRectLine,\n\ttestRectPoint,\n\ttestPolygonPoint,\n\ttestLinePolygon,\n\ttestPolygonPolygon,\n\ttestCircleCircle,\n\ttestCirclePoint,\n\ttestRectPolygon,\n\tminkDiff,\n\tdir,\n\tdeg2rad,\n\trad2deg,\n\tisVec2,\n} from \"./math\";\n\nimport {\n\toriginPt,\n\tgfxInit,\n} from \"./gfx\";\n\nimport {\n\tappInit,\n} from \"./app\";\n\nimport {\n\taudioInit,\n} from \"./audio\";\n\nimport {\n\tassetsInit,\n\tASCII_CHARS,\n\tCP437_CHARS,\n} from \"./assets\";\n\nimport {\n\tloggerInit,\n} from \"./logger\";\n\nimport {\n\tIDList,\n\tdownloadURL,\n\tdownloadBlob,\n} from \"./utils\";\n\nimport {\n\tKaboomCtx,\n\tKaboomOpt,\n\tAudioPlay,\n\tAudioPlayOpt,\n\tVec2,\n\tMat4,\n\tDrawSpriteOpt,\n\tDrawTextOpt,\n\tGameObj,\n\tTimer,\n\tEventCanceller,\n\tSceneID,\n\tSceneDef,\n\tCompList,\n\tComp,\n\tTag,\n\tKey,\n\tMouseButton,\n\tTouchID,\n\tCollision,\n\tPosComp,\n\tScaleComp,\n\tRotateComp,\n\tColorComp,\n\tOpacityComp,\n\tOrigin,\n\tOriginComp,\n\tLayerComp,\n\tZComp,\n\tFollowComp,\n\tMoveComp,\n\tCleanupComp,\n\tAreaCompOpt,\n\tAreaComp,\n\tArea,\n\tSpriteData,\n\tSpriteComp,\n\tSpriteCompOpt,\n\tGfxTexture,\n\tQuad,\n\tSpriteAnimPlayOpt,\n\tTextComp,\n\tTextCompOpt,\n\tRectComp,\n\tRectCompOpt,\n\tUVQuadComp,\n\tCircleComp,\n\tColor,\n\tOutlineComp,\n\tTimerComp,\n\tBodyComp,\n\tBodyCompOpt,\n\tUniform,\n\tShaderComp,\n\tSolidComp,\n\tFixedComp,\n\tStayComp,\n\tHealthComp,\n\tLifespanComp,\n\tLifespanCompOpt,\n\tStateComp,\n\tDebug,\n\tKaboomPlugin,\n\tMergeObj,\n\tLevel,\n\tLevelOpt,\n\tCursor,\n\tRecording,\n} from \"./types\";\n\nimport kaboomPlugin from \"./plugins/kaboom\";\n\nexport default (gopt: KaboomOpt = {}): KaboomCtx => {\n\nconst audio = audioInit();\n\nconst app = appInit({\n\twidth: gopt.width,\n\theight: gopt.height,\n\tscale: gopt.scale,\n\tcrisp: gopt.crisp,\n\tcanvas: gopt.canvas,\n\troot: gopt.root,\n\tstretch: gopt.stretch,\n\ttouchToMouse: gopt.touchToMouse ?? true,\n\taudioCtx: audio.ctx,\n});\n\nconst gfx = gfxInit(app.gl, {\n\tbackground: gopt.background ? rgb(gopt.background) : undefined,\n\twidth: gopt.width,\n\theight: gopt.height,\n\tscale: gopt.scale,\n\ttexFilter: gopt.texFilter,\n\tstretch: gopt.stretch,\n\tletterbox: gopt.letterbox,\n});\n\nconst {\n\twidth,\n\theight,\n} = gfx;\n\nconst assets = assetsInit(gfx, audio, {\n\terrHandler: (err: string) => {\n\t\tlogger.error(err);\n\t},\n});\n\nconst logger = loggerInit(gfx, assets, {\n\tmax: gopt.logMax,\n});\n\nconst DEF_FONT = \"apl386o\";\nconst DBG_FONT = \"sink\";\n\nfunction dt() {\n\treturn app.dt() * debug.timeScale;\n}\n\n// TODO: clean\nfunction play(id: string, opt: AudioPlayOpt = {}): AudioPlay {\n\tconst pb = audio.play({\n\t\tbuf: new AudioBuffer({\n\t\t\tlength: 1,\n\t\t\tnumberOfChannels: 1,\n\t\t\tsampleRate: 44100\n\t\t}),\n\t});\n\tonLoad(() => {\n\t\tconst snd = assets.sounds[id];\n\t\tif (!snd) {\n\t\t\tthrow new Error(`sound not found: \"${id}\"`);\n\t\t}\n\t\tconst pb2 = audio.play(snd, opt);\n\t\tfor (const k in pb2) {\n\t\t\tpb[k] = pb2[k];\n\t\t}\n\t});\n\treturn pb;\n}\n\nfunction mousePos(): Vec2 {\n\treturn app.mousePos();\n}\n\nfunction mouseWorldPos(): Vec2 {\n\treturn game.camMousePos;\n}\n\n// wrapper around gfx.drawTexture to integrate with sprite assets mananger / frame anim\nfunction drawSprite(opt: DrawSpriteOpt) {\n\tif (!opt.sprite) {\n\t\tthrow new Error(`drawSprite() requires property \"sprite\"`);\n\t}\n\tconst spr = (() => {\n\t\tif (typeof opt.sprite === \"string\") {\n\t\t\treturn assets.sprites[opt.sprite];\n\t\t} else {\n\t\t\treturn opt.sprite;\n\t\t}\n\t})();\n\tif (!spr) {\n\t\tthrow new Error(`sprite not found: \"${opt.sprite}\"`);\n\t}\n\tconst q = spr.frames[opt.frame ?? 0];\n\tif (!q) {\n\t\tthrow new Error(`frame not found: ${opt.frame ?? 0}`);\n\t}\n\tgfx.drawTexture({\n\t\t...opt,\n\t\ttex: spr.tex,\n\t\tquad: q.scale(opt.quad || quad(0, 0, 1, 1)),\n\t});\n}\n\n// wrapper around gfx.drawText to integrate with font assets mananger / default font\nfunction drawText(opt: DrawTextOpt) {\n\t// @ts-ignore\n\tconst fid = opt.font ?? DEF_FONT;\n\tconst font = assets.fonts[fid];\n\tif (!font) {\n\t\tthrow new Error(`font not found: ${fid}`);\n\t}\n\tgfx.drawText({\n\t\t...opt,\n\t\tfont: font,\n\t});\n}\n\nconst DEF_GRAVITY = 1600;\nconst DEF_ORIGIN = \"topleft\";\n\ninterface Game {\n\tloaded: boolean,\n\tevents: Record<string, IDList<() => void>>,\n\tobjEvents: Record<string, IDList<TaggedEvent>>,\n\tobjs: IDList<GameObj>,\n\ttimers: IDList<Timer>,\n\tcam: Camera,\n\tcamMousePos: Vec2,\n\tcamMatrix: Mat4,\n\tgravity: number,\n\tlayers: Record<string, number>,\n\tdefLayer: string | null,\n\ton<F>(ev: string, cb: F): EventCanceller,\n\ttrigger(ev: string, ...args),\n\tscenes: Record<SceneID, SceneDef>,\n\tpaused: boolean,\n};\n\ntype Camera = {\n\tpos: Vec2,\n\tscale: Vec2,\n\tangle: number,\n\tshake: number,\n};\n\ntype Layer = {\n\torder: number,\n}\n\ntype TaggedEvent = {\n\ttag: string,\n\tcb: (...args) => void,\n};\n\ntype KeyEvent = {\n\tkey: string,\n\tcb(),\n};\n\ntype MouseInputEvent = {\n\tcb(),\n};\n\ntype LoadEvent = () => void;\ntype NextFrameEvent = () => void;\ntype MouseEvent = () => void;\ntype CharEvent = (ch: string) => void;\n\nconst game: Game = {\n\n\tloaded: false,\n\n\t// event callbacks\n\tevents: {},\n\tobjEvents: {},\n\n\t// in game pool\n\tobjs: new IDList(),\n\ttimers: new IDList(),\n\n\t// cam\n\tcam: {\n\t\tpos: center(),\n\t\tscale: vec2(1),\n\t\tangle: 0,\n\t\tshake: 0,\n\t},\n\n\tcamMousePos: app.mousePos(),\n\tcamMatrix: mat4(),\n\n\t// misc\n\tlayers: {},\n\tdefLayer: null,\n\tgravity: DEF_GRAVITY,\n\n\ton<F>(ev: string, cb: F): EventCanceller {\n\t\tif (!this.events[ev]) {\n\t\t\tthis.events[ev] = new IDList();\n\t\t}\n\t\treturn this.events[ev].pushd(cb);\n\t},\n\n\ttrigger(ev: string, ...args) {\n\t\tif (this.events[ev]) {\n\t\t\tthis.events[ev].forEach((cb) => cb(...args));\n\t\t}\n\t},\n\n\tscenes: {},\n\tpaused: false,\n\n};\n\nfunction layers(list: string[], def?: string) {\n\n\tlist.forEach((name, idx) => {\n\t\tgame.layers[name] = idx + 1;\n\t});\n\n\tif (def) {\n\t\tgame.defLayer = def;\n\t}\n\n}\n\nfunction camPos(...pos): Vec2 {\n\tif (pos.length > 0) {\n\t\tgame.cam.pos = vec2(...pos);\n\t}\n\treturn game.cam.pos.clone();\n}\n\nfunction camScale(...scale): Vec2 {\n\tif (scale.length > 0) {\n\t\tgame.cam.scale = vec2(...scale);\n\t}\n\treturn game.cam.scale.clone();\n}\n\nfunction camRot(angle: number): number {\n\tif (angle !== undefined) {\n\t\tgame.cam.angle = angle;\n\t}\n\treturn game.cam.angle;\n}\n\nfunction shake(intensity: number = 12) {\n\tgame.cam.shake = intensity;\n}\n\nfunction toScreen(p: Vec2): Vec2 {\n\treturn game.camMatrix.multVec2(p);\n}\n\nfunction toWorld(p: Vec2): Vec2 {\n\treturn game.camMatrix.invert().multVec2(p);\n}\n\nconst COMP_DESC = new Set([\n\t\"id\",\n\t\"require\",\n]);\n\nconst COMP_EVENTS = new Set([\n\t\"add\",\n\t\"load\",\n\t\"update\",\n\t\"draw\",\n\t\"destroy\",\n\t\"inspect\",\n]);\n\nfunction make<T>(comps: CompList<T>): GameObj<T> {\n\n\tconst compStates = new Map();\n\tconst customState = {};\n\tconst events = {};\n\n\tconst obj = {\n\n\t\t_id: null,\n\t\thidden: false,\n\t\tpaused: false,\n\n\t\t// use a comp, or tag\n\t\tuse(comp: Comp | Tag) {\n\n\t\t\tif (!comp) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// tag\n\t\t\tif (typeof comp === \"string\") {\n\t\t\t\treturn this.use({\n\t\t\t\t\tid: comp\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// clear if overwrite\n\t\t\tif (comp.id) {\n\t\t\t\tthis.unuse(comp.id);\n\t\t\t\tcompStates.set(comp.id, {});\n\t\t\t}\n\n\t\t\t// state source location\n\t\t\tconst state = comp.id ? compStates.get(comp.id) : customState;\n\n\t\t\tstate.cleanups = [];\n\n\t\t\tfor (const k in comp) {\n\n\t\t\t\tif (COMP_DESC.has(k)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// event / custom method\n\t\t\t\tif (typeof comp[k] === \"function\") {\n\t\t\t\t\tconst func = comp[k].bind(this);\n\t\t\t\t\tif (COMP_EVENTS.has(k)) {\n\t\t\t\t\t\tstate.cleanups.push(this.on(k, func));\n\t\t\t\t\t\tstate[k] = func;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstate[k] = func;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tstate[k] = comp[k];\n\t\t\t\t}\n\n\t\t\t\tif (this[k] === undefined) {\n\t\t\t\t\t// assign comp fields to game obj\n\t\t\t\t\tObject.defineProperty(this, k, {\n\t\t\t\t\t\tget: () => state[k],\n\t\t\t\t\t\tset: (val) => state[k] = val,\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst checkDeps = () => {\n\t\t\t\tif (!comp.require) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfor (const dep of comp.require) {\n\t\t\t\t\tif (!this.c(dep)) {\n\t\t\t\t\t\tthrow new Error(`comp '${comp.id}' requires comp '${dep}'`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// check deps or run add event\n\t\t\tif (this.exists()) {\n\t\t\t\tif (comp.add) {\n\t\t\t\t\tcomp.add.call(this);\n\t\t\t\t}\n\t\t\t\tif (comp.load) {\n\t\t\t\t\tonLoad(() => comp.load.call(this));\n\t\t\t\t}\n\t\t\t\tcheckDeps();\n\t\t\t} else {\n\t\t\t\tif (comp.require) {\n\t\t\t\t\tstate.cleanups.push(this.on(\"add\", () => {\n\t\t\t\t\t\tcheckDeps();\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\tunuse(id: Tag) {\n\t\t\tif (compStates.has(id)) {\n\t\t\t\tconst comp = compStates.get(id);\n\t\t\t\tcomp.cleanups.forEach((f) => f());\n\t\t\t\tfor (const k in comp) {\n\t\t\t\t\tdelete comp[k];\n\t\t\t\t}\n\t\t\t}\n\t\t\tcompStates.delete(id);\n\t\t},\n\n\t\tc(id: Tag): Comp {\n\t\t\treturn compStates.get(id);\n\t\t},\n\n\t\texists(): boolean {\n\t\t\treturn this._id !== null;\n\t\t},\n\n\t\tis(tag: Tag | Tag[]): boolean {\n\t\t\tif (tag === \"*\") {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (Array.isArray(tag)) {\n\t\t\t\tfor (const t of tag) {\n\t\t\t\t\tif (!this.c(t)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn this.c(tag) != null;\n\t\t\t}\n\t\t},\n\n\t\ton(ev: string, cb): EventCanceller {\n\t\t\tif (!events[ev]) {\n\t\t\t\tevents[ev] = new IDList();\n\t\t\t}\n\t\t\treturn events[ev].pushd(cb);\n\t\t},\n\n\t\taction(...args): EventCanceller {\n\t\t\treturn this.onUpdate(...args);\n\t\t},\n\n\t\ttrigger(ev: string, ...args): void {\n\n\t\t\tif (events[ev]) {\n\t\t\t\tevents[ev].forEach((cb) => cb.call(this, ...args));\n\t\t\t}\n\n\t\t\tconst gEvents = game.objEvents[ev];\n\n\t\t\tif (gEvents) {\n\t\t\t\tgEvents.forEach((e) => {\n\t\t\t\t\tif (this.is(e.tag)) {\n\t\t\t\t\t\te.cb(this, ...args);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t},\n\n\t\tdestroy() {\n\n\t\t\tif (!this.exists()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.trigger(\"destroy\");\n\t\t\tgame.objs.delete(this._id);\n\t\t\tthis._id = null;\n\n\t\t},\n\n\t\tinspect() {\n\t\t\tconst info = {};\n\t\t\tfor (const [tag, comp] of compStates) {\n\t\t\t\tinfo[tag] = comp.inspect ? comp.inspect() : null;\n\t\t\t}\n\t\t\treturn info;\n\t\t},\n\n\t\tonUpdate(cb: () => void): EventCanceller {\n\t\t\treturn this.on(\"update\", cb);\n\t\t},\n\n\t\tonDraw(cb: () => void): EventCanceller {\n\t\t\treturn this.on(\"draw\", cb);\n\t\t},\n\n\t\tonDestroy(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"destroy\", action);\n\t\t},\n\n\t};\n\n\tfor (const comp of comps) {\n\t\tobj.use(comp);\n\t}\n\n\treturn obj as unknown as GameObj<T>;\n\n}\n\nfunction add<T>(comps: CompList<T>): GameObj<T> {\n\tconst obj = make(comps);\n\tobj._id = game.objs.push(obj);\n\tobj.trigger(\"add\");\n\tonLoad(() => obj.trigger(\"load\"));\n\treturn obj;\n}\n\nfunction readd(obj: GameObj): GameObj {\n\tif (!obj.exists()) {\n\t\treturn;\n\t}\n\tgame.objs.delete(obj._id);\n\tobj._id = game.objs.push(obj);\n\treturn obj;\n}\n\n// add an event to a tag\nfunction on(event: string, tag: Tag, cb: (obj: GameObj, ...args) => void): EventCanceller {\n\tif (!game.objEvents[event]) {\n\t\tgame.objEvents[event] = new IDList();\n\t}\n\treturn game.objEvents[event].pushd({\n\t\ttag: tag,\n\t\tcb: cb,\n\t});\n}\n\n// TODO: detect if is currently in another action?\n// add update event to a tag or global update\nfunction onUpdate(tag: Tag | (() => void), cb?: (obj: GameObj) => void): EventCanceller {\n\tif (typeof tag === \"function\" && cb === undefined) {\n\t\treturn add([{ update: tag, }]).destroy;\n\t} else if (typeof tag === \"string\") {\n\t\treturn on(\"update\", tag, cb);\n\t}\n}\n\n// add draw event to a tag or global draw\nfunction onDraw(tag: Tag | (() => void), cb?: (obj: GameObj) => void) {\n\tif (typeof tag === \"function\" && cb === undefined) {\n\t\treturn add([{ draw: tag, }]).destroy;\n\t} else if (typeof tag === \"string\") {\n\t\treturn on(\"draw\", tag, cb);\n\t}\n}\n\n// add an event that runs with objs with t1 collides with objs with t2\nfunction onCollide(\n\tt1: Tag,\n\tt2: Tag,\n\tf: (a: GameObj, b: GameObj, col?: Collision) => void,\n): EventCanceller {\n\tconst e1 = on(\"collide\", t1, (a, b, col) => b.is(t2) && f(a, b, col));\n\tconst e2 = on(\"collide\", t2, (a, b, col) => b.is(t1) && f(b, a, col));\n\tconst e3 = onUpdate(t1, (o1: GameObj) => {\n\t\tif (!o1.area) {\n\t\t\tthrow new Error(\"onCollide() requires the object to have area() component\");\n\t\t}\n\t\to1._checkCollisions(t2, (o2) => {\n\t\t\tf(o1, o2);\n\t\t});\n\t});\n\treturn () => [e1, e2, e3].forEach((f) => f());\n}\n\n// add an event that runs when objs with tag t is clicked\nfunction onClick(tag: Tag | (() => void), cb?: (obj: GameObj) => void): EventCanceller {\n\tif (typeof tag === \"function\") {\n\t\treturn onMousePress(tag);\n\t} else {\n\t\treturn onUpdate(tag, (o: GameObj) => {\n\t\t\tif (!o.area) throw new Error(\"onClick() requires the object to have area() component\");\n\t\t\tif (o.isClicked()) {\n\t\t\t\tcb(o);\n\t\t\t}\n\t\t});\n\t}\n}\n\n// add an event that runs when objs with tag t is hovered\nfunction onHover(t: string, onHover: (obj: GameObj) => void, onNotHover?: (obj: GameObj) => void): EventCanceller {\n\treturn onUpdate(t, (o: GameObj) => {\n\t\tif (!o.area) throw new Error(\"onHover() requires the object to have area() component\");\n\t\tif (o.isHovering()) {\n\t\t\tonHover(o);\n\t\t} else {\n\t\t\tif (onNotHover) {\n\t\t\t\tonNotHover(o);\n\t\t\t}\n\t\t}\n\t});\n}\n\n// add an event that'd be run after t\nfunction wait(t: number, f?: () => void): Promise<void> {\n\treturn new Promise((resolve) => {\n\t\tgame.timers.push({\n\t\t\ttime: t,\n\t\t\taction: () => {\n\t\t\t\tif (f) {\n\t\t\t\t\tf();\n\t\t\t\t}\n\t\t\t\tresolve();\n\t\t\t},\n\t\t});\n\t});\n}\n\n// add an event that's run every t seconds\nfunction loop(t: number, f: () => void): EventCanceller {\n\n\tlet stopped = false;\n\n\tconst newF = () => {\n\t\tif (stopped) {\n\t\t\treturn;\n\t\t}\n\t\tf();\n\t\twait(t, newF);\n\t};\n\n\tnewF();\n\n\treturn () => stopped = true;\n\n}\n\n// input callbacks\nfunction onKeyDown(k: Key | Key[], f: () => void): EventCanceller {\n\tif (Array.isArray(k)) {\n\t\tconst cancellers = k.map((key) => onKeyDown(key, f));\n\t\treturn () => cancellers.forEach((cb) => cb());\n\t} {\n\t\treturn game.on(\"input\", () => app.isKeyDown(k) && f());\n\t}\n}\n\nfunction onKeyPress(k: Key | Key[] | (() => void), f?: () => void): EventCanceller {\n\tif (Array.isArray(k)) {\n\t\tconst cancellers = k.map((key) => onKeyPress(key, f));\n\t\treturn () => cancellers.forEach((cb) => cb());\n\t} else if (typeof k === \"function\") {\n\t\treturn game.on(\"input\", () => app.isKeyPressed() && k());\n\t} else {\n\t\treturn game.on(\"input\", () => app.isKeyPressed(k) && f());\n\t}\n}\n\nfunction onKeyPressRepeat(k: Key | Key[] | (() => void), f?: () => void): EventCanceller {\n\tif (Array.isArray(k)) {\n\t\tconst cancellers = k.map((key) => onKeyPressRepeat(key, f));\n\t\treturn () => cancellers.forEach((cb) => cb());\n\t} else if (typeof k === \"function\") {\n\t\treturn game.on(\"input\", () => app.isKeyPressed() && k());\n\t} else {\n\t\treturn game.on(\"input\", () => app.isKeyPressedRepeat(k) && f());\n\t}\n}\n\nfunction onKeyRelease(k: Key | Key[] | (() => void), f?: () => void): EventCanceller {\n\tif (Array.isArray(k)) {\n\t\tconst cancellers = k.map((key) => onKeyRelease(key, f));\n\t\treturn () => cancellers.forEach((cb) => cb());\n\t} else if (typeof k === \"function\") {\n\t\treturn game.on(\"input\", () => app.isKeyReleased() && k());\n\t} else {\n\t\treturn game.on(\"input\", () => app.isKeyReleased(k) && f());\n\t}\n}\n\nfunction onMouseDown(\n\tm: MouseButton | ((pos?: Vec2) => void),\n\taction?: (pos?: Vec2) => void\n): EventCanceller {\n\tif (typeof m === \"function\") {\n\t\treturn game.on(\"input\", () => app.isMouseDown() && m(mousePos()));\n\t} else {\n\t\treturn game.on(\"input\", () => app.isMouseDown(m) && action(mousePos()));\n\t}\n}\n\nfunction onMousePress(\n\tm: MouseButton | ((pos?: Vec2) => void),\n\taction?: (pos?: Vec2) => void\n): EventCanceller {\n\tif (typeof m === \"function\") {\n\t\treturn game.on(\"input\", () => app.isMousePressed() && m(mousePos()));\n\t} else {\n\t\treturn game.on(\"input\", () => app.isMousePressed(m) && action(mousePos()));\n\t}\n}\n\nfunction onMouseRelease(\n\tm: MouseButton | ((pos?: Vec2) => void),\n\taction?: (pos?: Vec2) => void\n): EventCanceller {\n\tif (typeof m === \"function\") {\n\t\treturn game.on(\"input\", () => app.isMouseReleased() && m(mousePos()));\n\t} else {\n\t\treturn game.on(\"input\", () => app.isMouseReleased(m) && action(mousePos()));\n\t}\n}\n\nfunction onMouseMove(f: (pos: Vec2, dpos: Vec2) => void): EventCanceller {\n\treturn game.on(\"input\", () => app.isMouseMoved() && f(mousePos(), app.mouseDeltaPos()));\n}\n\nfunction onCharInput(f: (ch: string) => void): EventCanceller {\n\treturn game.on(\"input\", () => app.charInputted().forEach((ch) => f(ch)));\n}\n\n// TODO: put this in app.ts's and handle in game loop\napp.canvas.addEventListener(\"touchstart\", (e) => {\n\t[...e.changedTouches].forEach((t) => {\n\t\tgame.trigger(\"onTouchStart\", t.identifier, vec2(t.clientX, t.clientY).scale(1 / app.scale));\n\t});\n});\n\napp.canvas.addEventListener(\"touchmove\", (e) => {\n\t[...e.changedTouches].forEach((t) => {\n\t\tgame.trigger(\"onTouchMove\", t.identifier, vec2(t.clientX, t.clientY).scale(1 / app.scale));\n\t});\n});\n\napp.canvas.addEventListener(\"touchmove\", (e) => {\n\t[...e.changedTouches].forEach((t) => {\n\t\tgame.trigger(\"onTouchEnd\", t.identifier, vec2(t.clientX, t.clientY).scale(1 / app.scale));\n\t});\n});\n\nfunction onTouchStart(f: (id: TouchID, pos: Vec2) => void): EventCanceller {\n\treturn game.on(\"onTouchStart\", f);\n}\n\nfunction onTouchMove(f: (id: TouchID, pos: Vec2) => void): EventCanceller {\n\treturn game.on(\"onTouchMove\", f);\n}\n\nfunction onTouchEnd(f: (id: TouchID, pos: Vec2) => void): EventCanceller {\n\treturn game.on(\"onTouchEnd\", f);\n}\n\nfunction enterDebugMode() {\n\n\tonKeyPress(\"f1\", () => {\n\t\tdebug.inspect = !debug.inspect;\n\t});\n\n\tonKeyPress(\"f2\", () => {\n\t\tdebug.clearLog();\n\t});\n\n\tonKeyPress(\"f8\", () => {\n\t\tdebug.paused = !debug.paused;\n\t});\n\n\tonKeyPress(\"f7\", () => {\n\t\tdebug.timeScale = toFixed(clamp(debug.timeScale - 0.2, 0, 2), 1);\n\t});\n\n\tonKeyPress(\"f9\", () => {\n\t\tdebug.timeScale = toFixed(clamp(debug.timeScale + 0.2, 0, 2), 1);\n\t});\n\n\tonKeyPress(\"f10\", () => {\n\t\tdebug.stepFrame();\n\t});\n\n\tonKeyPress(\"f5\", () => {\n\t\tdownloadURL(app.screenshot(), \"kaboom.png\");\n\t});\n\n\tonKeyPress(\"f6\", () => {\n\t\tif (debug.curRecording) {\n\t\t\tdebug.curRecording.download();\n\t\t\tdebug.curRecording = null;\n\t\t} else {\n\t\t\tdebug.curRecording = record();\n\t\t}\n\t});\n\n}\n\nfunction enterBurpMode() {\n\tonKeyPress(\"b\", audio.burp);\n}\n\n// TODO: cache sorted list\n// get all objects with tag\nfunction get(t?: Tag | Tag[]): GameObj[] {\n\n\tconst objs = [...game.objs.values()].sort((o1, o2) => {\n\n\t\tconst l1 = game.layers[o1.layer ?? game.defLayer] ?? 0;\n\t\tconst l2 = game.layers[o2.layer ?? game.defLayer] ?? 0;\n\n\t\t// if on same layer, use \"z\" comp to decide which is on top, if given\n\t\tif (l1 == l2) {\n\t\t\treturn (o1.z ?? 0) - (o2.z ?? 0);\n\t\t} else {\n\t\t\treturn l1 - l2;\n\t\t}\n\n\t});\n\n\tif (!t) {\n\t\treturn objs;\n\t} else {\n\t\treturn objs.filter(obj => obj.is(t));\n\t}\n\n}\n\n// apply a function to all objects currently in game with tag t\nfunction every<T>(t: Tag | Tag[] | ((obj: GameObj) => T), f?: (obj: GameObj) => T) {\n\tif (typeof t === \"function\" && f === undefined) {\n\t\treturn get().forEach((obj) => obj.exists() && t(obj));\n\t} else if (typeof t === \"string\" || Array.isArray(t)) {\n\t\treturn get(t).forEach((obj) => obj.exists() && f(obj));\n\t}\n}\n\n// every but in reverse order\nfunction revery<T>(t: Tag | Tag[] | ((obj: GameObj) => T), f?: (obj: GameObj) => T) {\n\tif (typeof t === \"function\" && f === undefined) {\n\t\treturn get().reverse().forEach((obj) => obj.exists() && t(obj));\n\t} else if (typeof t === \"string\" || Array.isArray(t)) {\n\t\treturn get(t).reverse().forEach((obj) => obj.exists() && f(obj));\n\t}\n}\n\n// destroy an obj\nfunction destroy(obj: GameObj) {\n\tobj.destroy();\n}\n\n// destroy all obj with the tag\nfunction destroyAll(t: string) {\n\tevery(t, destroy);\n}\n\n// get / set gravity\nfunction gravity(g?: number): number {\n\tif (g !== undefined) {\n\t\tgame.gravity = g;\n\t}\n\treturn game.gravity;\n}\n\nfunction regCursor(c: Cursor, draw: string | ((mpos: Vec2) => void)) {\n\t// TODO\n}\n\nfunction makeCollision(target: GameObj<any>, dis: Vec2): Collision {\n\treturn {\n\t\ttarget: target,\n\t\tdisplacement: dis,\n\t\tisTop: () => dis.y > 0,\n\t\tisBottom: () => dis.y < 0,\n\t\tisLeft: () => dis.x > 0,\n\t\tisRight: () => dis.x < 0,\n\t};\n}\n\n// TODO: manage global velocity here?\nfunction pos(...args): PosComp {\n\n\treturn {\n\n\t\tid: \"pos\",\n\t\tpos: vec2(...args),\n\n\t\t// TODO: clean\n\t\tmoveBy(...args): Collision | null {\n\n\t\t\tconst p = vec2(...args);\n\t\t\tlet dx = p.x;\n\t\t\tlet dy = p.y;\n\t\t\tlet col = null;\n\n\t\t\tif (this.solid && this.area?.shape === \"rect\") {\n\n\t\t\t\tlet a1 = this.worldArea();\n\n\t\t\t\t// TODO: definitely shouln't iterate through all solid objs\n\t\t\t\tevery((other) => {\n\n\t\t\t\t\t// make sure we still exist, don't check with self, and only\n\t\t\t\t\t// check with other solid objects\n\t\t\t\t\tif (\n\t\t\t\t\t\t!this.exists()\n\t\t\t\t\t\t|| other === this\n\t\t\t\t\t\t|| !other.solid\n\t\t\t\t\t\t|| other.area?.shape !== \"rect\"\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst a2 = other.worldArea();\n\t\t\t\t\tlet md = minkDiff(a2, a1);\n\n\t\t\t\t\t// if they're already overlapping, push them away first\n\t\t\t\t\tif (testRectPoint(md, vec2(0))) {\n\n\t\t\t\t\t\tlet dist = Math.min(\n\t\t\t\t\t\t\tMath.abs(md.p1.x),\n\t\t\t\t\t\t\tMath.abs(md.p2.x),\n\t\t\t\t\t\t\tMath.abs(md.p1.y),\n\t\t\t\t\t\t\tMath.abs(md.p2.y),\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst res = (() => {\n\t\t\t\t\t\t\tswitch (dist) {\n\t\t\t\t\t\t\t\tcase Math.abs(md.p1.x): return vec2(dist, 0);\n\t\t\t\t\t\t\t\tcase Math.abs(md.p2.x): return vec2(-dist, 0);\n\t\t\t\t\t\t\t\tcase Math.abs(md.p1.y): return vec2(0, dist);\n\t\t\t\t\t\t\t\tcase Math.abs(md.p2.y): return vec2(0, -dist);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})();\n\n\t\t\t\t\t\tthis.pos = this.pos.sub(res);\n\n\t\t\t\t\t\t// calculate new mink diff\n\t\t\t\t\t\ta1 = this.worldArea();\n\t\t\t\t\t\tmd = minkDiff(a2, a1);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst ray = { p1: vec2(0), p2: vec2(dx, dy) };\n\t\t\t\t\tlet minT = 1;\n\t\t\t\t\tconst p1 = md.p1;\n\t\t\t\t\tconst p2 = vec2(md.p1.x, md.p2.y);\n\t\t\t\t\tconst p3 = md.p2;\n\t\t\t\t\tconst p4 = vec2(md.p2.x, md.p1.y);\n\t\t\t\t\tlet numCols = 0;\n\t\t\t\t\tconst lines = {\n\t\t\t\t\t\t\"right\": { p1: p1, p2: p2, },\n\t\t\t\t\t\t\"top\": { p1: p2, p2: p3, },\n\t\t\t\t\t\t\"left\": { p1: p3, p2: p4, },\n\t\t\t\t\t\t\"bottom\": { p1: p4, p2: p1, },\n\t\t\t\t\t};\n\n\t\t\t\t\tfor (const s in lines) {\n\t\t\t\t\t\tconst line = lines[s];\n\t\t\t\t\t\t// if moving along a side, we forgive\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t(dx === 0 && line.p1.x === 0 && line.p2.x === 0)\n\t\t\t\t\t\t\t||\n\t\t\t\t\t\t\t(dy === 0 && line.p1.y === 0 && line.p2.y === 0)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tminT = 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst t = testLineLineT(ray, line);\n\t\t\t\t\t\tif (t != null) {\n\t\t\t\t\t\t\tnumCols++;\n\t\t\t\t\t\t\tif (t < minT) {\n\t\t\t\t\t\t\t\tminT = t;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// if moving away, we forgive\n\t\t\t\t\tif (\n\t\t\t\t\t\tminT < 1\n\t\t\t\t\t\t&& !(minT === 0 && numCols == 1 && !testRectPoint(md, vec2(dx, dy)))\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst dis = vec2(-dx * (1 - minT), -dy * (1 - minT));\n\t\t\t\t\t\tdx *= minT;\n\t\t\t\t\t\tdy *= minT;\n\t\t\t\t\t\tcol = makeCollision(other, dis);\n\t\t\t\t\t}\n\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t\tthis.pos.x += dx;\n\t\t\tthis.pos.y += dy;\n\n\t\t\tif (col) {\n\t\t\t\tthis.trigger(\"collide\", col.target, col);\n\t\t\t\tcol.target.trigger(\"collide\", this, makeCollision(this, col.displacement.scale(-1)));\n\t\t\t}\n\n\t\t\treturn col;\n\n\t\t},\n\n\t\t// move with velocity (pixels per second)\n\t\tmove(...args): Collision | null {\n\t\t\treturn this.moveBy(vec2(...args).scale(dt()));\n\t\t},\n\n\t\t// move to a destination, with optional speed\n\t\tmoveTo(...args) {\n\t\t\tif (typeof args[0] === \"number\" && typeof args[1] === \"number\") {\n\t\t\t\treturn this.moveTo(vec2(args[0], args[1]), args[2]);\n\t\t\t}\n\t\t\tconst dest = args[0];\n\t\t\tconst speed = args[1];\n\t\t\tif (speed === undefined) {\n\t\t\t\tthis.pos = vec2(dest);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst diff = dest.sub(this.pos);\n\t\t\tif (diff.len() <= speed * dt()) {\n\t\t\t\tthis.pos = vec2(dest);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.move(diff.unit().scale(speed));\n\t\t},\n\n\t\t// get the screen position (transformed by camera)\n\t\tscreenPos(): Vec2 {\n\t\t\tif (this.fixed) {\n\t\t\t\treturn this.pos;\n\t\t\t} else {\n\t\t\t\treturn toScreen(this.pos);\n\t\t\t}\n\t\t},\n\n\t\tinspect() {\n\t\t\treturn `(${Math.round(this.pos.x)}, ${Math.round(this.pos.y)})`;\n\t\t},\n\n\t};\n\n};\n\n// TODO: allow single number assignment\nfunction scale(...args): ScaleComp {\n\tif (args.length === 0) {\n\t\treturn scale(1);\n\t}\n\treturn {\n\t\tid: \"scale\",\n\t\tscale: vec2(...args),\n\t\tscaleTo(...args) {\n\t\t\tthis.scale = vec2(...args);\n\t\t},\n\t\tinspect() {\n\t\t\tif (typeof this.scale === \"number\") {\n\t\t\t\treturn `${toFixed(this.scale, 2)}`;\n\t\t\t} else {\n\t\t\t\treturn `(${toFixed(this.scale.x, 2)}, ${toFixed(this.scale.y, 2)})`;\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction rotate(r: number): RotateComp {\n\treturn {\n\t\tid: \"rotate\",\n\t\tangle: r ?? 0,\n\t\tinspect() {\n\t\t\treturn `${Math.round(this.angle)}`;\n\t\t},\n\t};\n}\n\nfunction color(...args): ColorComp {\n\treturn {\n\t\tid: \"color\",\n\t\tcolor: rgb(...args),\n\t\tinspect() {\n\t\t\treturn this.color.str();\n\t\t},\n\t};\n}\n\nfunction toFixed(n: number, f: number) {\n\treturn Number(n.toFixed(f));\n}\n\nfunction opacity(a: number): OpacityComp {\n\treturn {\n\t\tid: \"opacity\",\n\t\topacity: a ?? 1,\n\t\tinspect() {\n\t\t\treturn `${toFixed(this.opacity, 2)}`;\n\t\t},\n\t};\n}\n\nfunction origin(o: Origin | Vec2): OriginComp {\n\tif (!o) {\n\t\tthrow new Error(\"please define an origin\");\n\t}\n\treturn {\n\t\tid: \"origin\",\n\t\torigin: o,\n\t\tinspect() {\n\t\t\tif (typeof this.origin === \"string\") {\n\t\t\t\treturn this.origin;\n\t\t\t} else {\n\t\t\t\treturn this.origin.str();\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction layer(l: string): LayerComp {\n\treturn {\n\t\tid: \"layer\",\n\t\tlayer: l,\n\t\tinspect() {\n\t\t\treturn this.layer ?? game.defLayer;\n\t\t},\n\t};\n}\n\nfunction z(z: number): ZComp {\n\treturn {\n\t\tid: \"z\",\n\t\tz: z,\n\t\tinspect() {\n\t\t\treturn `${this.z}`;\n\t\t},\n\t};\n}\n\nfunction follow(obj: GameObj, offset?: Vec2): FollowComp {\n\treturn {\n\t\tid: \"follow\",\n\t\trequire: [ \"pos\", ],\n\t\tfollow: {\n\t\t\tobj: obj,\n\t\t\toffset: offset ?? vec2(0),\n\t\t},\n\t\tadd() {\n\t\t\tif (obj.exists()) {\n\t\t\t\tthis.pos = this.follow.obj.pos.add(this.follow.offset);\n\t\t\t}\n\t\t},\n\t\tupdate() {\n\t\t\tif (obj.exists()) {\n\t\t\t\tthis.pos = this.follow.obj.pos.add(this.follow.offset);\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction move(direction: number | Vec2, speed: number): MoveComp {\n\tconst d = typeof direction === \"number\" ? dir(direction) : direction.unit();\n\treturn {\n\t\tid: \"move\",\n\t\trequire: [ \"pos\", ],\n\t\tupdate() {\n\t\t\tthis.move(d.scale(speed));\n\t\t},\n\t};\n}\n\nfunction cleanup(time: number = 0): CleanupComp {\n\tlet timer = 0;\n\treturn {\n\t\tid: \"cleanup\",\n\t\trequire: [ \"pos\", \"area\", ],\n\t\tupdate() {\n\t\t\tconst screenRect = {\n\t\t\t\tp1: vec2(0, 0),\n\t\t\t\tp2: vec2(width(), height()),\n\t\t\t}\n\t\t\tif (testAreaRect(this.screenArea(), screenRect)) {\n\t\t\t\ttimer = 0;\n\t\t\t} else {\n\t\t\t\ttimer += dt();\n\t\t\t\tif (timer >= time) {\n\t\t\t\t\tthis.destroy();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction area(opt: AreaCompOpt = {}): AreaComp {\n\n\tconst colliding = {};\n\n\treturn {\n\n\t\tid: \"area\",\n\n\t\tadd() {\n\t\t\tif (this.area.cursor) {\n\t\t\t\tthis.hovers(() => {\n\t\t\t\t\tapp.cursor(this.area.cursor);\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\tarea: {\n\t\t\tshape: \"rect\",\n\t\t\toffset: opt.offset ?? vec2(0),\n\t\t\twidth: opt.width,\n\t\t\theight: opt.height,\n\t\t\tscale: opt.scale ?? vec2(1),\n\t\t\tcursor: opt.cursor,\n\t\t},\n\n\t\tisClicked(): boolean {\n\t\t\treturn app.isMousePressed() && this.isHovering();\n\t\t},\n\n\t\tisHovering() {\n\t\t\tconst mpos = this.fixed ? mousePos() : mouseWorldPos();\n\t\t\treturn this.hasPoint(mpos);\n\t\t},\n\n\t\tisColliding(other) {\n\t\t\tif (!other.area || !other.exists()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst a1 = this.worldArea();\n\t\t\tconst a2 = other.worldArea();\n\t\t\treturn testAreaArea(a1, a2);\n\t\t},\n\n\t\tisTouching(other) {\n\t\t\tif (!other.area || !other.exists()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// TODO: support other shapes\n\t\t\tconst a1 = this.worldArea();\n\t\t\tconst a2 = other.worldArea();\n\t\t\treturn testRectRect2(a1, a2);\n\t\t},\n\n\t\tonClick(f: () => void): EventCanceller {\n\t\t\treturn this.onUpdate(() => {\n\t\t\t\tif (this.isClicked()) {\n\t\t\t\t\tf();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tonHover(onHover: () => void, onNotHover: () => void): EventCanceller {\n\t\t\treturn this.onUpdate(() => {\n\t\t\t\tif (this.isHovering()) {\n\t\t\t\t\tonHover();\n\t\t\t\t} else {\n\t\t\t\t\tif (onNotHover) {\n\t\t\t\t\t\tonNotHover();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tonCollide(tag: Tag, f: (o: GameObj, col?: Collision) => void): EventCanceller {\n\t\t\tconst e1 = this.onUpdate(() => this._checkCollisions(tag, f));\n\t\t\tconst e2 = this.on(\"collide\", (obj, col) => obj.is(tag) && f(obj, col));\n\t\t\treturn () => [e1, e2].forEach((f) => f());\n\t\t},\n\n\t\tclicks(...args) {\n\t\t\treturn this.onClick(...args);\n\t\t},\n\n\t\thovers(...args) {\n\t\t\treturn this.onHover(...args);\n\t\t},\n\n\t\tcollides(...args) {\n\t\t\treturn this.onCollide(...args);\n\t\t},\n\n\t\thasPoint(pt: Vec2): boolean {\n\t\t\treturn testAreaPoint(this.worldArea(), pt);\n\t\t},\n\n\t\t// push an obj out of another if they're overlapped\n\t\tpushOut(obj: GameObj): Vec2 | null {\n\n\t\t\tif (obj === this) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// TODO: support other shapes\n\t\t\tif (obj.area?.shape !== \"rect\") {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst a1 = this.worldArea();\n\t\t\tconst a2 = obj.worldArea();\n\t\t\tconst md = minkDiff(a1, a2);\n\n\t\t\tif (!testRectPoint(md, vec2(0))) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tlet dist = Math.min(\n\t\t\t\tMath.abs(md.p1.x),\n\t\t\t\tMath.abs(md.p2.x),\n\t\t\t\tMath.abs(md.p1.y),\n\t\t\t\tMath.abs(md.p2.y),\n\t\t\t);\n\n\t\t\tconst res = (() => {\n\t\t\t\tswitch (dist) {\n\t\t\t\t\tcase Math.abs(md.p1.x): return vec2(dist, 0);\n\t\t\t\t\tcase Math.abs(md.p2.x): return vec2(-dist, 0);\n\t\t\t\t\tcase Math.abs(md.p1.y): return vec2(0, dist);\n\t\t\t\t\tcase Math.abs(md.p2.y): return vec2(0, -dist);\n\t\t\t\t}\n\t\t\t})();\n\n\t\t\tthis.pos = this.pos.add(res);\n\n\t\t},\n\n\t\t// push object out of other solid objects\n\t\tpushOutAll() {\n\t\t\tevery(this.pushOut);\n\t\t},\n\n\t\t// @ts-ignore\n\t\t_checkCollisions(tag: Tag) {\n\n\t\t\tevery(tag, (obj) => {\n\n\t\t\t\tif (this === obj || !this.exists() || colliding[obj._id]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (this.isColliding(obj)) {\n\t\t\t\t\tthis.trigger(\"collide\", obj, null);\n\t\t\t\t\tcolliding[obj._id] = obj;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\tfor (const id in colliding) {\n\t\t\t\tconst obj = colliding[id];\n\t\t\t\tif (!this.isColliding(obj)) {\n\t\t\t\t\tdelete colliding[id];\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\t// TODO: cache\n\t\t// TODO: use matrix mult for more accuracy and rotation?\n\t\tworldArea(): Area {\n\n\t\t\tlet w = this.area.width ?? this.width;\n\t\t\tlet h = this.area.height ?? this.height;\n\n\t\t\tif (w == null || h == null) {\n\t\t\t\tthrow new Error(\"failed to get area dimension\");\n\t\t\t}\n\n\t\t\tconst scale = vec2(this.scale ?? 1).scale(this.area.scale);\n\n\t\t\tw *= scale.x;\n\t\t\th *= scale.y;\n\n\t\t\tconst orig = originPt(this.origin || DEF_ORIGIN);\n\t\t\tconst pos = (this.pos ?? vec2(0))\n\t\t\t\t.add(this.area.offset)\n\t\t\t\t.sub(orig.add(1, 1).scale(0.5).scale(w, h));\n\n\t\t\treturn {\n\t\t\t\tshape: \"rect\",\n\t\t\t\tp1: pos,\n\t\t\t\tp2: vec2(pos.x + w, pos.y + h),\n\t\t\t};\n\n\t\t},\n\n\t\tscreenArea(): Area {\n\t\t\tconst area = this.worldArea();\n\t\t\tif (this.fixed) {\n\t\t\t\treturn area;\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\tshape: \"rect\",\n\t\t\t\t\tp1: game.camMatrix.multVec2(area.p1),\n\t\t\t\t\tp2: game.camMatrix.multVec2(area.p2),\n\t\t\t\t};\n\t\t\t}\n\t\t},\n\n\t};\n\n}\n\n// make the list of common render properties from the \"pos\", \"scale\", \"color\", \"opacity\", \"rotate\", \"origin\", \"outline\", and \"shader\" components of a character\nfunction getRenderProps(obj: GameObj<any>) {\n\treturn {\n\t\tpos: obj.pos,\n\t\tscale: obj.scale,\n\t\tcolor: obj.color,\n\t\topacity: obj.opacity,\n\t\tangle: obj.angle,\n\t\torigin: obj.origin,\n\t\toutline: obj.outline,\n\t\tshader: assets.shaders[obj.shader],\n\t\tuniform: obj.uniform,\n\t};\n}\n\ninterface SpriteCurAnim {\n\tname: string,\n\ttimer: number,\n\tloop: boolean,\n\tspeed: number,\n\tpingpong: boolean,\n\tonEnd: () => void,\n}\n\n// TODO: clean\nfunction sprite(id: string | SpriteData, opt: SpriteCompOpt = {}): SpriteComp {\n\n\tlet spr = null;\n\tlet curAnim: SpriteCurAnim | null = null;\n\n\tfunction calcTexScale(tex: GfxTexture, q: Quad, w?: number, h?: number): Vec2 {\n\t\tconst scale = vec2(1, 1);\n\t\tif (w && h) {\n\t\t\tscale.x = w / (tex.width * q.w);\n\t\t\tscale.y = h / (tex.height * q.h);\n\t\t} else if (w) {\n\t\t\tscale.x = w / (tex.width * q.w);\n\t\t\tscale.y = scale.x;\n\t\t} else if (h) {\n\t\t\tscale.y = h / (tex.height * q.h);\n\t\t\tscale.x = scale.y;\n\t\t}\n\t\treturn scale;\n\t}\n\n\treturn {\n\n\t\tid: \"sprite\",\n\t\t// TODO: allow update\n\t\twidth: 0,\n\t\theight: 0,\n\t\tframe: opt.frame || 0,\n\t\tquad: opt.quad || quad(0, 0, 1, 1),\n\t\tanimSpeed: opt.animSpeed ?? 1,\n\n\t\tload() {\n\n\t\t\tif (typeof id === \"string\") {\n\t\t\t\tspr = assets.sprites[id];\n\t\t\t} else {\n\t\t\t\tspr = id;\n\t\t\t}\n\n\t\t\tif (!spr) {\n\t\t\t\tthrow new Error(`sprite not found: \"${id}\"`);\n\t\t\t}\n\n\t\t\tlet q = { ...spr.frames[0] };\n\n\t\t\tif (opt.quad) {\n\t\t\t\tq = q.scale(opt.quad);\n\t\t\t}\n\n\t\t\tconst scale = calcTexScale(spr.tex, q, opt.width, opt.height);\n\n\t\t\tthis.width = spr.tex.width * q.w * scale.x;\n\t\t\tthis.height = spr.tex.height * q.h * scale.y;\n\n\t\t\tif (opt.anim) {\n\t\t\t\tthis.play(opt.anim);\n\t\t\t}\n\n\t\t},\n\n\t\tdraw() {\n\t\t\tdrawSprite({\n\t\t\t\t...getRenderProps(this),\n\t\t\t\tsprite: spr,\n\t\t\t\tframe: this.frame,\n\t\t\t\tquad: this.quad,\n\t\t\t\tflipX: opt.flipX,\n\t\t\t\tflipY: opt.flipY,\n\t\t\t\ttiled: opt.tiled,\n\t\t\t\twidth: opt.width,\n\t\t\t\theight: opt.height,\n\t\t\t});\n\t\t},\n\n\t\tupdate() {\n\n\t\t\tif (!curAnim) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst anim = spr.anims[curAnim.name];\n\n\t\t\tif (typeof anim === \"number\") {\n\t\t\t\tthis.frame = anim;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (anim.speed === 0) {\n\t\t\t\tthrow new Error(\"sprite anim speed cannot be 0\");\n\t\t\t}\n\n\t\t\tcurAnim.timer += dt() * this.animSpeed;\n\n\t\t\tif (curAnim.timer >= (1 / curAnim.speed)) {\n\t\t\t\tcurAnim.timer = 0;\n\t\t\t\t// TODO: clean up\n\t\t\t\tif (anim.from > anim.to) {\n\t\t\t\t\tthis.frame--;\n\t\t\t\t\tif (this.frame < anim.to) {\n\t\t\t\t\t\tif (curAnim.loop) {\n\t\t\t\t\t\t\tthis.frame = anim.from;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.frame++;\n\t\t\t\t\t\t\tcurAnim.onEnd();\n\t\t\t\t\t\t\tthis.stop();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.frame++;\n\t\t\t\t\tif (this.frame > anim.to) {\n\t\t\t\t\t\tif (curAnim.loop) {\n\t\t\t\t\t\t\tthis.frame = anim.from;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.frame--;\n\t\t\t\t\t\t\tcurAnim.onEnd();\n\t\t\t\t\t\t\tthis.stop();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\t// TODO: this opt should be used instead of the sprite data opt, if given\n\t\tplay(name: string, opt: SpriteAnimPlayOpt = {}) {\n\n\t\t\tif (!spr) {\n\t\t\t\tonLoad(() => {\n\t\t\t\t\tthis.play(name);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst anim = spr.anims[name];\n\n\t\t\tif (anim == null) {\n\t\t\t\tthrow new Error(`anim not found: ${name}`);\n\t\t\t}\n\n\t\t\tif (curAnim) {\n\t\t\t\tthis.stop();\n\t\t\t}\n\n\t\t\tcurAnim = {\n\t\t\t\tname: name,\n\t\t\t\ttimer: 0,\n\t\t\t\tloop: opt.loop ?? anim.loop ?? false,\n\t\t\t\tpingpong: opt.pingpong ?? anim.pingpong ?? false,\n\t\t\t\tspeed: opt.speed ?? anim.speed ?? 10,\n\t\t\t\tonEnd: opt.onEnd ?? (() => {}),\n\t\t\t};\n\n\t\t\tif (typeof anim === \"number\") {\n\t\t\t\tthis.frame = anim;\n\t\t\t} else {\n\t\t\t\tthis.frame = anim.from;\n\t\t\t}\n\n\t\t\t// TODO: \"animPlay\" is deprecated\n\t\t\tthis.trigger(\"animPlay\", name);\n\t\t\tthis.trigger(\"animStart\", name);\n\n\t\t},\n\n\t\tstop() {\n\t\t\tif (!curAnim) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst prevAnim = curAnim.name;\n\t\t\tcurAnim = null;\n\t\t\tthis.trigger(\"animEnd\", prevAnim);\n\t\t},\n\n\t\tnumFrames() {\n\t\t\tif (!spr) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn spr.frames.length;\n\t\t},\n\n\t\tcurAnim() {\n\t\t\treturn curAnim?.name;\n\t\t},\n\n\t\tflipX(b: boolean) {\n\t\t\topt.flipX = b;\n\t\t},\n\n\t\tflipY(b: boolean) {\n\t\t\topt.flipY = b;\n\t\t},\n\n\t\tonAnimEnd(name: string, action: () => void): EventCanceller {\n\t\t\treturn this.on(\"animEnd\", (anim) => {\n\t\t\t\tif (anim === name) {\n\t\t\t\t\taction();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tonAnimStart(name: string, action: () => void): EventCanceller {\n\t\t\treturn this.on(\"animStart\", (anim) => {\n\t\t\t\tif (anim === name) {\n\t\t\t\t\taction();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tinspect() {\n\t\t\tlet msg = \"\";\n\t\t\tif (typeof id === \"string\") {\n\t\t\t\tmsg += JSON.stringify(id);\n\t\t\t} else {\n\t\t\t\tmsg += \"[blob]\";\n\t\t\t}\n\t\t\treturn msg;\n\t\t},\n\n\t};\n\n}\n\nfunction text(t: string, opt: TextCompOpt = {}): TextComp {\n\n\tfunction update() {\n\n\t\tconst name = this.font ?? gopt.font ?? DEF_FONT;\n\t\tconst font = assets.fonts[name];\n\n\t\tif (!font) {\n\t\t\tthrow new Error(`font not found: \"${name}\"`);\n\t\t}\n\n\t\tconst ftext = gfx.fmtText({\n\t\t\t...getRenderProps(this),\n\t\t\ttext: this.text + \"\",\n\t\t\tsize: this.textSize,\n\t\t\tfont: font,\n\t\t\twidth: opt.width,\n\t\t\ttransform: opt.transform,\n\t\t});\n\n\t\tthis.width = ftext.width / (this.scale?.x || 1);\n\t\tthis.height = ftext.height / (this.scale?.y || 1);\n\n\t\treturn ftext;\n\n\t};\n\n\treturn {\n\n\t\tid: \"text\",\n\t\ttext: t,\n\t\ttextSize: opt.size,\n\t\tfont: opt.font,\n\t\twidth: 0,\n\t\theight: 0,\n\n\t\tload() {\n\t\t\tupdate.call(this);\n\t\t},\n\n\t\tdraw() {\n\t\t\tgfx.drawFmtText(update.call(this));\n\t\t},\n\n\t};\n\n}\n\nfunction rect(w: number, h: number, opt: RectCompOpt = {}): RectComp {\n\treturn {\n\t\tid: \"rect\",\n\t\twidth: w,\n\t\theight: h,\n\t\tradius: opt.radius || 0,\n\t\tdraw() {\n\t\t\tgfx.drawRect({\n\t\t\t\t...getRenderProps(this),\n\t\t\t\twidth: this.width,\n\t\t\t\theight: this.height,\n\t\t\t\tradius: this.radius,\n\t\t\t});\n\t\t},\n\t\tinspect() {\n\t\t\treturn `${Math.ceil(this.width)}, ${Math.ceil(this.height)}`;\n\t\t},\n\t};\n}\n\nfunction uvquad(w: number, h: number): UVQuadComp {\n\treturn {\n\t\tid: \"rect\",\n\t\twidth: w,\n\t\theight: h,\n\t\tdraw() {\n\t\t\tgfx.drawUVQuad({\n\t\t\t\t...getRenderProps(this),\n\t\t\t\twidth: this.width,\n\t\t\t\theight: this.height,\n\t\t\t});\n\t\t},\n\t\tinspect() {\n\t\t\treturn `${Math.ceil(this.width)}, ${Math.ceil(this.height)}`;\n\t\t},\n\t};\n}\n\nfunction circle(radius: number): CircleComp {\n\treturn {\n\t\tid: \"circle\",\n\t\tradius: radius,\n\t\tdraw() {\n\t\t\tgfx.drawCircle({\n\t\t\t\t...getRenderProps(this),\n\t\t\t\tradius: this.radius,\n\t\t\t});\n\t\t},\n\t\tinspect() {\n\t\t\treturn `${Math.ceil(this.radius)}`;\n\t\t},\n\t};\n}\n\nfunction outline(width: number = 1, color: Color = rgb(0, 0, 0)): OutlineComp {\n\treturn {\n\t\tid: \"outline\",\n\t\toutline: {\n\t\t\twidth,\n\t\t\tcolor,\n\t\t},\n\t};\n}\n\nfunction timer(n?: number, action?: () => void): TimerComp {\n\tconst timers: IDList<Timer> = new IDList();\n\tif (n && action) {\n\t\ttimers.pushd({\n\t\t\ttime: n,\n\t\t\taction: action,\n\t\t});\n\t}\n\treturn {\n\t\tid: \"timer\",\n\t\twait(n: number, action: () => void): EventCanceller {\n\t\t\treturn timers.pushd({\n\t\t\t\ttime: n,\n\t\t\t\taction: action,\n\t\t\t});\n\t\t},\n\t\tupdate() {\n\t\t\ttimers.forEach((timer, id) => {\n\t\t\t\ttimer.time -= dt();\n\t\t\t\tif (timer.time <= 0) {\n\t\t\t\t\ttimer.action.call(this);\n\t\t\t\t\ttimers.delete(id);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t};\n}\n\n// maximum y velocity with body()\nconst DEF_JUMP_FORCE = 640;\nconst MAX_VEL = 65536;\n\n// TODO: land on wall\nfunction body(opt: BodyCompOpt = {}): BodyComp {\n\n\tlet velY = 0;\n\tlet curPlatform: GameObj | null = null;\n\tlet lastPlatformPos = null;\n\tlet canDouble = true;\n\n\treturn {\n\n\t\tid: \"body\",\n\t\trequire: [ \"pos\", \"area\", ],\n\t\tjumpForce: opt.jumpForce ?? DEF_JUMP_FORCE,\n\t\tweight: opt.weight ?? 1,\n\t\tsolid: opt.solid ?? true,\n\n\t\tupdate() {\n\n\t\t\tlet justFall = false;\n\n\t\t\t// check if loses current platform\n\t\t\tif (curPlatform) {\n\n\t\t\t\tconst a1 = this.worldArea();\n\t\t\t\tconst a2 = curPlatform.worldArea();\n\t\t\t\tconst y1 = a1.p2.y;\n\t\t\t\tconst y2 = a2.p1.y;\n\t\t\t\tconst x1 = a1.p1.x;\n\t\t\t\tconst x2 = a1.p2.x;\n\t\t\t\tconst x3 = a2.p1.x;\n\t\t\t\tconst x4 = a2.p2.x;\n\n\t\t\t\tif (\n\t\t\t\t\t!curPlatform.exists()\n\t\t\t\t\t|| y1 !== y2\n\t\t\t\t\t|| x2 < x3\n\t\t\t\t\t|| x1 > x4\n\t\t\t\t) {\n\t\t\t\t\tthis.trigger(\"fall\", curPlatform);\n\t\t\t\t\tcurPlatform = null;\n\t\t\t\t\tlastPlatformPos = null;\n\t\t\t\t\tjustFall = true;\n\t\t\t\t} else {\n\t\t\t\t\tif (lastPlatformPos && curPlatform.pos) {\n\t\t\t\t\t\t// TODO: moveBy?\n\t\t\t\t\t\t// sticky platform\n\t\t\t\t\t\tthis.pos = this.pos.add(curPlatform.pos.sub(lastPlatformPos));\n\t\t\t\t\t\tlastPlatformPos = curPlatform.pos.clone();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!curPlatform) {\n\n\t\t\t\tconst col = this.move(0, velY);\n\n\t\t\t\t// check if grounded to a new platform\n\t\t\t\tif (col) {\n\t\t\t\t\tif (col.isBottom()) {\n\t\t\t\t\t\tcurPlatform = col.target;\n\t\t\t\t\t\tconst oy = velY;\n\t\t\t\t\t\tvelY = 0;\n\t\t\t\t\t\tif (curPlatform.pos) {\n\t\t\t\t\t\t\tlastPlatformPos = curPlatform.pos.clone();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!justFall) {\n\t\t\t\t\t\t\tthis.trigger(\"ground\", curPlatform);\n\t\t\t\t\t\t\tcanDouble = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (col.isTop()) {\n\t\t\t\t\t\tvelY = 0;\n\t\t\t\t\t\tthis.trigger(\"headbutt\", col.target);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvelY += gravity() * this.weight * dt();\n\t\t\t\tvelY = Math.min(velY, opt.maxVel ?? MAX_VEL);\n\n\t\t\t}\n\n\t\t},\n\n\t\tcurPlatform(): GameObj | null {\n\t\t\treturn curPlatform;\n\t\t},\n\n\t\tisGrounded() {\n\t\t\treturn curPlatform !== null;\n\t\t},\n\n\t\tgrounded(): boolean {\n\t\t\treturn this.isGrounded();\n\t\t},\n\n\t\tisFalling(): boolean {\n\t\t\treturn velY > 0;\n\t\t},\n\n\t\tfalling(): boolean {\n\t\t\treturn this.isFalling();\n\t\t},\n\n\t\tjump(force: number) {\n\t\t\tcurPlatform = null;\n\t\t\tlastPlatformPos = null;\n\t\t\tvelY = -force || -this.jumpForce;\n\t\t},\n\n\t\tdoubleJump(force: number) {\n\t\t\tif (this.isGrounded()) {\n\t\t\t\tthis.jump(force);\n\t\t\t} else if (canDouble) {\n\t\t\t\tcanDouble = false;\n\t\t\t\tthis.jump(force);\n\t\t\t\tthis.trigger(\"doubleJump\");\n\t\t\t}\n\t\t},\n\n\t\tonGround(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"ground\", action);\n\t\t},\n\n\t\tonFall(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"fall\", action);\n\t\t},\n\n\t\tonHeadbutt(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"headbutt\", action);\n\t\t},\n\n\t\tonDoubleJump(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"doubleJump\", action);\n\t\t},\n\n\t};\n\n}\n\nfunction shader(id: string, uniform: Uniform = {}): ShaderComp {\n\tconst shader = assets.shaders[id];\n\treturn {\n\t\tid: \"shader\",\n\t\tshader: id,\n\t\tuniform: uniform,\n\t};\n}\n\nfunction solid(): SolidComp {\n\treturn {\n\t\tid: \"solid\",\n\t\trequire: [ \"area\", ],\n\t\tsolid: true,\n\t};\n}\n\nfunction fixed(): FixedComp {\n\treturn {\n\t\tid: \"fixed\",\n\t\tfixed: true,\n\t};\n}\n\nfunction stay(): StayComp {\n\treturn {\n\t\tid: \"stay\",\n\t\tstay: true,\n\t};\n}\n\nfunction health(hp: number): HealthComp {\n\tif (hp == null) {\n\t\tthrow new Error(\"health() requires the initial amount of hp\");\n\t}\n\treturn {\n\t\tid: \"health\",\n\t\thurt(n: number = 1) {\n\t\t\tthis.setHP(hp - n);\n\t\t\tthis.trigger(\"hurt\");\n\t\t},\n\t\theal(n: number = 1) {\n\t\t\tthis.setHP(hp + n);\n\t\t\tthis.trigger(\"heal\");\n\t\t},\n\t\thp(): number {\n\t\t\treturn hp;\n\t\t},\n\t\tsetHP(n: number) {\n\t\t\thp = n;\n\t\t\tif (hp <= 0) {\n\t\t\t\tthis.trigger(\"death\");\n\t\t\t}\n\t\t},\n\t\tonHurt(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"hurt\", action);\n\t\t},\n\t\tonHeal(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"heal\", action);\n\t\t},\n\t\tonDeath(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"death\", action);\n\t\t},\n\t\tinspect() {\n\t\t\treturn `${hp}`;\n\t\t},\n\t};\n}\n\nfunction lifespan(time: number, opt: LifespanCompOpt = {}): LifespanComp {\n\tif (time == null) {\n\t\tthrow new Error(\"lifespan() requires time\");\n\t}\n\tlet timer = 0;\n\tconst fade = opt.fade ?? 0;\n\tconst startFade = Math.max((time - fade), 0);\n\treturn {\n\t\tid: \"lifespan\",\n\t\tupdate() {\n\t\t\ttimer += dt();\n\t\t\t// TODO: don't assume 1 as start opacity\n\t\t\tif (timer >= startFade) {\n\t\t\t\tthis.opacity = map(timer, startFade, time, 1, 0);\n\t\t\t}\n\t\t\tif (timer >= time) {\n\t\t\t\tthis.destroy();\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction state(initState: string, stateList?: string[]): StateComp {\n\n\tif (!initState) {\n\t\tthrow new Error(\"state() requires an initial state\");\n\t}\n\n\tconst events = {};\n\n\tfunction initStateHook(state: string) {\n\t\tif (!events[state]) {\n\t\t\tevents[state] = {\n\t\t\t\tenter: [],\n\t\t\t\tleave: [],\n\t\t\t\tupdate: [],\n\t\t\t\tdraw: [],\n\t\t\t};\n\t\t}\n\t}\n\n\tfunction on(event, state, action) {\n\t\tinitStateHook(state);\n\t\tevents[state][event].push(action);\n\t}\n\n\tfunction trigger(event, state, ...args) {\n\t\tinitStateHook(state);\n\t\tevents[state][event].forEach((action) => action(...args));\n\t}\n\n\treturn {\n\t\tid: \"state\",\n\t\tstate: initState,\n\t\tenterState(state: string, ...args) {\n\t\t\tif (stateList && !stateList.includes(state)) {\n\t\t\t\tthrow new Error(`State not found: ${state}`);\n\t\t\t}\n\t\t\ttrigger(\"leave\", this.state, ...args);\n\t\t\tthis.state = state;\n\t\t\ttrigger(\"enter\", this.state, ...args);\n\t\t},\n\t\tonStateEnter(state: string, action: () => void) {\n\t\t\ton(\"enter\", state, action);\n\t\t},\n\t\tonStateUpdate(state: string, action: () => void) {\n\t\t\ton(\"update\", state, action);\n\t\t},\n\t\tonStateDraw(state: string, action: () => void) {\n\t\t\ton(\"draw\", state, action);\n\t\t},\n\t\tonStateLeave(state: string, action: () => void) {\n\t\t\ton(\"leave\", state, action);\n\t\t},\n\t\tupdate() {\n\t\t\ttrigger(\"update\", this.state);\n\t\t},\n\t\tdraw() {\n\t\t\ttrigger(\"draw\", this.state);\n\t\t},\n\t};\n\n}\n\nconst debug: Debug = {\n\tinspect: false,\n\ttimeScale: 1,\n\tshowLog: true,\n\tfps: app.fps,\n\tobjCount(): number {\n\t\treturn game.objs.size;\n\t},\n\tstepFrame: updateFrame,\n\tdrawCalls: gfx.drawCalls,\n\tclearLog: logger.clear,\n\tlog: (msg) => logger.info(`[${app.time().toFixed(2)}] ${msg}`),\n\terror: (msg) => logger.error(`[${app.time().toFixed(2)}] ${msg}`),\n\tcurRecording: null,\n\tget paused() {\n\t\treturn game.paused;\n\t},\n\tset paused(v) {\n\t\tgame.paused = v;\n\t\tif (v) {\n\t\t\taudio.ctx.suspend();\n\t\t} else {\n\t\t\taudio.ctx.resume();\n\t\t}\n\t}\n};\n\nfunction onLoad(cb: () => void): void {\n\tif (game.loaded) {\n\t\tcb();\n\t} else {\n\t\tgame.on(\"load\", cb);\n\t}\n}\n\nfunction scene(id: SceneID, def: SceneDef) {\n\tgame.scenes[id] = def;\n}\n\nfunction go(id: SceneID, ...args) {\n\n\tif (!game.scenes[id]) {\n\t\tthrow new Error(`scene not found: ${id}`);\n\t}\n\n\tconst cancel = game.on(\"updateStart\", () => {\n\n\t\tgame.events = {};\n\n\t\tgame.objEvents = {\n\t\t\tadd: new IDList(),\n\t\t\tupdate: new IDList(),\n\t\t\tdraw: new IDList(),\n\t\t\tdestroy: new IDList(),\n\t\t};\n\n\t\tgame.objs.forEach((obj) => {\n\t\t\tif (!obj.stay) {\n\t\t\t\tdestroy(obj);\n\t\t\t}\n\t\t});\n\n\t\tgame.timers = new IDList();\n\n\t\t// cam\n\t\tgame.cam = {\n\t\t\tpos: center(),\n\t\t\tscale: vec2(1, 1),\n\t\t\tangle: 0,\n\t\t\tshake: 0,\n\t\t};\n\n\t\tgame.camMousePos = app.mousePos();\n\t\tgame.camMatrix = mat4();\n\n\t\tgame.layers = {};\n\t\tgame.defLayer = null;\n\t\tgame.gravity = DEF_GRAVITY;\n\n\t\tgame.scenes[id](...args);\n\n\t\tif (gopt.debug !== false) {\n\t\t\tenterDebugMode();\n\t\t}\n\n\t\tif (gopt.burp) {\n\t\t\tenterBurpMode();\n\t\t}\n\n\t\tcancel();\n\n\t});\n\n}\n\nfunction getData<T>(key: string, def?: T): T {\n\ttry {\n\t\treturn JSON.parse(window.localStorage[key]);\n\t} catch {\n\t\tif (def) {\n\t\t\tsetData(key, def);\n\t\t\treturn def;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\nfunction setData(key: string, data: any) {\n\twindow.localStorage[key] = JSON.stringify(data);\n}\n\nfunction plug<T>(plugin: KaboomPlugin<T>): MergeObj<T> & KaboomCtx {\n\tconst funcs = plugin(ctx);\n\tfor (const k in funcs) {\n\t\t// @ts-ignore\n\t\tctx[k] = funcs[k];\n\t\tif (gopt.global !== false) {\n\t\t\t// @ts-ignore\n\t\t\twindow[k] = funcs[k];\n\t\t}\n\t}\n\treturn ctx as unknown as MergeObj<T> & KaboomCtx;\n}\n\nfunction center(): Vec2 {\n\treturn vec2(width() / 2, height() / 2);\n}\n\nfunction grid(level: Level, p: Vec2) {\n\n\treturn {\n\n\t\tid: \"grid\",\n\t\tgridPos: p.clone(),\n\n\t\tsetGridPos(...args) {\n\t\t\tconst p = vec2(...args);\n\t\t\tthis.gridPos = p.clone();\n\t\t\tthis.pos = vec2(\n\t\t\t\tlevel.offset().x + this.gridPos.x * level.gridWidth(),\n\t\t\t\tlevel.offset().y + this.gridPos.y * level.gridHeight()\n\t\t\t);\n\t\t},\n\n\t\tmoveLeft() {\n\t\t\tthis.setGridPos(this.gridPos.add(vec2(-1, 0)));\n\t\t},\n\n\t\tmoveRight() {\n\t\t\tthis.setGridPos(this.gridPos.add(vec2(1, 0)));\n\t\t},\n\n\t\tmoveUp() {\n\t\t\tthis.setGridPos(this.gridPos.add(vec2(0, -1)));\n\t\t},\n\n\t\tmoveDown() {\n\t\t\tthis.setGridPos(this.gridPos.add(vec2(0, 1)));\n\t\t},\n\n\t};\n\n}\n\nfunction addLevel(map: string[], opt: LevelOpt): Level {\n\n\tif (!opt.width || !opt.height) {\n\t\tthrow new Error(\"Must provide level grid width & height.\");\n\t}\n\n\tconst objs: GameObj[] = [];\n\tconst offset = vec2(opt.pos || vec2(0));\n\tlet longRow = 0;\n\n\tconst level = {\n\n\t\toffset() {\n\t\t\treturn offset.clone();\n\t\t},\n\n\t\tgridWidth() {\n\t\t\treturn opt.width;\n\t\t},\n\n\t\tgridHeight() {\n\t\t\treturn opt.height;\n\t\t},\n\n\t\tgetPos(...args): Vec2 {\n\t\t\tconst p = vec2(...args);\n\t\t\treturn vec2(\n\t\t\t\toffset.x + p.x * opt.width,\n\t\t\t\toffset.y + p.y * opt.height\n\t\t\t);\n\t\t},\n\n\t\tspawn(sym: string, ...args): GameObj {\n\n\t\t\tconst p = vec2(...args);\n\n\t\t\tconst comps = (() => {\n\t\t\t\tif (opt[sym]) {\n\t\t\t\t\tif (typeof opt[sym] !== \"function\") {\n\t\t\t\t\t\tthrow new Error(\"level symbol def must be a function returning a component list\");\n\t\t\t\t\t}\n\t\t\t\t\treturn opt[sym](p);\n\t\t\t\t} else if (opt.any) {\n\t\t\t\t\treturn opt.any(sym, p);\n\t\t\t\t}\n\t\t\t})();\n\n\t\t\tif (!comps) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst posComp = vec2(\n\t\t\t\toffset.x + p.x * opt.width,\n\t\t\t\toffset.y + p.y * opt.height\n\t\t\t);\n\n\t\t\tfor (const comp of comps) {\n\t\t\t\tif (comp.id === \"pos\") {\n\t\t\t\t\tposComp.x += comp.pos.x;\n\t\t\t\t\tposComp.y += comp.pos.y;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcomps.push(pos(posComp));\n\t\t\tcomps.push(grid(this, p));\n\n\t\t\tconst obj = add(comps);\n\n\t\t\tobjs.push(obj);\n\n\t\t\treturn obj;\n\n\t\t},\n\n\t\twidth() {\n\t\t\treturn longRow * opt.width;\n\t\t},\n\n\t\theight() {\n\t\t\treturn map.length * opt.height;\n\t\t},\n\n\t\tdestroy() {\n\t\t\tfor (const obj of objs) {\n\t\t\t\tdestroy(obj);\n\t\t\t}\n\t\t},\n\n\t};\n\n\tmap.forEach((row, i) => {\n\n\t\tconst syms = row.split(\"\");\n\n\t\tlongRow = Math.max(syms.length, longRow);\n\n\t\tsyms.forEach((sym, j) => {\n\t\t\tlevel.spawn(sym, vec2(j, i));\n\t\t});\n\n\t});\n\n\treturn level;\n\n}\n\nfunction record(frameRate?): Recording {\n\n\tconst stream = app.canvas.captureStream(frameRate);\n\tconst audioDest = audio.ctx.createMediaStreamDestination();\n\n\taudio.masterNode.connect(audioDest)\n\n\tconst audioStream = audioDest.stream;\n\tconst [firstAudioTrack] = audioStream.getAudioTracks();\n\n\t// TODO: Enabling audio results in empty video if no audio received\n\t// stream.addTrack(firstAudioTrack);\n\n\tconst recorder = new MediaRecorder(stream);\n\tconst chunks = [];\n\n\trecorder.ondataavailable = (e) => {\n\t\tif (e.data.size > 0) {\n\t\t\tchunks.push(e.data);\n\t\t}\n\t};\n\n\trecorder.onerror = (e) => {\n\t\taudio.masterNode.disconnect(audioDest)\n\t\tstream.getTracks().forEach(t => t.stop());\n\t};\n\n\trecorder.start();\n\n\treturn {\n\n\t\tresume() {\n\t\t\trecorder.resume();\n\t\t},\n\n\t\tpause() {\n\t\t\trecorder.pause();\n\t\t},\n\n\t\tdownload(filename = \"kaboom.mp4\") {\n\n\t\t\trecorder.onstop = () => {\n\t\t\t\tdownloadBlob(new Blob(chunks, {\n\t\t\t\t\ttype: \"video/mp4\",\n\t\t\t\t}), filename);\n\t\t\t}\n\n\t\t\trecorder.stop();\n\t\t\t// cleanup\n\t\t\taudio.masterNode.disconnect(audioDest)\n\t\t\tstream.getTracks().forEach(t => t.stop());\n\n\t\t}\n\t};\n\n}\n\nconst ctx: KaboomCtx = {\n\t// asset load\n\tloadRoot: assets.loadRoot,\n\tloadSprite: assets.loadSprite,\n\tloadSpriteAtlas: assets.loadSpriteAtlas,\n\tloadSound: assets.loadSound,\n\tloadFont: assets.loadFont,\n\tloadShader: assets.loadShader,\n\tloadAseprite: assets.loadAseprite,\n\tloadPedit: assets.loadPedit,\n\tloadBean: assets.loadBean,\n\tload: assets.load,\n\t// query\n\twidth,\n\theight,\n\tcenter,\n\tdt,\n\ttime: app.time,\n\tscreenshot: app.screenshot,\n\trecord: record,\n\tfocused: app.isFocused,\n\tisFocused: app.isFocused,\n\tfocus: app.focus,\n\tcursor: app.cursor,\n\tregCursor,\n\tfullscreen: app.fullscreen,\n\tisFullscreen: app.isFullscreen,\n\tonLoad,\n\tready: onLoad,\n\tisTouch: () => app.isTouch,\n\t// misc\n\tlayers,\n\tcamPos,\n\tcamScale,\n\tcamRot,\n\tshake,\n\ttoScreen,\n\ttoWorld,\n\tgravity,\n\t// obj\n\tadd,\n\treadd,\n\tdestroy,\n\tdestroyAll,\n\tget,\n\tevery,\n\trevery,\n\t// comps\n\tpos,\n\tscale,\n\trotate,\n\tcolor,\n\topacity,\n\torigin,\n\tlayer,\n\tarea,\n\tsprite,\n\ttext,\n\trect,\n\tcircle,\n\tuvquad,\n\toutline,\n\tbody,\n\tshader,\n\ttimer,\n\tsolid,\n\tfixed,\n\tstay,\n\thealth,\n\tlifespan,\n\tz,\n\tmove,\n\tcleanup,\n\tfollow,\n\tstate,\n\t// group events\n\ton,\n\tonUpdate,\n\tonDraw,\n\tonCollide,\n\tonClick,\n\tonHover,\n\taction: onUpdate,\n\trender: onDraw,\n\tcollides: onCollide,\n\tclicks: onClick,\n\thovers: onHover,\n\t// input\n\tonKeyDown,\n\tonKeyPress,\n\tonKeyPressRepeat,\n\tonKeyRelease,\n\tonMouseDown,\n\tonMousePress,\n\tonMouseRelease,\n\tonMouseMove,\n\tonCharInput,\n\tonTouchStart,\n\tonTouchMove,\n\tonTouchEnd,\n\tkeyDown: onKeyDown,\n\tkeyPress: onKeyPress,\n\tkeyPressRep: onKeyPressRepeat,\n\tkeyRelease: onKeyRelease,\n\tmouseDown: onMouseDown,\n\tmouseClick: onMousePress,\n\tmouseRelease: onMouseRelease,\n\tmouseMove: onMouseMove,\n\tcharInput: onCharInput,\n\ttouchStart: onTouchStart,\n\ttouchMove: onTouchMove,\n\ttouchEnd: onTouchEnd,\n\tmousePos,\n\tmouseWorldPos,\n\tmouseDeltaPos: app.mouseDeltaPos,\n\tisKeyDown: app.isKeyDown,\n\tisKeyPressed: app.isKeyPressed,\n\tisKeyPressedRepeat: app.isKeyPressedRepeat,\n\tisKeyReleased: app.isKeyReleased,\n\tisMouseDown: app.isMouseDown,\n\tisMousePressed: app.isMousePressed,\n\tisMouseReleased: app.isMouseReleased,\n\tisMouseMoved: app.isMouseMoved,\n\tkeyIsDown: app.isKeyDown,\n\tkeyIsPressed: app.isKeyPressed,\n\tkeyIsPressedRep: app.isKeyPressedRepeat,\n\tkeyIsReleased: app.isKeyReleased,\n\tmouseIsDown: app.isMouseDown,\n\tmouseIsClicked: app.isMousePressed,\n\tmouseIsReleased: app.isMouseReleased,\n\tmouseIsMoved: app.isMouseMoved,\n\t// timer\n\tloop,\n\twait,\n\t// audio\n\tplay,\n\tvolume: audio.volume,\n\tburp: audio.burp,\n\taudioCtx: audio.ctx,\n\t// math\n\trng,\n\trand,\n\trandi,\n\trandSeed,\n\tvec2,\n\tdir,\n\trgb,\n\thsl2rgb,\n\tquad,\n\tchoose,\n\tchance,\n\tlerp,\n\tmap,\n\tmapc,\n\twave,\n\tdeg2rad,\n\trad2deg,\n\ttestAreaRect,\n\ttestAreaLine,\n\ttestAreaCircle,\n\ttestAreaPolygon,\n\ttestAreaPoint,\n\ttestAreaArea,\n\ttestLineLine,\n\ttestRectRect,\n\ttestRectLine,\n\ttestRectPoint,\n\ttestPolygonPoint,\n\ttestLinePolygon,\n\ttestPolygonPolygon,\n\ttestCircleCircle,\n\ttestCirclePoint,\n\ttestRectPolygon,\n\t// raw draw\n\tdrawSprite,\n\tdrawText,\n\t// TODO: wrap these to use assets lib for the \"shader\" prop\n\tdrawRect: gfx.drawRect,\n\tdrawLine: gfx.drawLine,\n\tdrawLines: gfx.drawLines,\n\tdrawTriangle: gfx.drawTriangle,\n\tdrawCircle: gfx.drawCircle,\n\tdrawEllipse: gfx.drawEllipse,\n\tdrawUVQuad: gfx.drawUVQuad,\n\tdrawPolygon: gfx.drawPolygon,\n\tpushTransform: gfx.pushTransform,\n\tpopTransform: gfx.popTransform,\n\tpushTranslate: gfx.pushTranslate,\n\tpushRotate: gfx.pushRotateZ,\n\tpushScale: gfx.pushScale,\n\t// debug\n\tdebug,\n\t// scene\n\tscene,\n\tgo,\n\t// level\n\taddLevel,\n\t// storage\n\tgetData,\n\tsetData,\n\t// plugin\n\tplug,\n\t// char sets\n\tASCII_CHARS,\n\tCP437_CHARS,\n\t// dirs\n\tLEFT: vec2(-1, 0),\n\tRIGHT: vec2(1, 0),\n\tUP: vec2(0, -1),\n\tDOWN: vec2(0, 1),\n\t// colors\n\tRED: rgb(255, 0, 0),\n\tGREEN: rgb(0, 255, 0),\n\tBLUE: rgb(0, 0, 255),\n\tYELLOW: rgb(255, 255, 0),\n\tMAGENTA: rgb(255, 0, 255),\n\tCYAN: rgb(0, 255, 255),\n\tWHITE: rgb(255, 255, 255),\n\tBLACK: rgb(0, 0, 0),\n\t// dom\n\tcanvas: app.canvas,\n};\n\nplug(kaboomPlugin);\n\nif (gopt.plugins) {\n\tgopt.plugins.forEach(plug);\n}\n\nif (gopt.global !== false) {\n\tfor (const k in ctx) {\n\t\twindow[k] = ctx[k];\n\t}\n}\n\nlet numFrames = 0;\n\nfunction frames() {\n\treturn numFrames;\n}\n\nfunction updateFrame() {\n\n\tgame.trigger(\"updateStart\");\n\n\t// update timers\n\tgame.timers.forEach((t, id) => {\n\t\tt.time -= dt();\n\t\tif (t.time <= 0) {\n\t\t\t// TODO: some timer action causes crash on FF when dt is really high, not sure why\n\t\t\tt.action();\n\t\t\tgame.timers.delete(id);\n\t\t}\n\t});\n\n\t// update every obj\n\trevery((obj) => {\n\t\tif (!obj.paused) {\n\t\t\tobj.trigger(\"update\", obj);\n\t\t}\n\t});\n\n}\n\nfunction drawFrame() {\n\n\t// calculate camera matrix\n\tconst size = vec2(width(), height());\n\tconst cam = game.cam;\n\tconst shake = dir(rand(0, 360)).scale(cam.shake);\n\n\tcam.shake = lerp(cam.shake, 0, 5 * dt());\n\tgame.camMatrix = mat4()\n\t\t.translate(size.scale(0.5))\n\t\t.scale(cam.scale)\n\t\t.rotateZ(cam.angle)\n\t\t.translate(size.scale(-0.5))\n\t\t.translate(cam.pos.scale(-1).add(size.scale(0.5)).add(shake))\n\t\t;\n\n\t// draw every obj\n\tevery((obj) => {\n\n\t\tif (!obj.hidden) {\n\n\t\t\tgfx.pushTransform();\n\n\t\t\tif (!obj.fixed) {\n\t\t\t\tgfx.applyMatrix(game.camMatrix);\n\t\t\t}\n\n\t\t\tobj.trigger(\"draw\");\n\t\t\tgfx.popTransform();\n\n\t\t}\n\n\t});\n\n}\n\nfunction drawLoadScreen() {\n\n\t// if assets are not fully loaded, draw a progress bar\n\tconst progress = assets.loadProgress();\n\n\tif (progress === 1) {\n\t\tgame.loaded = true;\n\t\tgame.trigger(\"load\");\n\t} else {\n\n\t\tconst w = width() / 2;\n\t\tconst h = 24 / gfx.scale();\n\t\tconst pos = vec2(width() / 2, height() / 2).sub(vec2(w / 2, h / 2));\n\n\t\tgfx.drawRect({\n\t\t\tpos: vec2(0),\n\t\t\twidth: width(),\n\t\t\theight: height(),\n\t\t\tcolor: rgb(0, 0, 0),\n\t\t});\n\n\t\tgfx.drawRect({\n\t\t\tpos: pos,\n\t\t\twidth: w,\n\t\t\theight: h,\n\t\t\tfill: false,\n\t\t\toutline: {\n\t\t\t\twidth: 4 / gfx.scale(),\n\t\t\t},\n\t\t});\n\n\t\tgfx.drawRect({\n\t\t\tpos: pos,\n\t\t\twidth: w * progress,\n\t\t\theight: h,\n\t\t});\n\n\t}\n\n}\n\nfunction drawDebug() {\n\n\tif (debug.inspect) {\n\n\t\tlet inspecting = null;\n\t\tconst font = assets.fonts[DBG_FONT];\n\t\tconst lcolor = rgb(gopt.inspectColor ?? [0, 0, 255]);\n\n\t\tfunction drawInspectTxt(pos, txt) {\n\n\t\t\tconst s = app.scale;\n\t\t\tconst pad = vec2(8);\n\n\t\t\tgfx.pushTransform();\n\t\t\tgfx.pushTranslate(pos);\n\t\t\tgfx.pushScale(1 / s);\n\n\t\t\tconst ftxt = gfx.fmtText({\n\t\t\t\ttext: txt,\n\t\t\t\tfont: font,\n\t\t\t\tsize: 16,\n\t\t\t\tpos: pad,\n\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t});\n\n\t\t\tconst bw = ftxt.width + pad.x * 2;\n\t\t\tconst bh = ftxt.height + pad.x * 2;\n\n\t\t\tif (pos.x + bw / s >= width()) {\n\t\t\t\tgfx.pushTranslate(vec2(-bw, 0));\n\t\t\t}\n\n\t\t\tif (pos.y + bh / s >= height()) {\n\t\t\t\tgfx.pushTranslate(vec2(0, -bh));\n\t\t\t}\n\n\t\t\tgfx.drawRect({\n\t\t\t\twidth: bw,\n\t\t\t\theight: bh,\n\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\tradius: 4,\n\t\t\t\topacity: 0.8,\n\t\t\t});\n\n\t\t\tgfx.drawFmtText(ftxt);\n\t\t\tgfx.popTransform();\n\n\t\t}\n\n\t\t// draw area outline\n\t\tevery((obj) => {\n\n\t\t\tif (!obj.area) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (obj.hidden) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst scale = gfx.scale() * (obj.fixed ? 1: (game.cam.scale.x + game.cam.scale.y) / 2);\n\n\t\t\tif (!obj.fixed) {\n\t\t\t\tgfx.pushTransform();\n\t\t\t\tgfx.applyMatrix(game.camMatrix);\n\t\t\t}\n\n\t\t\tif (!inspecting) {\n\t\t\t\tif (obj.isHovering()) {\n\t\t\t\t\tinspecting = obj;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst lwidth = (inspecting === obj ? 8 : 4) / scale;\n\t\t\tconst a = obj.worldArea();\n\t\t\tconst w = a.p2.x - a.p1.x;\n\t\t\tconst h = a.p2.y - a.p1.y;\n\n\t\t\tgfx.drawRect({\n\t\t\t\tpos: a.p1,\n\t\t\t\twidth: w,\n\t\t\t\theight: h,\n\t\t\t\toutline: {\n\t\t\t\t\twidth: lwidth,\n\t\t\t\t\tcolor: lcolor,\n\t\t\t\t},\n\t\t\t\tfill: false,\n\t\t\t});\n\n\t\t\tif (!obj.fixed) {\n\t\t\t\tgfx.popTransform();\n\t\t\t}\n\n\t\t});\n\n\t\tif (inspecting) {\n\n\t\t\tconst lines = [];\n\t\t\tconst data = inspecting.inspect();\n\n\t\t\tfor (const tag in data) {\n\t\t\t\tif (data[tag]) {\n\t\t\t\t\tlines.push(`${tag}: ${data[tag]}`);\n\t\t\t\t} else {\n\t\t\t\t\tlines.push(`${tag}`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdrawInspectTxt(mousePos(), lines.join(\"\\n\"));\n\n\t\t}\n\n\t\tdrawInspectTxt(vec2(8 / app.scale), `FPS: ${app.fps()}`);\n\n\t}\n\n\tif (debug.paused) {\n\n\t\t// top right corner\n\t\tgfx.pushTransform();\n\t\tgfx.pushTranslate(width(), 0);\n\t\tgfx.pushScale(1 / app.scale);\n\t\tgfx.pushTranslate(-8, 8);\n\n\t\tconst size = 32;\n\n\t\t// bg\n\t\tgfx.drawRect({\n\t\t\twidth: size,\n\t\t\theight: size,\n\t\t\torigin: \"topright\",\n\t\t\tcolor: rgb(0, 0, 0),\n\t\t\topacity: 0.8,\n\t\t\tradius: 4,\n\t\t});\n\n\t\t// pause icon\n\t\tfor (let i = 1; i <= 2; i++) {\n\t\t\tgfx.drawRect({\n\t\t\t\twidth: 4,\n\t\t\t\theight: size * 0.6,\n\t\t\t\torigin: \"center\",\n\t\t\t\tpos: vec2(-size / 3 * i, size * 0.5),\n\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t\tradius: 2,\n\t\t\t});\n\t\t}\n\n\t\tgfx.popTransform();\n\n\t}\n\n\tif (debug.timeScale !== 1) {\n\n\t\t// bottom right corner\n\t\tgfx.pushTransform();\n\t\tgfx.pushTranslate(width(), height());\n\t\tgfx.pushScale(1 / app.scale);\n\t\tgfx.pushTranslate(-8, -8);\n\n\t\tconst pad = 8;\n\n\t\t// format text first to get text size\n\t\tconst ftxt = gfx.fmtText({\n\t\t\ttext: debug.timeScale.toFixed(1),\n\t\t\tfont: assets.fonts[DBG_FONT],\n\t\t\tsize: 16,\n\t\t\tcolor: rgb(255, 255, 255),\n\t\t\tpos: vec2(-pad),\n\t\t\torigin: \"botright\",\n\t\t});\n\n\t\t// bg\n\t\tgfx.drawRect({\n\t\t\twidth: ftxt.width + pad * 2 + pad * 4,\n\t\t\theight: ftxt.height + pad * 2,\n\t\t\torigin: \"botright\",\n\t\t\tcolor: rgb(0, 0, 0),\n\t\t\topacity: 0.8,\n\t\t\tradius: 4,\n\t\t});\n\n\t\t// fast forward / slow down icon\n\t\tfor (let i = 0; i < 2; i++) {\n\t\t\tconst flipped = debug.timeScale < 1;\n\t\t\tgfx.drawTriangle({\n\t\t\t\tp1: vec2(-ftxt.width - pad * (flipped ? 2 : 3.5), -pad),\n\t\t\t\tp2: vec2(-ftxt.width - pad * (flipped ? 2 : 3.5), -pad - ftxt.height),\n\t\t\t\tp3: vec2(-ftxt.width - pad * (flipped ? 3.5 : 2), -pad - ftxt.height / 2),\n\t\t\t\tpos: vec2(-i * pad * 1 + (flipped ? -pad * 0.5 : 0), 0),\n\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t});\n\t\t}\n\n\t\t// text\n\t\tgfx.drawFmtText(ftxt);\n\n\t\tgfx.popTransform();\n\n\t}\n\n\tif (debug.curRecording) {\n\n\t\tgfx.pushTransform();\n\t\tgfx.pushTranslate(0, height());\n\t\tgfx.pushScale(1 / app.scale);\n\t\tgfx.pushTranslate(24, -24);\n\n\t\tgfx.drawCircle({\n\t\t\tradius: 12,\n\t\t\tcolor: rgb(255, 0, 0),\n\t\t\topacity: wave(0, 1, app.time() * 4),\n\t\t});\n\n\t\tgfx.popTransform();\n\n\t}\n\n\tif (debug.showLog) {\n\t\tlogger.draw();\n\t}\n\n}\n\napp.run(() => {\n\n\tnumFrames++;\n\n\tif (!game.loaded) {\n\t\tgfx.frameStart();\n\t\tdrawLoadScreen();\n\t\tgfx.frameEnd();\n\t} else {\n\n\t\t// TODO: this gives the latest mousePos in input handlers but uses cam matrix from last frame\n\t\tgame.camMousePos = game.camMatrix.invert().multVec2(app.mousePos());\n\t\tgame.trigger(\"input\");\n\n\t\tif (!debug.paused && gopt.debug !== false) {\n\t\t\tupdateFrame();\n\t\t}\n\n\t\tgfx.frameStart();\n\t\tdrawFrame();\n\n\t\tif (gopt.debug !== false) {\n\t\t\tdrawDebug();\n\t\t}\n\n\t\tgfx.frameEnd();\n\n\t}\n\n});\n\nif (gopt.debug !== false) {\n\tenterDebugMode();\n}\n\nif (gopt.burp) {\n\tenterBurpMode();\n}\n\nwindow.addEventListener(\"error\", (e) => {\n\tlogger.error(`Error: ${e.error.message}`);\n\tapp.quit();\n\tapp.run(() => {\n\t\tif (assets.loadProgress() === 1) {\n\t\t\tgfx.frameStart();\n\t\t\tlogger.draw();\n\t\t\tgfx.frameEnd();\n\t\t}\n\t});\n});\n\nreturn ctx;\n\n};\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n"],"names":[],"version":3,"file":"index.38661719.js.map","sourceRoot":"/__parcel_source_root/"}