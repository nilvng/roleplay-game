{"version":3,"sources":["../../.npm/_npx/b4a9aa12c0cf34a6/node_modules/@parcel/runtime-browser-hmr/lib/runtime-9f9e16b9956cf5c7.js","index.js","node_modules/kaboom/src/kaboom.ts","node_modules/kaboom/src/math.ts","node_modules/kaboom/src/utils.ts","node_modules/kaboom/src/gfx.ts","node_modules/kaboom/src/app.ts","node_modules/kaboom/src/audio.ts","node_modules/kaboom/src/assets.ts","node_modules/kaboom/src/logger.ts","node_modules/kaboom/src/plugins/kaboom.ts","../../.npm/_npx/b4a9aa12c0cf34a6/node_modules/@parcel/transformer-js/src/esmodule-helpers.js"],"names":[],"mappings":"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","file":"index.38661719.51656b37.js","sourceRoot":"..","sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"4a236f9275d0a351\";module.bundle.HMR_BUNDLE_ID = \"31648ca538661719\";\"use strict\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: mixed;\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function accept(fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function dispose(fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData = undefined;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, acceptedAssets\n/*: {|[string]: boolean|} */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // $FlowFixMe\n\n  ws.onmessage = function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    acceptedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      var assets = data.assets.filter(function (asset) {\n        return asset.envHash === HMR_ENV_HASH;\n      }); // Handle HMR Update\n\n      var handled = assets.every(function (asset) {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear();\n        assets.forEach(function (asset) {\n          hmrApply(module.bundle.root, asset);\n        });\n\n        for (var i = 0; i < assetsToAccept.length; i++) {\n          var id = assetsToAccept[i][1];\n\n          if (!acceptedAssets[id]) {\n            hmrAcceptRun(assetsToAccept[i][0], id);\n          }\n        }\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      var _iterator = _createForOfIteratorHelper(data.diagnostics.ansi),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var ansiDiagnostic = _step.value;\n          var stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n          console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  var errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  var _iterator2 = _createForOfIteratorHelper(diagnostics),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var diagnostic = _step2.value;\n      var stack = diagnostic.codeframe ? diagnostic.codeframe : diagnostic.stack;\n      errorHTML += \"\\n      <div>\\n        <div style=\\\"font-size: 18px; font-weight: bold; margin-top: 20px;\\\">\\n          \\uD83D\\uDEA8 \".concat(diagnostic.message, \"\\n        </div>\\n        <pre>\").concat(stack, \"</pre>\\n        <div>\\n          \").concat(diagnostic.hints.map(function (hint) {\n        return '<div>💡 ' + hint + '</div>';\n      }).join(''), \"\\n        </div>\\n        \").concat(diagnostic.documentation ? \"<div>\\uD83D\\uDCDD <a style=\\\"color: violet\\\" href=\\\"\".concat(diagnostic.documentation, \"\\\" target=\\\"_blank\\\">Learn more</a></div>\") : '', \"\\n      </div>\\n    \");\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(window.location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    var deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      var fn = new Function('require', 'module', 'exports', asset.output);\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  var parents = getParents(module.bundle.root, id); // If no parents, the asset is new. Prevent reloading the page.\n\n  if (!parents.length) {\n    return true;\n  }\n\n  return parents.some(function (v) {\n    return hmrAcceptCheck(v[0], v[1], null);\n  });\n}\n\nfunction hmrAcceptRun(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n  cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n\n  acceptedAssets[id] = true;\n}","import kaboom from \"kaboom\";\r\n// kaboom({\r\n// \tscale: 4,\r\n// \tfont: \"sinko\",\r\n// })\r\n// loadRoot('https://i.imgur.com/')\r\n// loadSprite('top-door', 'U9nre4n.png')\r\n// loadSprite('bottom-wall', 'vWJWmvb.png')\r\n// loadSprite(\"dino\", \"https://i.imgur.com/Gz3ifGl.png\", {\r\n// \tsliceX: 3,\r\n// \tsliceY: 4,\r\n// \t// Define animations\r\n// \tanims: {\r\n// \t\t\"idle\": 1,\r\n// \t\t\"run\": {\r\n// \t\t\tfrom: 6,\r\n// \t\t\tto: 8,\r\n// \t\t\tspeed: 10,\r\n// \t\t\tloop: true,\r\n// \t\t},\r\n// \t\t\"jump\": 1\r\n// \t},\r\n// })\r\n\r\n// const SPEED = 120\r\n// const JUMP_FORCE = 240\r\n\r\n// gravity(640)\r\n\r\n// const player = add([\r\n// \tsprite(\"dino\"),\r\n// \tpos(center()),\r\n// \torigin(\"center\"),\r\n// \tscale(1/3) ,\r\n// \tarea(),\r\n// \tbody(),\r\n\t\r\n// ])\r\n\r\n// player.play(\"idle\")\r\n// add([\r\n// \trect(width(), 24),\r\n// \tarea(),\r\n// \toutline(1),\r\n// \tpos(0, height() - 24),\r\n// \tsolid(),\r\n// ])\r\n\r\n// player.onGround(() => {\r\n// \tif (!isKeyDown(\"left\") && !isKeyDown(\"right\")) {\r\n// \t\tplayer.play(\"idle\")\r\n// \t} else {\r\n// \t\tplayer.play(\"run\")\r\n// \t}\r\n// })\r\n\r\n// player.onAnimEnd(\"idle\", () => {\r\n// })\r\n\r\n// onKeyPress(\"space\", () => {\r\n// \tif (player.isGrounded()) {\r\n// \t\tplayer.jump(JUMP_FORCE)\r\n// \t\tplayer.play(\"jump\")\r\n// \t}\r\n// })\r\n\r\n// onKeyDown(\"left\", () => {\r\n// \tplayer.move(-SPEED, 0)\r\n// \tplayer.flipX(true)\r\n// \tif (player.isGrounded() && player.curAnim() !== \"run\") {\r\n// \t\tplayer.play(\"run\")\r\n// \t}\r\n// })\r\n\r\n// onKeyDown(\"right\", () => {\r\n// \tplayer.move(SPEED, 0)\r\n// \tplayer.flipX(false)\r\n// \tif (player.isGrounded() && player.curAnim() !== \"run\") {\r\n// \t\tplayer.play(\"run\")\r\n// \t}\r\n// })\r\n\r\n// onKeyRelease([\"left\", \"right\"], () => {\r\n// \tif (!isKeyDown(\"left\") && !isKeyDown(\"right\")) {\r\n// \t\tplayer.play(\"idle\")\r\n// \t}\r\n// })\r\n\r\n// const getInfo = () => `\r\n// Anim: ${player.curAnim()}\r\n// Frame: ${player.frame}\r\n// `.trim()\r\n\r\n// const label = add([\r\n// \ttext(getInfo()),\r\n// \tpos(4),\r\n// ])\r\n\r\n// label.onUpdate(() => {\r\n// \tlabel.text = getInfo()\r\n// })\r\n\r\nkaboom({\r\n\tbackground: [0, 0, 0],\r\n\twidth: 1000,\r\n\theight: 600\r\n})\r\nloadSprite(\"bean\", \"https://i.imgur.com/yZIb8O2.png\")\r\nloadSprite(\"grass\", \"https://i.imgur.com/vWJWmvb.png\")\r\nloadSprite(\"portal\", \"https://i.imgur.com/U9nre4n.png\")\r\n\r\n\r\nconst SPEED = 480\r\n\r\nconst LEVELS = [\r\n\t[\r\n\t\t\"@        \",\r\n\t\t\"        >\",\r\n\t\t\"=========\",\r\n\t],\r\n\t[\r\n\t\t\"@       >\",\r\n\t\t\"=========\",\r\n\t],\r\n]\r\n\r\n\r\nscene(\"game\", ({ levelIdx, score }) => {\r\n\tgravity(100)\r\n\tconst level = addLevel(LEVELS[levelIdx || 0], {\r\n\t\twidth: 64,\r\n\t\theight: 64,\r\n\t\tpos: vec2(100, 200),\r\n\t\t\"@\": () => [\r\n\t\t\tsprite(\"bean\"),\r\n\t\t\tarea(),\r\n\t\t\tbody(),\r\n\t\t\torigin(\"bot\"),\r\n\t\t\t\"player\",\r\n\t\t],\r\n\t\t\"=\": () => [\r\n\t\t\tsprite(\"grass\"),\r\n\t\t\tarea(),\r\n\t\t\tsolid(),\r\n\t\t\torigin(\"bot\"),\r\n\t\t],\r\n\t\t\">\": () => [\r\n\t\t\tsprite(\"portal\"),\r\n\t\t\tarea(),\r\n\t\t\torigin(\"bot\"),\r\n\t\t\t\"portal\",\r\n\t\t],\r\n\t})\r\n\tconst player = get(\"player\")[0]\r\n\tonKeyPress(\"space\", () => {\r\n\t\tif (player.isGrounded()) {\r\n\t\t\tplayer.jump()\r\n\t\t}\r\n\t})\r\n\r\n\tonKeyDown(\"left\", () => {\r\n\t\tplayer.move(-SPEED, 0)\r\n\t})\r\n\r\n\tonKeyDown(\"right\", () => {\r\n\t\tplayer.move(SPEED, 0)\r\n\t})\r\n\tplayer.onUpdate(() => {\r\n\t\tif (player.pos.y >= 480) {\r\n\t\t\tgo(\"lose\")\r\n\t\t}\r\n\t})\r\n\r\n\tplayer.onCollide(\"portal\", () => {\r\n\t\tif (levelIdx < LEVELS.length - 1) {\r\n\t\t\tgo(\"game\", {\r\n\t\t\t\tlevelIdx: levelIdx + 1,\r\n\t\t\t\tscore: score,\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tgo(\"win\", { score: score, })\r\n\t\t}\r\n\t})\r\n\r\n\tconst scoreLabel = add([\r\n\t\ttext(score),\r\n\t\tpos(12)\r\n\t])\r\n\r\n})\r\n\r\nscene(\"lose\", () => {\r\n\r\n\tadd([\r\n\t\ttext(\"You Lose\"),\r\n\t\tpos(12),\r\n\t])\r\n\r\n\tonKeyPress(start)\r\n\r\n})\r\n\r\nscene(\"win\", ({ score }) => {\r\n\r\n\tadd([\r\n\t\ttext(`Congratuation`, {\r\n\t\t\twidth: width(),\r\n\t\t}),\r\n\t\tpos(12),\r\n\t])\r\n\r\n\tonKeyPress(start)\r\n\r\n})\r\n\r\nfunction start() {\r\n\tgo(\"game\", {\r\n\t\tlevelIdx: 0,\r\n\t\tscore: 0,\r\n\t})\r\n}\r\n\r\nstart()\r\n\r\n","import {\n\tvec2,\n\tmat4,\n\tquad,\n\trgb,\n\thsl2rgb,\n\trng,\n\trand,\n\trandi,\n\trandSeed,\n\tchance,\n\tchoose,\n\tclamp,\n\tlerp,\n\tmap,\n\tmapc,\n\twave,\n\ttestAreaRect,\n\ttestAreaLine,\n\ttestAreaCircle,\n\ttestAreaPolygon,\n\ttestAreaPoint,\n\ttestAreaArea,\n\ttestLineLineT,\n\ttestRectRect2,\n\ttestLineLine,\n\ttestRectRect,\n\ttestRectLine,\n\ttestRectPoint,\n\ttestPolygonPoint,\n\ttestLinePolygon,\n\ttestPolygonPolygon,\n\ttestCircleCircle,\n\ttestCirclePoint,\n\ttestRectPolygon,\n\tminkDiff,\n\tdir,\n\tdeg2rad,\n\trad2deg,\n\tisVec2,\n} from \"./math\";\n\nimport {\n\toriginPt,\n\tgfxInit,\n} from \"./gfx\";\n\nimport {\n\tappInit,\n} from \"./app\";\n\nimport {\n\taudioInit,\n} from \"./audio\";\n\nimport {\n\tassetsInit,\n\tASCII_CHARS,\n\tCP437_CHARS,\n} from \"./assets\";\n\nimport {\n\tloggerInit,\n} from \"./logger\";\n\nimport {\n\tIDList,\n\tdownloadURL,\n\tdownloadBlob,\n} from \"./utils\";\n\nimport {\n\tKaboomCtx,\n\tKaboomOpt,\n\tAudioPlay,\n\tAudioPlayOpt,\n\tVec2,\n\tMat4,\n\tDrawSpriteOpt,\n\tDrawTextOpt,\n\tGameObj,\n\tTimer,\n\tEventCanceller,\n\tSceneID,\n\tSceneDef,\n\tCompList,\n\tComp,\n\tTag,\n\tKey,\n\tMouseButton,\n\tTouchID,\n\tCollision,\n\tPosComp,\n\tScaleComp,\n\tRotateComp,\n\tColorComp,\n\tOpacityComp,\n\tOrigin,\n\tOriginComp,\n\tLayerComp,\n\tZComp,\n\tFollowComp,\n\tMoveComp,\n\tCleanupComp,\n\tAreaCompOpt,\n\tAreaComp,\n\tArea,\n\tSpriteData,\n\tSpriteComp,\n\tSpriteCompOpt,\n\tGfxTexture,\n\tQuad,\n\tSpriteAnimPlayOpt,\n\tTextComp,\n\tTextCompOpt,\n\tRectComp,\n\tRectCompOpt,\n\tUVQuadComp,\n\tCircleComp,\n\tColor,\n\tOutlineComp,\n\tTimerComp,\n\tBodyComp,\n\tBodyCompOpt,\n\tUniform,\n\tShaderComp,\n\tSolidComp,\n\tFixedComp,\n\tStayComp,\n\tHealthComp,\n\tLifespanComp,\n\tLifespanCompOpt,\n\tStateComp,\n\tDebug,\n\tKaboomPlugin,\n\tMergeObj,\n\tLevel,\n\tLevelOpt,\n\tCursor,\n\tRecording,\n} from \"./types\";\n\nimport kaboomPlugin from \"./plugins/kaboom\";\n\nexport default (gopt: KaboomOpt = {}): KaboomCtx => {\n\nconst audio = audioInit();\n\nconst app = appInit({\n\twidth: gopt.width,\n\theight: gopt.height,\n\tscale: gopt.scale,\n\tcrisp: gopt.crisp,\n\tcanvas: gopt.canvas,\n\troot: gopt.root,\n\tstretch: gopt.stretch,\n\ttouchToMouse: gopt.touchToMouse ?? true,\n\taudioCtx: audio.ctx,\n});\n\nconst gfx = gfxInit(app.gl, {\n\tbackground: gopt.background ? rgb(gopt.background) : undefined,\n\twidth: gopt.width,\n\theight: gopt.height,\n\tscale: gopt.scale,\n\ttexFilter: gopt.texFilter,\n\tstretch: gopt.stretch,\n\tletterbox: gopt.letterbox,\n});\n\nconst {\n\twidth,\n\theight,\n} = gfx;\n\nconst assets = assetsInit(gfx, audio, {\n\terrHandler: (err: string) => {\n\t\tlogger.error(err);\n\t},\n});\n\nconst logger = loggerInit(gfx, assets, {\n\tmax: gopt.logMax,\n});\n\nconst DEF_FONT = \"apl386o\";\nconst DBG_FONT = \"sink\";\n\nfunction dt() {\n\treturn app.dt() * debug.timeScale;\n}\n\n// TODO: clean\nfunction play(id: string, opt: AudioPlayOpt = {}): AudioPlay {\n\tconst pb = audio.play({\n\t\tbuf: new AudioBuffer({\n\t\t\tlength: 1,\n\t\t\tnumberOfChannels: 1,\n\t\t\tsampleRate: 44100\n\t\t}),\n\t});\n\tonLoad(() => {\n\t\tconst snd = assets.sounds[id];\n\t\tif (!snd) {\n\t\t\tthrow new Error(`sound not found: \"${id}\"`);\n\t\t}\n\t\tconst pb2 = audio.play(snd, opt);\n\t\tfor (const k in pb2) {\n\t\t\tpb[k] = pb2[k];\n\t\t}\n\t});\n\treturn pb;\n}\n\nfunction mousePos(): Vec2 {\n\treturn app.mousePos();\n}\n\nfunction mouseWorldPos(): Vec2 {\n\treturn game.camMousePos;\n}\n\n// wrapper around gfx.drawTexture to integrate with sprite assets mananger / frame anim\nfunction drawSprite(opt: DrawSpriteOpt) {\n\tif (!opt.sprite) {\n\t\tthrow new Error(`drawSprite() requires property \"sprite\"`);\n\t}\n\tconst spr = (() => {\n\t\tif (typeof opt.sprite === \"string\") {\n\t\t\treturn assets.sprites[opt.sprite];\n\t\t} else {\n\t\t\treturn opt.sprite;\n\t\t}\n\t})();\n\tif (!spr) {\n\t\tthrow new Error(`sprite not found: \"${opt.sprite}\"`);\n\t}\n\tconst q = spr.frames[opt.frame ?? 0];\n\tif (!q) {\n\t\tthrow new Error(`frame not found: ${opt.frame ?? 0}`);\n\t}\n\tgfx.drawTexture({\n\t\t...opt,\n\t\ttex: spr.tex,\n\t\tquad: q.scale(opt.quad || quad(0, 0, 1, 1)),\n\t});\n}\n\n// wrapper around gfx.drawText to integrate with font assets mananger / default font\nfunction drawText(opt: DrawTextOpt) {\n\t// @ts-ignore\n\tconst fid = opt.font ?? DEF_FONT;\n\tconst font = assets.fonts[fid];\n\tif (!font) {\n\t\tthrow new Error(`font not found: ${fid}`);\n\t}\n\tgfx.drawText({\n\t\t...opt,\n\t\tfont: font,\n\t});\n}\n\nconst DEF_GRAVITY = 1600;\nconst DEF_ORIGIN = \"topleft\";\n\ninterface Game {\n\tloaded: boolean,\n\tevents: Record<string, IDList<() => void>>,\n\tobjEvents: Record<string, IDList<TaggedEvent>>,\n\tobjs: IDList<GameObj>,\n\ttimers: IDList<Timer>,\n\tcam: Camera,\n\tcamMousePos: Vec2,\n\tcamMatrix: Mat4,\n\tgravity: number,\n\tlayers: Record<string, number>,\n\tdefLayer: string | null,\n\ton<F>(ev: string, cb: F): EventCanceller,\n\ttrigger(ev: string, ...args),\n\tscenes: Record<SceneID, SceneDef>,\n\tpaused: boolean,\n};\n\ntype Camera = {\n\tpos: Vec2,\n\tscale: Vec2,\n\tangle: number,\n\tshake: number,\n};\n\ntype Layer = {\n\torder: number,\n}\n\ntype TaggedEvent = {\n\ttag: string,\n\tcb: (...args) => void,\n};\n\ntype KeyEvent = {\n\tkey: string,\n\tcb(),\n};\n\ntype MouseInputEvent = {\n\tcb(),\n};\n\ntype LoadEvent = () => void;\ntype NextFrameEvent = () => void;\ntype MouseEvent = () => void;\ntype CharEvent = (ch: string) => void;\n\nconst game: Game = {\n\n\tloaded: false,\n\n\t// event callbacks\n\tevents: {},\n\tobjEvents: {},\n\n\t// in game pool\n\tobjs: new IDList(),\n\ttimers: new IDList(),\n\n\t// cam\n\tcam: {\n\t\tpos: center(),\n\t\tscale: vec2(1),\n\t\tangle: 0,\n\t\tshake: 0,\n\t},\n\n\tcamMousePos: app.mousePos(),\n\tcamMatrix: mat4(),\n\n\t// misc\n\tlayers: {},\n\tdefLayer: null,\n\tgravity: DEF_GRAVITY,\n\n\ton<F>(ev: string, cb: F): EventCanceller {\n\t\tif (!this.events[ev]) {\n\t\t\tthis.events[ev] = new IDList();\n\t\t}\n\t\treturn this.events[ev].pushd(cb);\n\t},\n\n\ttrigger(ev: string, ...args) {\n\t\tif (this.events[ev]) {\n\t\t\tthis.events[ev].forEach((cb) => cb(...args));\n\t\t}\n\t},\n\n\tscenes: {},\n\tpaused: false,\n\n};\n\nfunction layers(list: string[], def?: string) {\n\n\tlist.forEach((name, idx) => {\n\t\tgame.layers[name] = idx + 1;\n\t});\n\n\tif (def) {\n\t\tgame.defLayer = def;\n\t}\n\n}\n\nfunction camPos(...pos): Vec2 {\n\tif (pos.length > 0) {\n\t\tgame.cam.pos = vec2(...pos);\n\t}\n\treturn game.cam.pos.clone();\n}\n\nfunction camScale(...scale): Vec2 {\n\tif (scale.length > 0) {\n\t\tgame.cam.scale = vec2(...scale);\n\t}\n\treturn game.cam.scale.clone();\n}\n\nfunction camRot(angle: number): number {\n\tif (angle !== undefined) {\n\t\tgame.cam.angle = angle;\n\t}\n\treturn game.cam.angle;\n}\n\nfunction shake(intensity: number = 12) {\n\tgame.cam.shake = intensity;\n}\n\nfunction toScreen(p: Vec2): Vec2 {\n\treturn game.camMatrix.multVec2(p);\n}\n\nfunction toWorld(p: Vec2): Vec2 {\n\treturn game.camMatrix.invert().multVec2(p);\n}\n\nconst COMP_DESC = new Set([\n\t\"id\",\n\t\"require\",\n]);\n\nconst COMP_EVENTS = new Set([\n\t\"add\",\n\t\"load\",\n\t\"update\",\n\t\"draw\",\n\t\"destroy\",\n\t\"inspect\",\n]);\n\nfunction make<T>(comps: CompList<T>): GameObj<T> {\n\n\tconst compStates = new Map();\n\tconst customState = {};\n\tconst events = {};\n\n\tconst obj = {\n\n\t\t_id: null,\n\t\thidden: false,\n\t\tpaused: false,\n\n\t\t// use a comp, or tag\n\t\tuse(comp: Comp | Tag) {\n\n\t\t\tif (!comp) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// tag\n\t\t\tif (typeof comp === \"string\") {\n\t\t\t\treturn this.use({\n\t\t\t\t\tid: comp\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// clear if overwrite\n\t\t\tif (comp.id) {\n\t\t\t\tthis.unuse(comp.id);\n\t\t\t\tcompStates.set(comp.id, {});\n\t\t\t}\n\n\t\t\t// state source location\n\t\t\tconst state = comp.id ? compStates.get(comp.id) : customState;\n\n\t\t\tstate.cleanups = [];\n\n\t\t\tfor (const k in comp) {\n\n\t\t\t\tif (COMP_DESC.has(k)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// event / custom method\n\t\t\t\tif (typeof comp[k] === \"function\") {\n\t\t\t\t\tconst func = comp[k].bind(this);\n\t\t\t\t\tif (COMP_EVENTS.has(k)) {\n\t\t\t\t\t\tstate.cleanups.push(this.on(k, func));\n\t\t\t\t\t\tstate[k] = func;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstate[k] = func;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tstate[k] = comp[k];\n\t\t\t\t}\n\n\t\t\t\tif (this[k] === undefined) {\n\t\t\t\t\t// assign comp fields to game obj\n\t\t\t\t\tObject.defineProperty(this, k, {\n\t\t\t\t\t\tget: () => state[k],\n\t\t\t\t\t\tset: (val) => state[k] = val,\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst checkDeps = () => {\n\t\t\t\tif (!comp.require) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfor (const dep of comp.require) {\n\t\t\t\t\tif (!this.c(dep)) {\n\t\t\t\t\t\tthrow new Error(`comp '${comp.id}' requires comp '${dep}'`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// check deps or run add event\n\t\t\tif (this.exists()) {\n\t\t\t\tif (comp.add) {\n\t\t\t\t\tcomp.add.call(this);\n\t\t\t\t}\n\t\t\t\tif (comp.load) {\n\t\t\t\t\tonLoad(() => comp.load.call(this));\n\t\t\t\t}\n\t\t\t\tcheckDeps();\n\t\t\t} else {\n\t\t\t\tif (comp.require) {\n\t\t\t\t\tstate.cleanups.push(this.on(\"add\", () => {\n\t\t\t\t\t\tcheckDeps();\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\tunuse(id: Tag) {\n\t\t\tif (compStates.has(id)) {\n\t\t\t\tconst comp = compStates.get(id);\n\t\t\t\tcomp.cleanups.forEach((f) => f());\n\t\t\t\tfor (const k in comp) {\n\t\t\t\t\tdelete comp[k];\n\t\t\t\t}\n\t\t\t}\n\t\t\tcompStates.delete(id);\n\t\t},\n\n\t\tc(id: Tag): Comp {\n\t\t\treturn compStates.get(id);\n\t\t},\n\n\t\texists(): boolean {\n\t\t\treturn this._id !== null;\n\t\t},\n\n\t\tis(tag: Tag | Tag[]): boolean {\n\t\t\tif (tag === \"*\") {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (Array.isArray(tag)) {\n\t\t\t\tfor (const t of tag) {\n\t\t\t\t\tif (!this.c(t)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn this.c(tag) != null;\n\t\t\t}\n\t\t},\n\n\t\ton(ev: string, cb): EventCanceller {\n\t\t\tif (!events[ev]) {\n\t\t\t\tevents[ev] = new IDList();\n\t\t\t}\n\t\t\treturn events[ev].pushd(cb);\n\t\t},\n\n\t\taction(...args): EventCanceller {\n\t\t\treturn this.onUpdate(...args);\n\t\t},\n\n\t\ttrigger(ev: string, ...args): void {\n\n\t\t\tif (events[ev]) {\n\t\t\t\tevents[ev].forEach((cb) => cb.call(this, ...args));\n\t\t\t}\n\n\t\t\tconst gEvents = game.objEvents[ev];\n\n\t\t\tif (gEvents) {\n\t\t\t\tgEvents.forEach((e) => {\n\t\t\t\t\tif (this.is(e.tag)) {\n\t\t\t\t\t\te.cb(this, ...args);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t},\n\n\t\tdestroy() {\n\n\t\t\tif (!this.exists()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.trigger(\"destroy\");\n\t\t\tgame.objs.delete(this._id);\n\t\t\tthis._id = null;\n\n\t\t},\n\n\t\tinspect() {\n\t\t\tconst info = {};\n\t\t\tfor (const [tag, comp] of compStates) {\n\t\t\t\tinfo[tag] = comp.inspect ? comp.inspect() : null;\n\t\t\t}\n\t\t\treturn info;\n\t\t},\n\n\t\tonUpdate(cb: () => void): EventCanceller {\n\t\t\treturn this.on(\"update\", cb);\n\t\t},\n\n\t\tonDraw(cb: () => void): EventCanceller {\n\t\t\treturn this.on(\"draw\", cb);\n\t\t},\n\n\t\tonDestroy(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"destroy\", action);\n\t\t},\n\n\t};\n\n\tfor (const comp of comps) {\n\t\tobj.use(comp);\n\t}\n\n\treturn obj as unknown as GameObj<T>;\n\n}\n\nfunction add<T>(comps: CompList<T>): GameObj<T> {\n\tconst obj = make(comps);\n\tobj._id = game.objs.push(obj);\n\tobj.trigger(\"add\");\n\tonLoad(() => obj.trigger(\"load\"));\n\treturn obj;\n}\n\nfunction readd(obj: GameObj): GameObj {\n\tif (!obj.exists()) {\n\t\treturn;\n\t}\n\tgame.objs.delete(obj._id);\n\tobj._id = game.objs.push(obj);\n\treturn obj;\n}\n\n// add an event to a tag\nfunction on(event: string, tag: Tag, cb: (obj: GameObj, ...args) => void): EventCanceller {\n\tif (!game.objEvents[event]) {\n\t\tgame.objEvents[event] = new IDList();\n\t}\n\treturn game.objEvents[event].pushd({\n\t\ttag: tag,\n\t\tcb: cb,\n\t});\n}\n\n// TODO: detect if is currently in another action?\n// add update event to a tag or global update\nfunction onUpdate(tag: Tag | (() => void), cb?: (obj: GameObj) => void): EventCanceller {\n\tif (typeof tag === \"function\" && cb === undefined) {\n\t\treturn add([{ update: tag, }]).destroy;\n\t} else if (typeof tag === \"string\") {\n\t\treturn on(\"update\", tag, cb);\n\t}\n}\n\n// add draw event to a tag or global draw\nfunction onDraw(tag: Tag | (() => void), cb?: (obj: GameObj) => void) {\n\tif (typeof tag === \"function\" && cb === undefined) {\n\t\treturn add([{ draw: tag, }]).destroy;\n\t} else if (typeof tag === \"string\") {\n\t\treturn on(\"draw\", tag, cb);\n\t}\n}\n\n// add an event that runs with objs with t1 collides with objs with t2\nfunction onCollide(\n\tt1: Tag,\n\tt2: Tag,\n\tf: (a: GameObj, b: GameObj, col?: Collision) => void,\n): EventCanceller {\n\tconst e1 = on(\"collide\", t1, (a, b, col) => b.is(t2) && f(a, b, col));\n\tconst e2 = on(\"collide\", t2, (a, b, col) => b.is(t1) && f(b, a, col));\n\tconst e3 = onUpdate(t1, (o1: GameObj) => {\n\t\tif (!o1.area) {\n\t\t\tthrow new Error(\"onCollide() requires the object to have area() component\");\n\t\t}\n\t\to1._checkCollisions(t2, (o2) => {\n\t\t\tf(o1, o2);\n\t\t});\n\t});\n\treturn () => [e1, e2, e3].forEach((f) => f());\n}\n\n// add an event that runs when objs with tag t is clicked\nfunction onClick(tag: Tag | (() => void), cb?: (obj: GameObj) => void): EventCanceller {\n\tif (typeof tag === \"function\") {\n\t\treturn onMousePress(tag);\n\t} else {\n\t\treturn onUpdate(tag, (o: GameObj) => {\n\t\t\tif (!o.area) throw new Error(\"onClick() requires the object to have area() component\");\n\t\t\tif (o.isClicked()) {\n\t\t\t\tcb(o);\n\t\t\t}\n\t\t});\n\t}\n}\n\n// add an event that runs when objs with tag t is hovered\nfunction onHover(t: string, onHover: (obj: GameObj) => void, onNotHover?: (obj: GameObj) => void): EventCanceller {\n\treturn onUpdate(t, (o: GameObj) => {\n\t\tif (!o.area) throw new Error(\"onHover() requires the object to have area() component\");\n\t\tif (o.isHovering()) {\n\t\t\tonHover(o);\n\t\t} else {\n\t\t\tif (onNotHover) {\n\t\t\t\tonNotHover(o);\n\t\t\t}\n\t\t}\n\t});\n}\n\n// add an event that'd be run after t\nfunction wait(t: number, f?: () => void): Promise<void> {\n\treturn new Promise((resolve) => {\n\t\tgame.timers.push({\n\t\t\ttime: t,\n\t\t\taction: () => {\n\t\t\t\tif (f) {\n\t\t\t\t\tf();\n\t\t\t\t}\n\t\t\t\tresolve();\n\t\t\t},\n\t\t});\n\t});\n}\n\n// add an event that's run every t seconds\nfunction loop(t: number, f: () => void): EventCanceller {\n\n\tlet stopped = false;\n\n\tconst newF = () => {\n\t\tif (stopped) {\n\t\t\treturn;\n\t\t}\n\t\tf();\n\t\twait(t, newF);\n\t};\n\n\tnewF();\n\n\treturn () => stopped = true;\n\n}\n\n// input callbacks\nfunction onKeyDown(k: Key | Key[], f: () => void): EventCanceller {\n\tif (Array.isArray(k)) {\n\t\tconst cancellers = k.map((key) => onKeyDown(key, f));\n\t\treturn () => cancellers.forEach((cb) => cb());\n\t} {\n\t\treturn game.on(\"input\", () => app.isKeyDown(k) && f());\n\t}\n}\n\nfunction onKeyPress(k: Key | Key[] | (() => void), f?: () => void): EventCanceller {\n\tif (Array.isArray(k)) {\n\t\tconst cancellers = k.map((key) => onKeyPress(key, f));\n\t\treturn () => cancellers.forEach((cb) => cb());\n\t} else if (typeof k === \"function\") {\n\t\treturn game.on(\"input\", () => app.isKeyPressed() && k());\n\t} else {\n\t\treturn game.on(\"input\", () => app.isKeyPressed(k) && f());\n\t}\n}\n\nfunction onKeyPressRepeat(k: Key | Key[] | (() => void), f?: () => void): EventCanceller {\n\tif (Array.isArray(k)) {\n\t\tconst cancellers = k.map((key) => onKeyPressRepeat(key, f));\n\t\treturn () => cancellers.forEach((cb) => cb());\n\t} else if (typeof k === \"function\") {\n\t\treturn game.on(\"input\", () => app.isKeyPressed() && k());\n\t} else {\n\t\treturn game.on(\"input\", () => app.isKeyPressedRepeat(k) && f());\n\t}\n}\n\nfunction onKeyRelease(k: Key | Key[] | (() => void), f?: () => void): EventCanceller {\n\tif (Array.isArray(k)) {\n\t\tconst cancellers = k.map((key) => onKeyRelease(key, f));\n\t\treturn () => cancellers.forEach((cb) => cb());\n\t} else if (typeof k === \"function\") {\n\t\treturn game.on(\"input\", () => app.isKeyReleased() && k());\n\t} else {\n\t\treturn game.on(\"input\", () => app.isKeyReleased(k) && f());\n\t}\n}\n\nfunction onMouseDown(\n\tm: MouseButton | ((pos?: Vec2) => void),\n\taction?: (pos?: Vec2) => void\n): EventCanceller {\n\tif (typeof m === \"function\") {\n\t\treturn game.on(\"input\", () => app.isMouseDown() && m(mousePos()));\n\t} else {\n\t\treturn game.on(\"input\", () => app.isMouseDown(m) && action(mousePos()));\n\t}\n}\n\nfunction onMousePress(\n\tm: MouseButton | ((pos?: Vec2) => void),\n\taction?: (pos?: Vec2) => void\n): EventCanceller {\n\tif (typeof m === \"function\") {\n\t\treturn game.on(\"input\", () => app.isMousePressed() && m(mousePos()));\n\t} else {\n\t\treturn game.on(\"input\", () => app.isMousePressed(m) && action(mousePos()));\n\t}\n}\n\nfunction onMouseRelease(\n\tm: MouseButton | ((pos?: Vec2) => void),\n\taction?: (pos?: Vec2) => void\n): EventCanceller {\n\tif (typeof m === \"function\") {\n\t\treturn game.on(\"input\", () => app.isMouseReleased() && m(mousePos()));\n\t} else {\n\t\treturn game.on(\"input\", () => app.isMouseReleased(m) && action(mousePos()));\n\t}\n}\n\nfunction onMouseMove(f: (pos: Vec2, dpos: Vec2) => void): EventCanceller {\n\treturn game.on(\"input\", () => app.isMouseMoved() && f(mousePos(), app.mouseDeltaPos()));\n}\n\nfunction onCharInput(f: (ch: string) => void): EventCanceller {\n\treturn game.on(\"input\", () => app.charInputted().forEach((ch) => f(ch)));\n}\n\n// TODO: put this in app.ts's and handle in game loop\napp.canvas.addEventListener(\"touchstart\", (e) => {\n\t[...e.changedTouches].forEach((t) => {\n\t\tgame.trigger(\"onTouchStart\", t.identifier, vec2(t.clientX, t.clientY).scale(1 / app.scale));\n\t});\n});\n\napp.canvas.addEventListener(\"touchmove\", (e) => {\n\t[...e.changedTouches].forEach((t) => {\n\t\tgame.trigger(\"onTouchMove\", t.identifier, vec2(t.clientX, t.clientY).scale(1 / app.scale));\n\t});\n});\n\napp.canvas.addEventListener(\"touchmove\", (e) => {\n\t[...e.changedTouches].forEach((t) => {\n\t\tgame.trigger(\"onTouchEnd\", t.identifier, vec2(t.clientX, t.clientY).scale(1 / app.scale));\n\t});\n});\n\nfunction onTouchStart(f: (id: TouchID, pos: Vec2) => void): EventCanceller {\n\treturn game.on(\"onTouchStart\", f);\n}\n\nfunction onTouchMove(f: (id: TouchID, pos: Vec2) => void): EventCanceller {\n\treturn game.on(\"onTouchMove\", f);\n}\n\nfunction onTouchEnd(f: (id: TouchID, pos: Vec2) => void): EventCanceller {\n\treturn game.on(\"onTouchEnd\", f);\n}\n\nfunction enterDebugMode() {\n\n\tonKeyPress(\"f1\", () => {\n\t\tdebug.inspect = !debug.inspect;\n\t});\n\n\tonKeyPress(\"f2\", () => {\n\t\tdebug.clearLog();\n\t});\n\n\tonKeyPress(\"f8\", () => {\n\t\tdebug.paused = !debug.paused;\n\t});\n\n\tonKeyPress(\"f7\", () => {\n\t\tdebug.timeScale = toFixed(clamp(debug.timeScale - 0.2, 0, 2), 1);\n\t});\n\n\tonKeyPress(\"f9\", () => {\n\t\tdebug.timeScale = toFixed(clamp(debug.timeScale + 0.2, 0, 2), 1);\n\t});\n\n\tonKeyPress(\"f10\", () => {\n\t\tdebug.stepFrame();\n\t});\n\n\tonKeyPress(\"f5\", () => {\n\t\tdownloadURL(app.screenshot(), \"kaboom.png\");\n\t});\n\n\tonKeyPress(\"f6\", () => {\n\t\tif (debug.curRecording) {\n\t\t\tdebug.curRecording.download();\n\t\t\tdebug.curRecording = null;\n\t\t} else {\n\t\t\tdebug.curRecording = record();\n\t\t}\n\t});\n\n}\n\nfunction enterBurpMode() {\n\tonKeyPress(\"b\", audio.burp);\n}\n\n// TODO: cache sorted list\n// get all objects with tag\nfunction get(t?: Tag | Tag[]): GameObj[] {\n\n\tconst objs = [...game.objs.values()].sort((o1, o2) => {\n\n\t\tconst l1 = game.layers[o1.layer ?? game.defLayer] ?? 0;\n\t\tconst l2 = game.layers[o2.layer ?? game.defLayer] ?? 0;\n\n\t\t// if on same layer, use \"z\" comp to decide which is on top, if given\n\t\tif (l1 == l2) {\n\t\t\treturn (o1.z ?? 0) - (o2.z ?? 0);\n\t\t} else {\n\t\t\treturn l1 - l2;\n\t\t}\n\n\t});\n\n\tif (!t) {\n\t\treturn objs;\n\t} else {\n\t\treturn objs.filter(obj => obj.is(t));\n\t}\n\n}\n\n// apply a function to all objects currently in game with tag t\nfunction every<T>(t: Tag | Tag[] | ((obj: GameObj) => T), f?: (obj: GameObj) => T) {\n\tif (typeof t === \"function\" && f === undefined) {\n\t\treturn get().forEach((obj) => obj.exists() && t(obj));\n\t} else if (typeof t === \"string\" || Array.isArray(t)) {\n\t\treturn get(t).forEach((obj) => obj.exists() && f(obj));\n\t}\n}\n\n// every but in reverse order\nfunction revery<T>(t: Tag | Tag[] | ((obj: GameObj) => T), f?: (obj: GameObj) => T) {\n\tif (typeof t === \"function\" && f === undefined) {\n\t\treturn get().reverse().forEach((obj) => obj.exists() && t(obj));\n\t} else if (typeof t === \"string\" || Array.isArray(t)) {\n\t\treturn get(t).reverse().forEach((obj) => obj.exists() && f(obj));\n\t}\n}\n\n// destroy an obj\nfunction destroy(obj: GameObj) {\n\tobj.destroy();\n}\n\n// destroy all obj with the tag\nfunction destroyAll(t: string) {\n\tevery(t, destroy);\n}\n\n// get / set gravity\nfunction gravity(g?: number): number {\n\tif (g !== undefined) {\n\t\tgame.gravity = g;\n\t}\n\treturn game.gravity;\n}\n\nfunction regCursor(c: Cursor, draw: string | ((mpos: Vec2) => void)) {\n\t// TODO\n}\n\nfunction makeCollision(target: GameObj<any>, dis: Vec2): Collision {\n\treturn {\n\t\ttarget: target,\n\t\tdisplacement: dis,\n\t\tisTop: () => dis.y > 0,\n\t\tisBottom: () => dis.y < 0,\n\t\tisLeft: () => dis.x > 0,\n\t\tisRight: () => dis.x < 0,\n\t};\n}\n\n// TODO: manage global velocity here?\nfunction pos(...args): PosComp {\n\n\treturn {\n\n\t\tid: \"pos\",\n\t\tpos: vec2(...args),\n\n\t\t// TODO: clean\n\t\tmoveBy(...args): Collision | null {\n\n\t\t\tconst p = vec2(...args);\n\t\t\tlet dx = p.x;\n\t\t\tlet dy = p.y;\n\t\t\tlet col = null;\n\n\t\t\tif (this.solid && this.area?.shape === \"rect\") {\n\n\t\t\t\tlet a1 = this.worldArea();\n\n\t\t\t\t// TODO: definitely shouln't iterate through all solid objs\n\t\t\t\tevery((other) => {\n\n\t\t\t\t\t// make sure we still exist, don't check with self, and only\n\t\t\t\t\t// check with other solid objects\n\t\t\t\t\tif (\n\t\t\t\t\t\t!this.exists()\n\t\t\t\t\t\t|| other === this\n\t\t\t\t\t\t|| !other.solid\n\t\t\t\t\t\t|| other.area?.shape !== \"rect\"\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst a2 = other.worldArea();\n\t\t\t\t\tlet md = minkDiff(a2, a1);\n\n\t\t\t\t\t// if they're already overlapping, push them away first\n\t\t\t\t\tif (testRectPoint(md, vec2(0))) {\n\n\t\t\t\t\t\tlet dist = Math.min(\n\t\t\t\t\t\t\tMath.abs(md.p1.x),\n\t\t\t\t\t\t\tMath.abs(md.p2.x),\n\t\t\t\t\t\t\tMath.abs(md.p1.y),\n\t\t\t\t\t\t\tMath.abs(md.p2.y),\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst res = (() => {\n\t\t\t\t\t\t\tswitch (dist) {\n\t\t\t\t\t\t\t\tcase Math.abs(md.p1.x): return vec2(dist, 0);\n\t\t\t\t\t\t\t\tcase Math.abs(md.p2.x): return vec2(-dist, 0);\n\t\t\t\t\t\t\t\tcase Math.abs(md.p1.y): return vec2(0, dist);\n\t\t\t\t\t\t\t\tcase Math.abs(md.p2.y): return vec2(0, -dist);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})();\n\n\t\t\t\t\t\tthis.pos = this.pos.sub(res);\n\n\t\t\t\t\t\t// calculate new mink diff\n\t\t\t\t\t\ta1 = this.worldArea();\n\t\t\t\t\t\tmd = minkDiff(a2, a1);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst ray = { p1: vec2(0), p2: vec2(dx, dy) };\n\t\t\t\t\tlet minT = 1;\n\t\t\t\t\tconst p1 = md.p1;\n\t\t\t\t\tconst p2 = vec2(md.p1.x, md.p2.y);\n\t\t\t\t\tconst p3 = md.p2;\n\t\t\t\t\tconst p4 = vec2(md.p2.x, md.p1.y);\n\t\t\t\t\tlet numCols = 0;\n\t\t\t\t\tconst lines = {\n\t\t\t\t\t\t\"right\": { p1: p1, p2: p2, },\n\t\t\t\t\t\t\"top\": { p1: p2, p2: p3, },\n\t\t\t\t\t\t\"left\": { p1: p3, p2: p4, },\n\t\t\t\t\t\t\"bottom\": { p1: p4, p2: p1, },\n\t\t\t\t\t};\n\n\t\t\t\t\tfor (const s in lines) {\n\t\t\t\t\t\tconst line = lines[s];\n\t\t\t\t\t\t// if moving along a side, we forgive\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t(dx === 0 && line.p1.x === 0 && line.p2.x === 0)\n\t\t\t\t\t\t\t||\n\t\t\t\t\t\t\t(dy === 0 && line.p1.y === 0 && line.p2.y === 0)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tminT = 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst t = testLineLineT(ray, line);\n\t\t\t\t\t\tif (t != null) {\n\t\t\t\t\t\t\tnumCols++;\n\t\t\t\t\t\t\tif (t < minT) {\n\t\t\t\t\t\t\t\tminT = t;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// if moving away, we forgive\n\t\t\t\t\tif (\n\t\t\t\t\t\tminT < 1\n\t\t\t\t\t\t&& !(minT === 0 && numCols == 1 && !testRectPoint(md, vec2(dx, dy)))\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst dis = vec2(-dx * (1 - minT), -dy * (1 - minT));\n\t\t\t\t\t\tdx *= minT;\n\t\t\t\t\t\tdy *= minT;\n\t\t\t\t\t\tcol = makeCollision(other, dis);\n\t\t\t\t\t}\n\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t\tthis.pos.x += dx;\n\t\t\tthis.pos.y += dy;\n\n\t\t\tif (col) {\n\t\t\t\tthis.trigger(\"collide\", col.target, col);\n\t\t\t\tcol.target.trigger(\"collide\", this, makeCollision(this, col.displacement.scale(-1)));\n\t\t\t}\n\n\t\t\treturn col;\n\n\t\t},\n\n\t\t// move with velocity (pixels per second)\n\t\tmove(...args): Collision | null {\n\t\t\treturn this.moveBy(vec2(...args).scale(dt()));\n\t\t},\n\n\t\t// move to a destination, with optional speed\n\t\tmoveTo(...args) {\n\t\t\tif (typeof args[0] === \"number\" && typeof args[1] === \"number\") {\n\t\t\t\treturn this.moveTo(vec2(args[0], args[1]), args[2]);\n\t\t\t}\n\t\t\tconst dest = args[0];\n\t\t\tconst speed = args[1];\n\t\t\tif (speed === undefined) {\n\t\t\t\tthis.pos = vec2(dest);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst diff = dest.sub(this.pos);\n\t\t\tif (diff.len() <= speed * dt()) {\n\t\t\t\tthis.pos = vec2(dest);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.move(diff.unit().scale(speed));\n\t\t},\n\n\t\t// get the screen position (transformed by camera)\n\t\tscreenPos(): Vec2 {\n\t\t\tif (this.fixed) {\n\t\t\t\treturn this.pos;\n\t\t\t} else {\n\t\t\t\treturn toScreen(this.pos);\n\t\t\t}\n\t\t},\n\n\t\tinspect() {\n\t\t\treturn `(${Math.round(this.pos.x)}, ${Math.round(this.pos.y)})`;\n\t\t},\n\n\t};\n\n};\n\n// TODO: allow single number assignment\nfunction scale(...args): ScaleComp {\n\tif (args.length === 0) {\n\t\treturn scale(1);\n\t}\n\treturn {\n\t\tid: \"scale\",\n\t\tscale: vec2(...args),\n\t\tscaleTo(...args) {\n\t\t\tthis.scale = vec2(...args);\n\t\t},\n\t\tinspect() {\n\t\t\tif (typeof this.scale === \"number\") {\n\t\t\t\treturn `${toFixed(this.scale, 2)}`;\n\t\t\t} else {\n\t\t\t\treturn `(${toFixed(this.scale.x, 2)}, ${toFixed(this.scale.y, 2)})`;\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction rotate(r: number): RotateComp {\n\treturn {\n\t\tid: \"rotate\",\n\t\tangle: r ?? 0,\n\t\tinspect() {\n\t\t\treturn `${Math.round(this.angle)}`;\n\t\t},\n\t};\n}\n\nfunction color(...args): ColorComp {\n\treturn {\n\t\tid: \"color\",\n\t\tcolor: rgb(...args),\n\t\tinspect() {\n\t\t\treturn this.color.str();\n\t\t},\n\t};\n}\n\nfunction toFixed(n: number, f: number) {\n\treturn Number(n.toFixed(f));\n}\n\nfunction opacity(a: number): OpacityComp {\n\treturn {\n\t\tid: \"opacity\",\n\t\topacity: a ?? 1,\n\t\tinspect() {\n\t\t\treturn `${toFixed(this.opacity, 2)}`;\n\t\t},\n\t};\n}\n\nfunction origin(o: Origin | Vec2): OriginComp {\n\tif (!o) {\n\t\tthrow new Error(\"please define an origin\");\n\t}\n\treturn {\n\t\tid: \"origin\",\n\t\torigin: o,\n\t\tinspect() {\n\t\t\tif (typeof this.origin === \"string\") {\n\t\t\t\treturn this.origin;\n\t\t\t} else {\n\t\t\t\treturn this.origin.str();\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction layer(l: string): LayerComp {\n\treturn {\n\t\tid: \"layer\",\n\t\tlayer: l,\n\t\tinspect() {\n\t\t\treturn this.layer ?? game.defLayer;\n\t\t},\n\t};\n}\n\nfunction z(z: number): ZComp {\n\treturn {\n\t\tid: \"z\",\n\t\tz: z,\n\t\tinspect() {\n\t\t\treturn `${this.z}`;\n\t\t},\n\t};\n}\n\nfunction follow(obj: GameObj, offset?: Vec2): FollowComp {\n\treturn {\n\t\tid: \"follow\",\n\t\trequire: [ \"pos\", ],\n\t\tfollow: {\n\t\t\tobj: obj,\n\t\t\toffset: offset ?? vec2(0),\n\t\t},\n\t\tadd() {\n\t\t\tif (obj.exists()) {\n\t\t\t\tthis.pos = this.follow.obj.pos.add(this.follow.offset);\n\t\t\t}\n\t\t},\n\t\tupdate() {\n\t\t\tif (obj.exists()) {\n\t\t\t\tthis.pos = this.follow.obj.pos.add(this.follow.offset);\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction move(direction: number | Vec2, speed: number): MoveComp {\n\tconst d = typeof direction === \"number\" ? dir(direction) : direction.unit();\n\treturn {\n\t\tid: \"move\",\n\t\trequire: [ \"pos\", ],\n\t\tupdate() {\n\t\t\tthis.move(d.scale(speed));\n\t\t},\n\t};\n}\n\nfunction cleanup(time: number = 0): CleanupComp {\n\tlet timer = 0;\n\treturn {\n\t\tid: \"cleanup\",\n\t\trequire: [ \"pos\", \"area\", ],\n\t\tupdate() {\n\t\t\tconst screenRect = {\n\t\t\t\tp1: vec2(0, 0),\n\t\t\t\tp2: vec2(width(), height()),\n\t\t\t}\n\t\t\tif (testAreaRect(this.screenArea(), screenRect)) {\n\t\t\t\ttimer = 0;\n\t\t\t} else {\n\t\t\t\ttimer += dt();\n\t\t\t\tif (timer >= time) {\n\t\t\t\t\tthis.destroy();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction area(opt: AreaCompOpt = {}): AreaComp {\n\n\tconst colliding = {};\n\n\treturn {\n\n\t\tid: \"area\",\n\n\t\tadd() {\n\t\t\tif (this.area.cursor) {\n\t\t\t\tthis.hovers(() => {\n\t\t\t\t\tapp.cursor(this.area.cursor);\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\tarea: {\n\t\t\tshape: \"rect\",\n\t\t\toffset: opt.offset ?? vec2(0),\n\t\t\twidth: opt.width,\n\t\t\theight: opt.height,\n\t\t\tscale: opt.scale ?? vec2(1),\n\t\t\tcursor: opt.cursor,\n\t\t},\n\n\t\tisClicked(): boolean {\n\t\t\treturn app.isMousePressed() && this.isHovering();\n\t\t},\n\n\t\tisHovering() {\n\t\t\tconst mpos = this.fixed ? mousePos() : mouseWorldPos();\n\t\t\treturn this.hasPoint(mpos);\n\t\t},\n\n\t\tisColliding(other) {\n\t\t\tif (!other.area || !other.exists()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst a1 = this.worldArea();\n\t\t\tconst a2 = other.worldArea();\n\t\t\treturn testAreaArea(a1, a2);\n\t\t},\n\n\t\tisTouching(other) {\n\t\t\tif (!other.area || !other.exists()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// TODO: support other shapes\n\t\t\tconst a1 = this.worldArea();\n\t\t\tconst a2 = other.worldArea();\n\t\t\treturn testRectRect2(a1, a2);\n\t\t},\n\n\t\tonClick(f: () => void): EventCanceller {\n\t\t\treturn this.onUpdate(() => {\n\t\t\t\tif (this.isClicked()) {\n\t\t\t\t\tf();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tonHover(onHover: () => void, onNotHover: () => void): EventCanceller {\n\t\t\treturn this.onUpdate(() => {\n\t\t\t\tif (this.isHovering()) {\n\t\t\t\t\tonHover();\n\t\t\t\t} else {\n\t\t\t\t\tif (onNotHover) {\n\t\t\t\t\t\tonNotHover();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tonCollide(tag: Tag, f: (o: GameObj, col?: Collision) => void): EventCanceller {\n\t\t\tconst e1 = this.onUpdate(() => this._checkCollisions(tag, f));\n\t\t\tconst e2 = this.on(\"collide\", (obj, col) => obj.is(tag) && f(obj, col));\n\t\t\treturn () => [e1, e2].forEach((f) => f());\n\t\t},\n\n\t\tclicks(...args) {\n\t\t\treturn this.onClick(...args);\n\t\t},\n\n\t\thovers(...args) {\n\t\t\treturn this.onHover(...args);\n\t\t},\n\n\t\tcollides(...args) {\n\t\t\treturn this.onCollide(...args);\n\t\t},\n\n\t\thasPoint(pt: Vec2): boolean {\n\t\t\treturn testAreaPoint(this.worldArea(), pt);\n\t\t},\n\n\t\t// push an obj out of another if they're overlapped\n\t\tpushOut(obj: GameObj): Vec2 | null {\n\n\t\t\tif (obj === this) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// TODO: support other shapes\n\t\t\tif (obj.area?.shape !== \"rect\") {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst a1 = this.worldArea();\n\t\t\tconst a2 = obj.worldArea();\n\t\t\tconst md = minkDiff(a1, a2);\n\n\t\t\tif (!testRectPoint(md, vec2(0))) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tlet dist = Math.min(\n\t\t\t\tMath.abs(md.p1.x),\n\t\t\t\tMath.abs(md.p2.x),\n\t\t\t\tMath.abs(md.p1.y),\n\t\t\t\tMath.abs(md.p2.y),\n\t\t\t);\n\n\t\t\tconst res = (() => {\n\t\t\t\tswitch (dist) {\n\t\t\t\t\tcase Math.abs(md.p1.x): return vec2(dist, 0);\n\t\t\t\t\tcase Math.abs(md.p2.x): return vec2(-dist, 0);\n\t\t\t\t\tcase Math.abs(md.p1.y): return vec2(0, dist);\n\t\t\t\t\tcase Math.abs(md.p2.y): return vec2(0, -dist);\n\t\t\t\t}\n\t\t\t})();\n\n\t\t\tthis.pos = this.pos.add(res);\n\n\t\t},\n\n\t\t// push object out of other solid objects\n\t\tpushOutAll() {\n\t\t\tevery(this.pushOut);\n\t\t},\n\n\t\t// @ts-ignore\n\t\t_checkCollisions(tag: Tag) {\n\n\t\t\tevery(tag, (obj) => {\n\n\t\t\t\tif (this === obj || !this.exists() || colliding[obj._id]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (this.isColliding(obj)) {\n\t\t\t\t\tthis.trigger(\"collide\", obj, null);\n\t\t\t\t\tcolliding[obj._id] = obj;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\tfor (const id in colliding) {\n\t\t\t\tconst obj = colliding[id];\n\t\t\t\tif (!this.isColliding(obj)) {\n\t\t\t\t\tdelete colliding[id];\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\t// TODO: cache\n\t\t// TODO: use matrix mult for more accuracy and rotation?\n\t\tworldArea(): Area {\n\n\t\t\tlet w = this.area.width ?? this.width;\n\t\t\tlet h = this.area.height ?? this.height;\n\n\t\t\tif (w == null || h == null) {\n\t\t\t\tthrow new Error(\"failed to get area dimension\");\n\t\t\t}\n\n\t\t\tconst scale = vec2(this.scale ?? 1).scale(this.area.scale);\n\n\t\t\tw *= scale.x;\n\t\t\th *= scale.y;\n\n\t\t\tconst orig = originPt(this.origin || DEF_ORIGIN);\n\t\t\tconst pos = (this.pos ?? vec2(0))\n\t\t\t\t.add(this.area.offset)\n\t\t\t\t.sub(orig.add(1, 1).scale(0.5).scale(w, h));\n\n\t\t\treturn {\n\t\t\t\tshape: \"rect\",\n\t\t\t\tp1: pos,\n\t\t\t\tp2: vec2(pos.x + w, pos.y + h),\n\t\t\t};\n\n\t\t},\n\n\t\tscreenArea(): Area {\n\t\t\tconst area = this.worldArea();\n\t\t\tif (this.fixed) {\n\t\t\t\treturn area;\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\tshape: \"rect\",\n\t\t\t\t\tp1: game.camMatrix.multVec2(area.p1),\n\t\t\t\t\tp2: game.camMatrix.multVec2(area.p2),\n\t\t\t\t};\n\t\t\t}\n\t\t},\n\n\t};\n\n}\n\n// make the list of common render properties from the \"pos\", \"scale\", \"color\", \"opacity\", \"rotate\", \"origin\", \"outline\", and \"shader\" components of a character\nfunction getRenderProps(obj: GameObj<any>) {\n\treturn {\n\t\tpos: obj.pos,\n\t\tscale: obj.scale,\n\t\tcolor: obj.color,\n\t\topacity: obj.opacity,\n\t\tangle: obj.angle,\n\t\torigin: obj.origin,\n\t\toutline: obj.outline,\n\t\tshader: assets.shaders[obj.shader],\n\t\tuniform: obj.uniform,\n\t};\n}\n\ninterface SpriteCurAnim {\n\tname: string,\n\ttimer: number,\n\tloop: boolean,\n\tspeed: number,\n\tpingpong: boolean,\n\tonEnd: () => void,\n}\n\n// TODO: clean\nfunction sprite(id: string | SpriteData, opt: SpriteCompOpt = {}): SpriteComp {\n\n\tlet spr = null;\n\tlet curAnim: SpriteCurAnim | null = null;\n\n\tfunction calcTexScale(tex: GfxTexture, q: Quad, w?: number, h?: number): Vec2 {\n\t\tconst scale = vec2(1, 1);\n\t\tif (w && h) {\n\t\t\tscale.x = w / (tex.width * q.w);\n\t\t\tscale.y = h / (tex.height * q.h);\n\t\t} else if (w) {\n\t\t\tscale.x = w / (tex.width * q.w);\n\t\t\tscale.y = scale.x;\n\t\t} else if (h) {\n\t\t\tscale.y = h / (tex.height * q.h);\n\t\t\tscale.x = scale.y;\n\t\t}\n\t\treturn scale;\n\t}\n\n\treturn {\n\n\t\tid: \"sprite\",\n\t\t// TODO: allow update\n\t\twidth: 0,\n\t\theight: 0,\n\t\tframe: opt.frame || 0,\n\t\tquad: opt.quad || quad(0, 0, 1, 1),\n\t\tanimSpeed: opt.animSpeed ?? 1,\n\n\t\tload() {\n\n\t\t\tif (typeof id === \"string\") {\n\t\t\t\tspr = assets.sprites[id];\n\t\t\t} else {\n\t\t\t\tspr = id;\n\t\t\t}\n\n\t\t\tif (!spr) {\n\t\t\t\tthrow new Error(`sprite not found: \"${id}\"`);\n\t\t\t}\n\n\t\t\tlet q = { ...spr.frames[0] };\n\n\t\t\tif (opt.quad) {\n\t\t\t\tq = q.scale(opt.quad);\n\t\t\t}\n\n\t\t\tconst scale = calcTexScale(spr.tex, q, opt.width, opt.height);\n\n\t\t\tthis.width = spr.tex.width * q.w * scale.x;\n\t\t\tthis.height = spr.tex.height * q.h * scale.y;\n\n\t\t\tif (opt.anim) {\n\t\t\t\tthis.play(opt.anim);\n\t\t\t}\n\n\t\t},\n\n\t\tdraw() {\n\t\t\tdrawSprite({\n\t\t\t\t...getRenderProps(this),\n\t\t\t\tsprite: spr,\n\t\t\t\tframe: this.frame,\n\t\t\t\tquad: this.quad,\n\t\t\t\tflipX: opt.flipX,\n\t\t\t\tflipY: opt.flipY,\n\t\t\t\ttiled: opt.tiled,\n\t\t\t\twidth: opt.width,\n\t\t\t\theight: opt.height,\n\t\t\t});\n\t\t},\n\n\t\tupdate() {\n\n\t\t\tif (!curAnim) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst anim = spr.anims[curAnim.name];\n\n\t\t\tif (typeof anim === \"number\") {\n\t\t\t\tthis.frame = anim;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (anim.speed === 0) {\n\t\t\t\tthrow new Error(\"sprite anim speed cannot be 0\");\n\t\t\t}\n\n\t\t\tcurAnim.timer += dt() * this.animSpeed;\n\n\t\t\tif (curAnim.timer >= (1 / curAnim.speed)) {\n\t\t\t\tcurAnim.timer = 0;\n\t\t\t\t// TODO: clean up\n\t\t\t\tif (anim.from > anim.to) {\n\t\t\t\t\tthis.frame--;\n\t\t\t\t\tif (this.frame < anim.to) {\n\t\t\t\t\t\tif (curAnim.loop) {\n\t\t\t\t\t\t\tthis.frame = anim.from;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.frame++;\n\t\t\t\t\t\t\tcurAnim.onEnd();\n\t\t\t\t\t\t\tthis.stop();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.frame++;\n\t\t\t\t\tif (this.frame > anim.to) {\n\t\t\t\t\t\tif (curAnim.loop) {\n\t\t\t\t\t\t\tthis.frame = anim.from;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.frame--;\n\t\t\t\t\t\t\tcurAnim.onEnd();\n\t\t\t\t\t\t\tthis.stop();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\t// TODO: this opt should be used instead of the sprite data opt, if given\n\t\tplay(name: string, opt: SpriteAnimPlayOpt = {}) {\n\n\t\t\tif (!spr) {\n\t\t\t\tonLoad(() => {\n\t\t\t\t\tthis.play(name);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst anim = spr.anims[name];\n\n\t\t\tif (anim == null) {\n\t\t\t\tthrow new Error(`anim not found: ${name}`);\n\t\t\t}\n\n\t\t\tif (curAnim) {\n\t\t\t\tthis.stop();\n\t\t\t}\n\n\t\t\tcurAnim = {\n\t\t\t\tname: name,\n\t\t\t\ttimer: 0,\n\t\t\t\tloop: opt.loop ?? anim.loop ?? false,\n\t\t\t\tpingpong: opt.pingpong ?? anim.pingpong ?? false,\n\t\t\t\tspeed: opt.speed ?? anim.speed ?? 10,\n\t\t\t\tonEnd: opt.onEnd ?? (() => {}),\n\t\t\t};\n\n\t\t\tif (typeof anim === \"number\") {\n\t\t\t\tthis.frame = anim;\n\t\t\t} else {\n\t\t\t\tthis.frame = anim.from;\n\t\t\t}\n\n\t\t\t// TODO: \"animPlay\" is deprecated\n\t\t\tthis.trigger(\"animPlay\", name);\n\t\t\tthis.trigger(\"animStart\", name);\n\n\t\t},\n\n\t\tstop() {\n\t\t\tif (!curAnim) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst prevAnim = curAnim.name;\n\t\t\tcurAnim = null;\n\t\t\tthis.trigger(\"animEnd\", prevAnim);\n\t\t},\n\n\t\tnumFrames() {\n\t\t\tif (!spr) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn spr.frames.length;\n\t\t},\n\n\t\tcurAnim() {\n\t\t\treturn curAnim?.name;\n\t\t},\n\n\t\tflipX(b: boolean) {\n\t\t\topt.flipX = b;\n\t\t},\n\n\t\tflipY(b: boolean) {\n\t\t\topt.flipY = b;\n\t\t},\n\n\t\tonAnimEnd(name: string, action: () => void): EventCanceller {\n\t\t\treturn this.on(\"animEnd\", (anim) => {\n\t\t\t\tif (anim === name) {\n\t\t\t\t\taction();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tonAnimStart(name: string, action: () => void): EventCanceller {\n\t\t\treturn this.on(\"animStart\", (anim) => {\n\t\t\t\tif (anim === name) {\n\t\t\t\t\taction();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tinspect() {\n\t\t\tlet msg = \"\";\n\t\t\tif (typeof id === \"string\") {\n\t\t\t\tmsg += JSON.stringify(id);\n\t\t\t} else {\n\t\t\t\tmsg += \"[blob]\";\n\t\t\t}\n\t\t\treturn msg;\n\t\t},\n\n\t};\n\n}\n\nfunction text(t: string, opt: TextCompOpt = {}): TextComp {\n\n\tfunction update() {\n\n\t\tconst name = this.font ?? gopt.font ?? DEF_FONT;\n\t\tconst font = assets.fonts[name];\n\n\t\tif (!font) {\n\t\t\tthrow new Error(`font not found: \"${name}\"`);\n\t\t}\n\n\t\tconst ftext = gfx.fmtText({\n\t\t\t...getRenderProps(this),\n\t\t\ttext: this.text + \"\",\n\t\t\tsize: this.textSize,\n\t\t\tfont: font,\n\t\t\twidth: opt.width,\n\t\t\ttransform: opt.transform,\n\t\t});\n\n\t\tthis.width = ftext.width / (this.scale?.x || 1);\n\t\tthis.height = ftext.height / (this.scale?.y || 1);\n\n\t\treturn ftext;\n\n\t};\n\n\treturn {\n\n\t\tid: \"text\",\n\t\ttext: t,\n\t\ttextSize: opt.size,\n\t\tfont: opt.font,\n\t\twidth: 0,\n\t\theight: 0,\n\n\t\tload() {\n\t\t\tupdate.call(this);\n\t\t},\n\n\t\tdraw() {\n\t\t\tgfx.drawFmtText(update.call(this));\n\t\t},\n\n\t};\n\n}\n\nfunction rect(w: number, h: number, opt: RectCompOpt = {}): RectComp {\n\treturn {\n\t\tid: \"rect\",\n\t\twidth: w,\n\t\theight: h,\n\t\tradius: opt.radius || 0,\n\t\tdraw() {\n\t\t\tgfx.drawRect({\n\t\t\t\t...getRenderProps(this),\n\t\t\t\twidth: this.width,\n\t\t\t\theight: this.height,\n\t\t\t\tradius: this.radius,\n\t\t\t});\n\t\t},\n\t\tinspect() {\n\t\t\treturn `${Math.ceil(this.width)}, ${Math.ceil(this.height)}`;\n\t\t},\n\t};\n}\n\nfunction uvquad(w: number, h: number): UVQuadComp {\n\treturn {\n\t\tid: \"rect\",\n\t\twidth: w,\n\t\theight: h,\n\t\tdraw() {\n\t\t\tgfx.drawUVQuad({\n\t\t\t\t...getRenderProps(this),\n\t\t\t\twidth: this.width,\n\t\t\t\theight: this.height,\n\t\t\t});\n\t\t},\n\t\tinspect() {\n\t\t\treturn `${Math.ceil(this.width)}, ${Math.ceil(this.height)}`;\n\t\t},\n\t};\n}\n\nfunction circle(radius: number): CircleComp {\n\treturn {\n\t\tid: \"circle\",\n\t\tradius: radius,\n\t\tdraw() {\n\t\t\tgfx.drawCircle({\n\t\t\t\t...getRenderProps(this),\n\t\t\t\tradius: this.radius,\n\t\t\t});\n\t\t},\n\t\tinspect() {\n\t\t\treturn `${Math.ceil(this.radius)}`;\n\t\t},\n\t};\n}\n\nfunction outline(width: number = 1, color: Color = rgb(0, 0, 0)): OutlineComp {\n\treturn {\n\t\tid: \"outline\",\n\t\toutline: {\n\t\t\twidth,\n\t\t\tcolor,\n\t\t},\n\t};\n}\n\nfunction timer(n?: number, action?: () => void): TimerComp {\n\tconst timers: IDList<Timer> = new IDList();\n\tif (n && action) {\n\t\ttimers.pushd({\n\t\t\ttime: n,\n\t\t\taction: action,\n\t\t});\n\t}\n\treturn {\n\t\tid: \"timer\",\n\t\twait(n: number, action: () => void): EventCanceller {\n\t\t\treturn timers.pushd({\n\t\t\t\ttime: n,\n\t\t\t\taction: action,\n\t\t\t});\n\t\t},\n\t\tupdate() {\n\t\t\ttimers.forEach((timer, id) => {\n\t\t\t\ttimer.time -= dt();\n\t\t\t\tif (timer.time <= 0) {\n\t\t\t\t\ttimer.action.call(this);\n\t\t\t\t\ttimers.delete(id);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t};\n}\n\n// maximum y velocity with body()\nconst DEF_JUMP_FORCE = 640;\nconst MAX_VEL = 65536;\n\n// TODO: land on wall\nfunction body(opt: BodyCompOpt = {}): BodyComp {\n\n\tlet velY = 0;\n\tlet curPlatform: GameObj | null = null;\n\tlet lastPlatformPos = null;\n\tlet canDouble = true;\n\n\treturn {\n\n\t\tid: \"body\",\n\t\trequire: [ \"pos\", \"area\", ],\n\t\tjumpForce: opt.jumpForce ?? DEF_JUMP_FORCE,\n\t\tweight: opt.weight ?? 1,\n\t\tsolid: opt.solid ?? true,\n\n\t\tupdate() {\n\n\t\t\tlet justFall = false;\n\n\t\t\t// check if loses current platform\n\t\t\tif (curPlatform) {\n\n\t\t\t\tconst a1 = this.worldArea();\n\t\t\t\tconst a2 = curPlatform.worldArea();\n\t\t\t\tconst y1 = a1.p2.y;\n\t\t\t\tconst y2 = a2.p1.y;\n\t\t\t\tconst x1 = a1.p1.x;\n\t\t\t\tconst x2 = a1.p2.x;\n\t\t\t\tconst x3 = a2.p1.x;\n\t\t\t\tconst x4 = a2.p2.x;\n\n\t\t\t\tif (\n\t\t\t\t\t!curPlatform.exists()\n\t\t\t\t\t|| y1 !== y2\n\t\t\t\t\t|| x2 < x3\n\t\t\t\t\t|| x1 > x4\n\t\t\t\t) {\n\t\t\t\t\tthis.trigger(\"fall\", curPlatform);\n\t\t\t\t\tcurPlatform = null;\n\t\t\t\t\tlastPlatformPos = null;\n\t\t\t\t\tjustFall = true;\n\t\t\t\t} else {\n\t\t\t\t\tif (lastPlatformPos && curPlatform.pos) {\n\t\t\t\t\t\t// TODO: moveBy?\n\t\t\t\t\t\t// sticky platform\n\t\t\t\t\t\tthis.pos = this.pos.add(curPlatform.pos.sub(lastPlatformPos));\n\t\t\t\t\t\tlastPlatformPos = curPlatform.pos.clone();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!curPlatform) {\n\n\t\t\t\tconst col = this.move(0, velY);\n\n\t\t\t\t// check if grounded to a new platform\n\t\t\t\tif (col) {\n\t\t\t\t\tif (col.isBottom()) {\n\t\t\t\t\t\tcurPlatform = col.target;\n\t\t\t\t\t\tconst oy = velY;\n\t\t\t\t\t\tvelY = 0;\n\t\t\t\t\t\tif (curPlatform.pos) {\n\t\t\t\t\t\t\tlastPlatformPos = curPlatform.pos.clone();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!justFall) {\n\t\t\t\t\t\t\tthis.trigger(\"ground\", curPlatform);\n\t\t\t\t\t\t\tcanDouble = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (col.isTop()) {\n\t\t\t\t\t\tvelY = 0;\n\t\t\t\t\t\tthis.trigger(\"headbutt\", col.target);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvelY += gravity() * this.weight * dt();\n\t\t\t\tvelY = Math.min(velY, opt.maxVel ?? MAX_VEL);\n\n\t\t\t}\n\n\t\t},\n\n\t\tcurPlatform(): GameObj | null {\n\t\t\treturn curPlatform;\n\t\t},\n\n\t\tisGrounded() {\n\t\t\treturn curPlatform !== null;\n\t\t},\n\n\t\tgrounded(): boolean {\n\t\t\treturn this.isGrounded();\n\t\t},\n\n\t\tisFalling(): boolean {\n\t\t\treturn velY > 0;\n\t\t},\n\n\t\tfalling(): boolean {\n\t\t\treturn this.isFalling();\n\t\t},\n\n\t\tjump(force: number) {\n\t\t\tcurPlatform = null;\n\t\t\tlastPlatformPos = null;\n\t\t\tvelY = -force || -this.jumpForce;\n\t\t},\n\n\t\tdoubleJump(force: number) {\n\t\t\tif (this.isGrounded()) {\n\t\t\t\tthis.jump(force);\n\t\t\t} else if (canDouble) {\n\t\t\t\tcanDouble = false;\n\t\t\t\tthis.jump(force);\n\t\t\t\tthis.trigger(\"doubleJump\");\n\t\t\t}\n\t\t},\n\n\t\tonGround(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"ground\", action);\n\t\t},\n\n\t\tonFall(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"fall\", action);\n\t\t},\n\n\t\tonHeadbutt(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"headbutt\", action);\n\t\t},\n\n\t\tonDoubleJump(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"doubleJump\", action);\n\t\t},\n\n\t};\n\n}\n\nfunction shader(id: string, uniform: Uniform = {}): ShaderComp {\n\tconst shader = assets.shaders[id];\n\treturn {\n\t\tid: \"shader\",\n\t\tshader: id,\n\t\tuniform: uniform,\n\t};\n}\n\nfunction solid(): SolidComp {\n\treturn {\n\t\tid: \"solid\",\n\t\trequire: [ \"area\", ],\n\t\tsolid: true,\n\t};\n}\n\nfunction fixed(): FixedComp {\n\treturn {\n\t\tid: \"fixed\",\n\t\tfixed: true,\n\t};\n}\n\nfunction stay(): StayComp {\n\treturn {\n\t\tid: \"stay\",\n\t\tstay: true,\n\t};\n}\n\nfunction health(hp: number): HealthComp {\n\tif (hp == null) {\n\t\tthrow new Error(\"health() requires the initial amount of hp\");\n\t}\n\treturn {\n\t\tid: \"health\",\n\t\thurt(n: number = 1) {\n\t\t\tthis.setHP(hp - n);\n\t\t\tthis.trigger(\"hurt\");\n\t\t},\n\t\theal(n: number = 1) {\n\t\t\tthis.setHP(hp + n);\n\t\t\tthis.trigger(\"heal\");\n\t\t},\n\t\thp(): number {\n\t\t\treturn hp;\n\t\t},\n\t\tsetHP(n: number) {\n\t\t\thp = n;\n\t\t\tif (hp <= 0) {\n\t\t\t\tthis.trigger(\"death\");\n\t\t\t}\n\t\t},\n\t\tonHurt(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"hurt\", action);\n\t\t},\n\t\tonHeal(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"heal\", action);\n\t\t},\n\t\tonDeath(action: () => void): EventCanceller {\n\t\t\treturn this.on(\"death\", action);\n\t\t},\n\t\tinspect() {\n\t\t\treturn `${hp}`;\n\t\t},\n\t};\n}\n\nfunction lifespan(time: number, opt: LifespanCompOpt = {}): LifespanComp {\n\tif (time == null) {\n\t\tthrow new Error(\"lifespan() requires time\");\n\t}\n\tlet timer = 0;\n\tconst fade = opt.fade ?? 0;\n\tconst startFade = Math.max((time - fade), 0);\n\treturn {\n\t\tid: \"lifespan\",\n\t\tupdate() {\n\t\t\ttimer += dt();\n\t\t\t// TODO: don't assume 1 as start opacity\n\t\t\tif (timer >= startFade) {\n\t\t\t\tthis.opacity = map(timer, startFade, time, 1, 0);\n\t\t\t}\n\t\t\tif (timer >= time) {\n\t\t\t\tthis.destroy();\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction state(initState: string, stateList?: string[]): StateComp {\n\n\tif (!initState) {\n\t\tthrow new Error(\"state() requires an initial state\");\n\t}\n\n\tconst events = {};\n\n\tfunction initStateHook(state: string) {\n\t\tif (!events[state]) {\n\t\t\tevents[state] = {\n\t\t\t\tenter: [],\n\t\t\t\tleave: [],\n\t\t\t\tupdate: [],\n\t\t\t\tdraw: [],\n\t\t\t};\n\t\t}\n\t}\n\n\tfunction on(event, state, action) {\n\t\tinitStateHook(state);\n\t\tevents[state][event].push(action);\n\t}\n\n\tfunction trigger(event, state, ...args) {\n\t\tinitStateHook(state);\n\t\tevents[state][event].forEach((action) => action(...args));\n\t}\n\n\treturn {\n\t\tid: \"state\",\n\t\tstate: initState,\n\t\tenterState(state: string, ...args) {\n\t\t\tif (stateList && !stateList.includes(state)) {\n\t\t\t\tthrow new Error(`State not found: ${state}`);\n\t\t\t}\n\t\t\ttrigger(\"leave\", this.state, ...args);\n\t\t\tthis.state = state;\n\t\t\ttrigger(\"enter\", this.state, ...args);\n\t\t},\n\t\tonStateEnter(state: string, action: () => void) {\n\t\t\ton(\"enter\", state, action);\n\t\t},\n\t\tonStateUpdate(state: string, action: () => void) {\n\t\t\ton(\"update\", state, action);\n\t\t},\n\t\tonStateDraw(state: string, action: () => void) {\n\t\t\ton(\"draw\", state, action);\n\t\t},\n\t\tonStateLeave(state: string, action: () => void) {\n\t\t\ton(\"leave\", state, action);\n\t\t},\n\t\tupdate() {\n\t\t\ttrigger(\"update\", this.state);\n\t\t},\n\t\tdraw() {\n\t\t\ttrigger(\"draw\", this.state);\n\t\t},\n\t};\n\n}\n\nconst debug: Debug = {\n\tinspect: false,\n\ttimeScale: 1,\n\tshowLog: true,\n\tfps: app.fps,\n\tobjCount(): number {\n\t\treturn game.objs.size;\n\t},\n\tstepFrame: updateFrame,\n\tdrawCalls: gfx.drawCalls,\n\tclearLog: logger.clear,\n\tlog: (msg) => logger.info(`[${app.time().toFixed(2)}] ${msg}`),\n\terror: (msg) => logger.error(`[${app.time().toFixed(2)}] ${msg}`),\n\tcurRecording: null,\n\tget paused() {\n\t\treturn game.paused;\n\t},\n\tset paused(v) {\n\t\tgame.paused = v;\n\t\tif (v) {\n\t\t\taudio.ctx.suspend();\n\t\t} else {\n\t\t\taudio.ctx.resume();\n\t\t}\n\t}\n};\n\nfunction onLoad(cb: () => void): void {\n\tif (game.loaded) {\n\t\tcb();\n\t} else {\n\t\tgame.on(\"load\", cb);\n\t}\n}\n\nfunction scene(id: SceneID, def: SceneDef) {\n\tgame.scenes[id] = def;\n}\n\nfunction go(id: SceneID, ...args) {\n\n\tif (!game.scenes[id]) {\n\t\tthrow new Error(`scene not found: ${id}`);\n\t}\n\n\tconst cancel = game.on(\"updateStart\", () => {\n\n\t\tgame.events = {};\n\n\t\tgame.objEvents = {\n\t\t\tadd: new IDList(),\n\t\t\tupdate: new IDList(),\n\t\t\tdraw: new IDList(),\n\t\t\tdestroy: new IDList(),\n\t\t};\n\n\t\tgame.objs.forEach((obj) => {\n\t\t\tif (!obj.stay) {\n\t\t\t\tdestroy(obj);\n\t\t\t}\n\t\t});\n\n\t\tgame.timers = new IDList();\n\n\t\t// cam\n\t\tgame.cam = {\n\t\t\tpos: center(),\n\t\t\tscale: vec2(1, 1),\n\t\t\tangle: 0,\n\t\t\tshake: 0,\n\t\t};\n\n\t\tgame.camMousePos = app.mousePos();\n\t\tgame.camMatrix = mat4();\n\n\t\tgame.layers = {};\n\t\tgame.defLayer = null;\n\t\tgame.gravity = DEF_GRAVITY;\n\n\t\tgame.scenes[id](...args);\n\n\t\tif (gopt.debug !== false) {\n\t\t\tenterDebugMode();\n\t\t}\n\n\t\tif (gopt.burp) {\n\t\t\tenterBurpMode();\n\t\t}\n\n\t\tcancel();\n\n\t});\n\n}\n\nfunction getData<T>(key: string, def?: T): T {\n\ttry {\n\t\treturn JSON.parse(window.localStorage[key]);\n\t} catch {\n\t\tif (def) {\n\t\t\tsetData(key, def);\n\t\t\treturn def;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\nfunction setData(key: string, data: any) {\n\twindow.localStorage[key] = JSON.stringify(data);\n}\n\nfunction plug<T>(plugin: KaboomPlugin<T>): MergeObj<T> & KaboomCtx {\n\tconst funcs = plugin(ctx);\n\tfor (const k in funcs) {\n\t\t// @ts-ignore\n\t\tctx[k] = funcs[k];\n\t\tif (gopt.global !== false) {\n\t\t\t// @ts-ignore\n\t\t\twindow[k] = funcs[k];\n\t\t}\n\t}\n\treturn ctx as unknown as MergeObj<T> & KaboomCtx;\n}\n\nfunction center(): Vec2 {\n\treturn vec2(width() / 2, height() / 2);\n}\n\nfunction grid(level: Level, p: Vec2) {\n\n\treturn {\n\n\t\tid: \"grid\",\n\t\tgridPos: p.clone(),\n\n\t\tsetGridPos(...args) {\n\t\t\tconst p = vec2(...args);\n\t\t\tthis.gridPos = p.clone();\n\t\t\tthis.pos = vec2(\n\t\t\t\tlevel.offset().x + this.gridPos.x * level.gridWidth(),\n\t\t\t\tlevel.offset().y + this.gridPos.y * level.gridHeight()\n\t\t\t);\n\t\t},\n\n\t\tmoveLeft() {\n\t\t\tthis.setGridPos(this.gridPos.add(vec2(-1, 0)));\n\t\t},\n\n\t\tmoveRight() {\n\t\t\tthis.setGridPos(this.gridPos.add(vec2(1, 0)));\n\t\t},\n\n\t\tmoveUp() {\n\t\t\tthis.setGridPos(this.gridPos.add(vec2(0, -1)));\n\t\t},\n\n\t\tmoveDown() {\n\t\t\tthis.setGridPos(this.gridPos.add(vec2(0, 1)));\n\t\t},\n\n\t};\n\n}\n\nfunction addLevel(map: string[], opt: LevelOpt): Level {\n\n\tif (!opt.width || !opt.height) {\n\t\tthrow new Error(\"Must provide level grid width & height.\");\n\t}\n\n\tconst objs: GameObj[] = [];\n\tconst offset = vec2(opt.pos || vec2(0));\n\tlet longRow = 0;\n\n\tconst level = {\n\n\t\toffset() {\n\t\t\treturn offset.clone();\n\t\t},\n\n\t\tgridWidth() {\n\t\t\treturn opt.width;\n\t\t},\n\n\t\tgridHeight() {\n\t\t\treturn opt.height;\n\t\t},\n\n\t\tgetPos(...args): Vec2 {\n\t\t\tconst p = vec2(...args);\n\t\t\treturn vec2(\n\t\t\t\toffset.x + p.x * opt.width,\n\t\t\t\toffset.y + p.y * opt.height\n\t\t\t);\n\t\t},\n\n\t\tspawn(sym: string, ...args): GameObj {\n\n\t\t\tconst p = vec2(...args);\n\n\t\t\tconst comps = (() => {\n\t\t\t\tif (opt[sym]) {\n\t\t\t\t\tif (typeof opt[sym] !== \"function\") {\n\t\t\t\t\t\tthrow new Error(\"level symbol def must be a function returning a component list\");\n\t\t\t\t\t}\n\t\t\t\t\treturn opt[sym](p);\n\t\t\t\t} else if (opt.any) {\n\t\t\t\t\treturn opt.any(sym, p);\n\t\t\t\t}\n\t\t\t})();\n\n\t\t\tif (!comps) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst posComp = vec2(\n\t\t\t\toffset.x + p.x * opt.width,\n\t\t\t\toffset.y + p.y * opt.height\n\t\t\t);\n\n\t\t\tfor (const comp of comps) {\n\t\t\t\tif (comp.id === \"pos\") {\n\t\t\t\t\tposComp.x += comp.pos.x;\n\t\t\t\t\tposComp.y += comp.pos.y;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcomps.push(pos(posComp));\n\t\t\tcomps.push(grid(this, p));\n\n\t\t\tconst obj = add(comps);\n\n\t\t\tobjs.push(obj);\n\n\t\t\treturn obj;\n\n\t\t},\n\n\t\twidth() {\n\t\t\treturn longRow * opt.width;\n\t\t},\n\n\t\theight() {\n\t\t\treturn map.length * opt.height;\n\t\t},\n\n\t\tdestroy() {\n\t\t\tfor (const obj of objs) {\n\t\t\t\tdestroy(obj);\n\t\t\t}\n\t\t},\n\n\t};\n\n\tmap.forEach((row, i) => {\n\n\t\tconst syms = row.split(\"\");\n\n\t\tlongRow = Math.max(syms.length, longRow);\n\n\t\tsyms.forEach((sym, j) => {\n\t\t\tlevel.spawn(sym, vec2(j, i));\n\t\t});\n\n\t});\n\n\treturn level;\n\n}\n\nfunction record(frameRate?): Recording {\n\n\tconst stream = app.canvas.captureStream(frameRate);\n\tconst audioDest = audio.ctx.createMediaStreamDestination();\n\n\taudio.masterNode.connect(audioDest)\n\n\tconst audioStream = audioDest.stream;\n\tconst [firstAudioTrack] = audioStream.getAudioTracks();\n\n\t// TODO: Enabling audio results in empty video if no audio received\n\t// stream.addTrack(firstAudioTrack);\n\n\tconst recorder = new MediaRecorder(stream);\n\tconst chunks = [];\n\n\trecorder.ondataavailable = (e) => {\n\t\tif (e.data.size > 0) {\n\t\t\tchunks.push(e.data);\n\t\t}\n\t};\n\n\trecorder.onerror = (e) => {\n\t\taudio.masterNode.disconnect(audioDest)\n\t\tstream.getTracks().forEach(t => t.stop());\n\t};\n\n\trecorder.start();\n\n\treturn {\n\n\t\tresume() {\n\t\t\trecorder.resume();\n\t\t},\n\n\t\tpause() {\n\t\t\trecorder.pause();\n\t\t},\n\n\t\tdownload(filename = \"kaboom.mp4\") {\n\n\t\t\trecorder.onstop = () => {\n\t\t\t\tdownloadBlob(new Blob(chunks, {\n\t\t\t\t\ttype: \"video/mp4\",\n\t\t\t\t}), filename);\n\t\t\t}\n\n\t\t\trecorder.stop();\n\t\t\t// cleanup\n\t\t\taudio.masterNode.disconnect(audioDest)\n\t\t\tstream.getTracks().forEach(t => t.stop());\n\n\t\t}\n\t};\n\n}\n\nconst ctx: KaboomCtx = {\n\t// asset load\n\tloadRoot: assets.loadRoot,\n\tloadSprite: assets.loadSprite,\n\tloadSpriteAtlas: assets.loadSpriteAtlas,\n\tloadSound: assets.loadSound,\n\tloadFont: assets.loadFont,\n\tloadShader: assets.loadShader,\n\tloadAseprite: assets.loadAseprite,\n\tloadPedit: assets.loadPedit,\n\tloadBean: assets.loadBean,\n\tload: assets.load,\n\t// query\n\twidth,\n\theight,\n\tcenter,\n\tdt,\n\ttime: app.time,\n\tscreenshot: app.screenshot,\n\trecord: record,\n\tfocused: app.isFocused,\n\tisFocused: app.isFocused,\n\tfocus: app.focus,\n\tcursor: app.cursor,\n\tregCursor,\n\tfullscreen: app.fullscreen,\n\tisFullscreen: app.isFullscreen,\n\tonLoad,\n\tready: onLoad,\n\tisTouch: () => app.isTouch,\n\t// misc\n\tlayers,\n\tcamPos,\n\tcamScale,\n\tcamRot,\n\tshake,\n\ttoScreen,\n\ttoWorld,\n\tgravity,\n\t// obj\n\tadd,\n\treadd,\n\tdestroy,\n\tdestroyAll,\n\tget,\n\tevery,\n\trevery,\n\t// comps\n\tpos,\n\tscale,\n\trotate,\n\tcolor,\n\topacity,\n\torigin,\n\tlayer,\n\tarea,\n\tsprite,\n\ttext,\n\trect,\n\tcircle,\n\tuvquad,\n\toutline,\n\tbody,\n\tshader,\n\ttimer,\n\tsolid,\n\tfixed,\n\tstay,\n\thealth,\n\tlifespan,\n\tz,\n\tmove,\n\tcleanup,\n\tfollow,\n\tstate,\n\t// group events\n\ton,\n\tonUpdate,\n\tonDraw,\n\tonCollide,\n\tonClick,\n\tonHover,\n\taction: onUpdate,\n\trender: onDraw,\n\tcollides: onCollide,\n\tclicks: onClick,\n\thovers: onHover,\n\t// input\n\tonKeyDown,\n\tonKeyPress,\n\tonKeyPressRepeat,\n\tonKeyRelease,\n\tonMouseDown,\n\tonMousePress,\n\tonMouseRelease,\n\tonMouseMove,\n\tonCharInput,\n\tonTouchStart,\n\tonTouchMove,\n\tonTouchEnd,\n\tkeyDown: onKeyDown,\n\tkeyPress: onKeyPress,\n\tkeyPressRep: onKeyPressRepeat,\n\tkeyRelease: onKeyRelease,\n\tmouseDown: onMouseDown,\n\tmouseClick: onMousePress,\n\tmouseRelease: onMouseRelease,\n\tmouseMove: onMouseMove,\n\tcharInput: onCharInput,\n\ttouchStart: onTouchStart,\n\ttouchMove: onTouchMove,\n\ttouchEnd: onTouchEnd,\n\tmousePos,\n\tmouseWorldPos,\n\tmouseDeltaPos: app.mouseDeltaPos,\n\tisKeyDown: app.isKeyDown,\n\tisKeyPressed: app.isKeyPressed,\n\tisKeyPressedRepeat: app.isKeyPressedRepeat,\n\tisKeyReleased: app.isKeyReleased,\n\tisMouseDown: app.isMouseDown,\n\tisMousePressed: app.isMousePressed,\n\tisMouseReleased: app.isMouseReleased,\n\tisMouseMoved: app.isMouseMoved,\n\tkeyIsDown: app.isKeyDown,\n\tkeyIsPressed: app.isKeyPressed,\n\tkeyIsPressedRep: app.isKeyPressedRepeat,\n\tkeyIsReleased: app.isKeyReleased,\n\tmouseIsDown: app.isMouseDown,\n\tmouseIsClicked: app.isMousePressed,\n\tmouseIsReleased: app.isMouseReleased,\n\tmouseIsMoved: app.isMouseMoved,\n\t// timer\n\tloop,\n\twait,\n\t// audio\n\tplay,\n\tvolume: audio.volume,\n\tburp: audio.burp,\n\taudioCtx: audio.ctx,\n\t// math\n\trng,\n\trand,\n\trandi,\n\trandSeed,\n\tvec2,\n\tdir,\n\trgb,\n\thsl2rgb,\n\tquad,\n\tchoose,\n\tchance,\n\tlerp,\n\tmap,\n\tmapc,\n\twave,\n\tdeg2rad,\n\trad2deg,\n\ttestAreaRect,\n\ttestAreaLine,\n\ttestAreaCircle,\n\ttestAreaPolygon,\n\ttestAreaPoint,\n\ttestAreaArea,\n\ttestLineLine,\n\ttestRectRect,\n\ttestRectLine,\n\ttestRectPoint,\n\ttestPolygonPoint,\n\ttestLinePolygon,\n\ttestPolygonPolygon,\n\ttestCircleCircle,\n\ttestCirclePoint,\n\ttestRectPolygon,\n\t// raw draw\n\tdrawSprite,\n\tdrawText,\n\t// TODO: wrap these to use assets lib for the \"shader\" prop\n\tdrawRect: gfx.drawRect,\n\tdrawLine: gfx.drawLine,\n\tdrawLines: gfx.drawLines,\n\tdrawTriangle: gfx.drawTriangle,\n\tdrawCircle: gfx.drawCircle,\n\tdrawEllipse: gfx.drawEllipse,\n\tdrawUVQuad: gfx.drawUVQuad,\n\tdrawPolygon: gfx.drawPolygon,\n\tpushTransform: gfx.pushTransform,\n\tpopTransform: gfx.popTransform,\n\tpushTranslate: gfx.pushTranslate,\n\tpushRotate: gfx.pushRotateZ,\n\tpushScale: gfx.pushScale,\n\t// debug\n\tdebug,\n\t// scene\n\tscene,\n\tgo,\n\t// level\n\taddLevel,\n\t// storage\n\tgetData,\n\tsetData,\n\t// plugin\n\tplug,\n\t// char sets\n\tASCII_CHARS,\n\tCP437_CHARS,\n\t// dirs\n\tLEFT: vec2(-1, 0),\n\tRIGHT: vec2(1, 0),\n\tUP: vec2(0, -1),\n\tDOWN: vec2(0, 1),\n\t// colors\n\tRED: rgb(255, 0, 0),\n\tGREEN: rgb(0, 255, 0),\n\tBLUE: rgb(0, 0, 255),\n\tYELLOW: rgb(255, 255, 0),\n\tMAGENTA: rgb(255, 0, 255),\n\tCYAN: rgb(0, 255, 255),\n\tWHITE: rgb(255, 255, 255),\n\tBLACK: rgb(0, 0, 0),\n\t// dom\n\tcanvas: app.canvas,\n};\n\nplug(kaboomPlugin);\n\nif (gopt.plugins) {\n\tgopt.plugins.forEach(plug);\n}\n\nif (gopt.global !== false) {\n\tfor (const k in ctx) {\n\t\twindow[k] = ctx[k];\n\t}\n}\n\nlet numFrames = 0;\n\nfunction frames() {\n\treturn numFrames;\n}\n\nfunction updateFrame() {\n\n\tgame.trigger(\"updateStart\");\n\n\t// update timers\n\tgame.timers.forEach((t, id) => {\n\t\tt.time -= dt();\n\t\tif (t.time <= 0) {\n\t\t\t// TODO: some timer action causes crash on FF when dt is really high, not sure why\n\t\t\tt.action();\n\t\t\tgame.timers.delete(id);\n\t\t}\n\t});\n\n\t// update every obj\n\trevery((obj) => {\n\t\tif (!obj.paused) {\n\t\t\tobj.trigger(\"update\", obj);\n\t\t}\n\t});\n\n}\n\nfunction drawFrame() {\n\n\t// calculate camera matrix\n\tconst size = vec2(width(), height());\n\tconst cam = game.cam;\n\tconst shake = dir(rand(0, 360)).scale(cam.shake);\n\n\tcam.shake = lerp(cam.shake, 0, 5 * dt());\n\tgame.camMatrix = mat4()\n\t\t.translate(size.scale(0.5))\n\t\t.scale(cam.scale)\n\t\t.rotateZ(cam.angle)\n\t\t.translate(size.scale(-0.5))\n\t\t.translate(cam.pos.scale(-1).add(size.scale(0.5)).add(shake))\n\t\t;\n\n\t// draw every obj\n\tevery((obj) => {\n\n\t\tif (!obj.hidden) {\n\n\t\t\tgfx.pushTransform();\n\n\t\t\tif (!obj.fixed) {\n\t\t\t\tgfx.applyMatrix(game.camMatrix);\n\t\t\t}\n\n\t\t\tobj.trigger(\"draw\");\n\t\t\tgfx.popTransform();\n\n\t\t}\n\n\t});\n\n}\n\nfunction drawLoadScreen() {\n\n\t// if assets are not fully loaded, draw a progress bar\n\tconst progress = assets.loadProgress();\n\n\tif (progress === 1) {\n\t\tgame.loaded = true;\n\t\tgame.trigger(\"load\");\n\t} else {\n\n\t\tconst w = width() / 2;\n\t\tconst h = 24 / gfx.scale();\n\t\tconst pos = vec2(width() / 2, height() / 2).sub(vec2(w / 2, h / 2));\n\n\t\tgfx.drawRect({\n\t\t\tpos: vec2(0),\n\t\t\twidth: width(),\n\t\t\theight: height(),\n\t\t\tcolor: rgb(0, 0, 0),\n\t\t});\n\n\t\tgfx.drawRect({\n\t\t\tpos: pos,\n\t\t\twidth: w,\n\t\t\theight: h,\n\t\t\tfill: false,\n\t\t\toutline: {\n\t\t\t\twidth: 4 / gfx.scale(),\n\t\t\t},\n\t\t});\n\n\t\tgfx.drawRect({\n\t\t\tpos: pos,\n\t\t\twidth: w * progress,\n\t\t\theight: h,\n\t\t});\n\n\t}\n\n}\n\nfunction drawDebug() {\n\n\tif (debug.inspect) {\n\n\t\tlet inspecting = null;\n\t\tconst font = assets.fonts[DBG_FONT];\n\t\tconst lcolor = rgb(gopt.inspectColor ?? [0, 0, 255]);\n\n\t\tfunction drawInspectTxt(pos, txt) {\n\n\t\t\tconst s = app.scale;\n\t\t\tconst pad = vec2(8);\n\n\t\t\tgfx.pushTransform();\n\t\t\tgfx.pushTranslate(pos);\n\t\t\tgfx.pushScale(1 / s);\n\n\t\t\tconst ftxt = gfx.fmtText({\n\t\t\t\ttext: txt,\n\t\t\t\tfont: font,\n\t\t\t\tsize: 16,\n\t\t\t\tpos: pad,\n\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t});\n\n\t\t\tconst bw = ftxt.width + pad.x * 2;\n\t\t\tconst bh = ftxt.height + pad.x * 2;\n\n\t\t\tif (pos.x + bw / s >= width()) {\n\t\t\t\tgfx.pushTranslate(vec2(-bw, 0));\n\t\t\t}\n\n\t\t\tif (pos.y + bh / s >= height()) {\n\t\t\t\tgfx.pushTranslate(vec2(0, -bh));\n\t\t\t}\n\n\t\t\tgfx.drawRect({\n\t\t\t\twidth: bw,\n\t\t\t\theight: bh,\n\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\tradius: 4,\n\t\t\t\topacity: 0.8,\n\t\t\t});\n\n\t\t\tgfx.drawFmtText(ftxt);\n\t\t\tgfx.popTransform();\n\n\t\t}\n\n\t\t// draw area outline\n\t\tevery((obj) => {\n\n\t\t\tif (!obj.area) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (obj.hidden) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst scale = gfx.scale() * (obj.fixed ? 1: (game.cam.scale.x + game.cam.scale.y) / 2);\n\n\t\t\tif (!obj.fixed) {\n\t\t\t\tgfx.pushTransform();\n\t\t\t\tgfx.applyMatrix(game.camMatrix);\n\t\t\t}\n\n\t\t\tif (!inspecting) {\n\t\t\t\tif (obj.isHovering()) {\n\t\t\t\t\tinspecting = obj;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst lwidth = (inspecting === obj ? 8 : 4) / scale;\n\t\t\tconst a = obj.worldArea();\n\t\t\tconst w = a.p2.x - a.p1.x;\n\t\t\tconst h = a.p2.y - a.p1.y;\n\n\t\t\tgfx.drawRect({\n\t\t\t\tpos: a.p1,\n\t\t\t\twidth: w,\n\t\t\t\theight: h,\n\t\t\t\toutline: {\n\t\t\t\t\twidth: lwidth,\n\t\t\t\t\tcolor: lcolor,\n\t\t\t\t},\n\t\t\t\tfill: false,\n\t\t\t});\n\n\t\t\tif (!obj.fixed) {\n\t\t\t\tgfx.popTransform();\n\t\t\t}\n\n\t\t});\n\n\t\tif (inspecting) {\n\n\t\t\tconst lines = [];\n\t\t\tconst data = inspecting.inspect();\n\n\t\t\tfor (const tag in data) {\n\t\t\t\tif (data[tag]) {\n\t\t\t\t\tlines.push(`${tag}: ${data[tag]}`);\n\t\t\t\t} else {\n\t\t\t\t\tlines.push(`${tag}`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdrawInspectTxt(mousePos(), lines.join(\"\\n\"));\n\n\t\t}\n\n\t\tdrawInspectTxt(vec2(8 / app.scale), `FPS: ${app.fps()}`);\n\n\t}\n\n\tif (debug.paused) {\n\n\t\t// top right corner\n\t\tgfx.pushTransform();\n\t\tgfx.pushTranslate(width(), 0);\n\t\tgfx.pushScale(1 / app.scale);\n\t\tgfx.pushTranslate(-8, 8);\n\n\t\tconst size = 32;\n\n\t\t// bg\n\t\tgfx.drawRect({\n\t\t\twidth: size,\n\t\t\theight: size,\n\t\t\torigin: \"topright\",\n\t\t\tcolor: rgb(0, 0, 0),\n\t\t\topacity: 0.8,\n\t\t\tradius: 4,\n\t\t});\n\n\t\t// pause icon\n\t\tfor (let i = 1; i <= 2; i++) {\n\t\t\tgfx.drawRect({\n\t\t\t\twidth: 4,\n\t\t\t\theight: size * 0.6,\n\t\t\t\torigin: \"center\",\n\t\t\t\tpos: vec2(-size / 3 * i, size * 0.5),\n\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t\tradius: 2,\n\t\t\t});\n\t\t}\n\n\t\tgfx.popTransform();\n\n\t}\n\n\tif (debug.timeScale !== 1) {\n\n\t\t// bottom right corner\n\t\tgfx.pushTransform();\n\t\tgfx.pushTranslate(width(), height());\n\t\tgfx.pushScale(1 / app.scale);\n\t\tgfx.pushTranslate(-8, -8);\n\n\t\tconst pad = 8;\n\n\t\t// format text first to get text size\n\t\tconst ftxt = gfx.fmtText({\n\t\t\ttext: debug.timeScale.toFixed(1),\n\t\t\tfont: assets.fonts[DBG_FONT],\n\t\t\tsize: 16,\n\t\t\tcolor: rgb(255, 255, 255),\n\t\t\tpos: vec2(-pad),\n\t\t\torigin: \"botright\",\n\t\t});\n\n\t\t// bg\n\t\tgfx.drawRect({\n\t\t\twidth: ftxt.width + pad * 2 + pad * 4,\n\t\t\theight: ftxt.height + pad * 2,\n\t\t\torigin: \"botright\",\n\t\t\tcolor: rgb(0, 0, 0),\n\t\t\topacity: 0.8,\n\t\t\tradius: 4,\n\t\t});\n\n\t\t// fast forward / slow down icon\n\t\tfor (let i = 0; i < 2; i++) {\n\t\t\tconst flipped = debug.timeScale < 1;\n\t\t\tgfx.drawTriangle({\n\t\t\t\tp1: vec2(-ftxt.width - pad * (flipped ? 2 : 3.5), -pad),\n\t\t\t\tp2: vec2(-ftxt.width - pad * (flipped ? 2 : 3.5), -pad - ftxt.height),\n\t\t\t\tp3: vec2(-ftxt.width - pad * (flipped ? 3.5 : 2), -pad - ftxt.height / 2),\n\t\t\t\tpos: vec2(-i * pad * 1 + (flipped ? -pad * 0.5 : 0), 0),\n\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t});\n\t\t}\n\n\t\t// text\n\t\tgfx.drawFmtText(ftxt);\n\n\t\tgfx.popTransform();\n\n\t}\n\n\tif (debug.curRecording) {\n\n\t\tgfx.pushTransform();\n\t\tgfx.pushTranslate(0, height());\n\t\tgfx.pushScale(1 / app.scale);\n\t\tgfx.pushTranslate(24, -24);\n\n\t\tgfx.drawCircle({\n\t\t\tradius: 12,\n\t\t\tcolor: rgb(255, 0, 0),\n\t\t\topacity: wave(0, 1, app.time() * 4),\n\t\t});\n\n\t\tgfx.popTransform();\n\n\t}\n\n\tif (debug.showLog) {\n\t\tlogger.draw();\n\t}\n\n}\n\napp.run(() => {\n\n\tnumFrames++;\n\n\tif (!game.loaded) {\n\t\tgfx.frameStart();\n\t\tdrawLoadScreen();\n\t\tgfx.frameEnd();\n\t} else {\n\n\t\t// TODO: this gives the latest mousePos in input handlers but uses cam matrix from last frame\n\t\tgame.camMousePos = game.camMatrix.invert().multVec2(app.mousePos());\n\t\tgame.trigger(\"input\");\n\n\t\tif (!debug.paused && gopt.debug !== false) {\n\t\t\tupdateFrame();\n\t\t}\n\n\t\tgfx.frameStart();\n\t\tdrawFrame();\n\n\t\tif (gopt.debug !== false) {\n\t\t\tdrawDebug();\n\t\t}\n\n\t\tgfx.frameEnd();\n\n\t}\n\n});\n\nif (gopt.debug !== false) {\n\tenterDebugMode();\n}\n\nif (gopt.burp) {\n\tenterBurpMode();\n}\n\nwindow.addEventListener(\"error\", (e) => {\n\tlogger.error(`Error: ${e.error.message}`);\n\tapp.quit();\n\tapp.run(() => {\n\t\tif (assets.loadProgress() === 1) {\n\t\t\tgfx.frameStart();\n\t\t\tlogger.draw();\n\t\t\tgfx.frameEnd();\n\t\t}\n\t});\n});\n\nreturn ctx;\n\n};\n","import {\n\tVec2,\n\tVec3,\n\tVec4,\n\tMat4,\n\tColor,\n\tQuad,\n\tPoint,\n\tRect,\n\tCircle,\n\tPolygon,\n\tLine,\n\tArea,\n\tRNG,\n} from \"./types\";\n\nfunction deg2rad(deg: number): number {\n\treturn deg * Math.PI / 180;\n}\n\nfunction rad2deg(rad: number): number {\n\treturn rad * 180 / Math.PI;\n}\n\nfunction clamp(\n\tval: number,\n\tmin: number,\n\tmax: number,\n): number {\n\tif (min > max) {\n\t\treturn clamp(val, max, min);\n\t}\n\treturn Math.min(Math.max(val, min), max);\n}\n\nfunction lerp(\n\ta: number,\n\tb: number,\n\tt: number,\n): number {\n\treturn a + (b - a) * t;\n}\n\nfunction map(\n\tv: number,\n\tl1: number,\n\th1: number,\n\tl2: number,\n\th2: number,\n): number {\n\treturn l2 + (v - l1) / (h1 - l1) * (h2 - l2);\n}\n\nfunction mapc(\n\tv: number,\n\tl1: number,\n\th1: number,\n\tl2: number,\n\th2: number,\n): number {\n\treturn clamp(map(v, l1, h1, l2, h2), l2, h2);\n}\n\nfunction vec2(...args): Vec2 {\n\n\tif (args.length === 0) {\n\t\treturn vec2(0, 0);\n\t}\n\n\tif (args.length === 1) {\n\t\tif (typeof args[0] === \"number\") {\n\t\t\treturn vec2(args[0], args[0]);\n\t\t} else if (isVec2(args[0])) {\n\t\t\treturn vec2(args[0].x, args[0].y);\n\t\t} else if (Array.isArray(args[0]) && args[0].length === 2) {\n\t\t\treturn vec2.apply(null, args[0]);\n\t\t}\n\t}\n\n\treturn {\n\t\tx: args[0],\n\t\ty: args[1],\n\t\tclone(): Vec2 {\n\t\t\treturn vec2(this.x, this.y);\n\t\t},\n\t\tadd(...args): Vec2 {\n\t\t\tconst p2 = vec2(...args);\n\t\t\treturn vec2(this.x + p2.x, this.y + p2.y);\n\t\t},\n\t\tsub(...args): Vec2 {\n\t\t\tconst p2 = vec2(...args);\n\t\t\treturn vec2(this.x - p2.x, this.y - p2.y);\n\t\t},\n\t\tscale(...args): Vec2 {\n\t\t\tconst s = vec2(...args);\n\t\t\treturn vec2(this.x * s.x, this.y * s.y);\n\t\t},\n\t\tdist(...args): number {\n\t\t\tconst p2 = vec2(...args);\n\t\t\treturn Math.sqrt(\n\t\t\t\t(this.x - p2.x) * (this.x - p2.x)\n\t\t\t\t+ (this.y - p2.y) * (this.y - p2.y)\n\t\t\t);\n\t\t},\n\t\tlen(): number {\n\t\t\treturn this.dist(vec2(0, 0));\n\t\t},\n\t\tunit(): Vec2 {\n\t\t\treturn this.scale(1 / this.len());\n\t\t},\n\t\tnormal(): Vec2 {\n\t\t\treturn vec2(this.y, -this.x);\n\t\t},\n\t\tdot(p2: Vec2): number {\n\t\t\treturn this.x * p2.x + this.y * p2.y;\n\t\t},\n\t\tangle(...args): number {\n\t\t\tconst p2 = vec2(...args);\n\t\t\treturn rad2deg(Math.atan2(this.y - p2.y, this.x - p2.x));\n\t\t},\n\t\tlerp(p2: Vec2, t: number): Vec2 {\n\t\t\treturn vec2(lerp(this.x, p2.x, t), lerp(this.y, p2.y, t));\n\t\t},\n\t\ttoFixed(n: number): Vec2 {\n\t\t\treturn vec2(this.x.toFixed(n), this.y.toFixed(n));\n\t\t},\n\t\teq(other: Vec2): boolean {\n\t\t\treturn this.x === other.x && this.y === other.y;\n\t\t},\n\t\tstr(): string {\n\t\t\treturn `(${this.x.toFixed(2)}, ${this.y.toFixed(2)})`;\n\t\t},\n\t};\n}\n\nfunction dir(deg: number): Vec2 {\n\tconst angle = deg2rad(deg);\n\treturn vec2(Math.cos(angle), Math.sin(angle));\n}\n\nfunction vec3(x: number, y: number, z: number): Vec3 {\n\treturn {\n\t\tx: x,\n\t\ty: y,\n\t\tz: z,\n\t\txy(): Vec2 {\n\t\t\treturn vec2(this.x, this.y);\n\t\t},\n\t};\n}\n\nfunction isVec2(p: any): boolean {\n\treturn p !== undefined\n\t\t&& p.x !== undefined\n\t\t&& p.y !== undefined\n\t\t;\n}\n\nfunction isVec3(p: any): boolean {\n\treturn p !== undefined\n\t\t&& p.x !== undefined\n\t\t&& p.y !== undefined\n\t\t&& p.z !== undefined\n\t\t;\n}\n\nfunction isColor(c: any): boolean {\n\treturn c !== undefined\n\t\t&& c.r !== undefined\n\t\t&& c.g !== undefined\n\t\t&& c.b !== undefined\n\t\t;\n}\n\nfunction isMat4(m: any): Mat4 {\n\tif (\n\t\tm !== undefined\n\t\t&& Array.isArray(m.m)\n\t\t&& m.m.length === 16\n\t) {\n\t\treturn m;\n\t}\n}\n\nfunction rgb(...args): Color {\n\n\tif (args.length === 0) {\n\t\treturn rgb(255, 255, 255);\n\t} else if (args.length === 1) {\n\t\tif (isColor(args[0])) {\n\t\t\treturn rgb(args[0].r, args[0].g, args[0].b);\n\t\t} else if (Array.isArray(args[0]) && args[0].length === 3) {\n\t\t\treturn rgb.apply(null, args[0]);\n\t\t}\n\t}\n\n\treturn {\n\t\tr: clamp(~~args[0], 0, 255),\n\t\tg: clamp(~~args[1], 0, 255),\n\t\tb: clamp(~~args[2], 0, 255),\n\t\tclone(): Color {\n\t\t\treturn rgb(this.r, this.g, this.b);\n\t\t},\n\t\tlighten(a: number): Color {\n\t\t\treturn rgb(this.r + a, this.g + a, this.b + a);\n\t\t},\n\t\tdarken(a: number): Color {\n\t\t\treturn this.lighten(-a);\n\t\t},\n\t\tinvert(): Color {\n\t\t\treturn rgb(255 - this.r, 255 - this.g, 255 - this.b);\n\t\t},\n\t\tmult(other: Color): Color {\n\t\t\treturn rgb(\n\t\t\t\tthis.r * other.r / 255,\n\t\t\t\tthis.g * other.g / 255,\n\t\t\t\tthis.b * other.b / 255,\n\t\t\t);\n\t\t},\n\t\teq(other: Color): boolean {\n\t\t\treturn this.r === other.r\n\t\t\t\t&& this.g === other.g\n\t\t\t\t&& this.b === other.g\n\t\t\t\t;\n\t\t},\n\t\tstr(): string {\n\t\t\treturn `(${this.r}, ${this.g}, ${this.b})`;\n\t\t},\n\t};\n\n}\n\nfunction hsl2rgb(h: number, s: number, l: number): Color {\n\n\tif (s == 0){\n\t\treturn rgb(255 * l, 255 * l, 255 * l);\n\t}\n\n\tconst hue2rgb = (p, q, t) => {\n\t\tif (t < 0) t += 1;\n\t\tif (t > 1) t -= 1;\n\t\tif (t < 1 / 6) return p + (q - p) * 6 * t;\n\t\tif (t < 1 / 2) return q;\n\t\tif (t < 2 / 3) return p + (q - p) * (2/3 - t) * 6;\n\t\treturn p;\n\t}\n\n\tconst q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\tconst p = 2 * l - q;\n\tconst r = hue2rgb(p, q, h + 1 / 3);\n\tconst g = hue2rgb(p, q, h);\n\tconst b = hue2rgb(p, q, h - 1 / 3);\n\n\treturn rgb(Math.round(r * 255), Math.round(g * 255), Math.round(b * 255));\n\n}\n\nfunction quad(x: number, y: number, w: number, h: number): Quad {\n\treturn {\n\t\tx: x ?? 0,\n\t\ty: y ?? 0,\n\t\tw: w ?? 1,\n\t\th: h ?? 1,\n\t\tscale(other: Quad): Quad {\n\t\t\treturn quad(\n\t\t\t\tthis.x + this.w * other.x,\n\t\t\t\tthis.y + this.h * other.y,\n\t\t\t\tthis.w * other.w,\n\t\t\t\tthis.h * other.h\n\t\t\t);\n\t\t},\n\t\tclone(): Quad {\n\t\t\treturn quad(this.x, this.y, this.w, this.h);\n\t\t},\n\t\teq(other: Quad): boolean {\n\t\t\treturn this.x === other.x\n\t\t\t\t&& this.y === other.y\n\t\t\t\t&& this.w === other.w\n\t\t\t\t&& this.h === other.h;\n\t\t},\n\t};\n}\n\nfunction mat4(m?: number[]): Mat4 {\n\n\treturn {\n\n\t\tm: m ? [...m] : [\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1,\n\t\t],\n\n\t\tclone(): Mat4 {\n\t\t\treturn mat4(this.m);\n\t\t},\n\n\t\tmult(other: Mat4): Mat4 {\n\n\t\t\tconst out = [];\n\n\t\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\t\tout[i * 4 + j] =\n\t\t\t\t\t\tthis.m[0 * 4 + j] * other.m[i * 4 + 0] +\n\t\t\t\t\t\tthis.m[1 * 4 + j] * other.m[i * 4 + 1] +\n\t\t\t\t\t\tthis.m[2 * 4 + j] * other.m[i * 4 + 2] +\n\t\t\t\t\t\tthis.m[3 * 4 + j] * other.m[i * 4 + 3];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn mat4(out);\n\n\t\t},\n\n\t\tmultVec4(p: Vec4): Vec4 {\n\t\t\treturn {\n\t\t\t\tx: p.x * this.m[0] + p.y * this.m[4] + p.z * this.m[8] + p.w * this.m[12],\n\t\t\t\ty: p.x * this.m[1] + p.y * this.m[5] + p.z * this.m[9] + p.w * this.m[13],\n\t\t\t\tz: p.x * this.m[2] + p.y * this.m[6] + p.z * this.m[10] + p.w * this.m[14],\n\t\t\t\tw: p.x * this.m[3] + p.y * this.m[7] + p.z * this.m[11] + p.w * this.m[15]\n\t\t\t};\n\t\t},\n\n\t\tmultVec3(p: Vec3): Vec3 {\n\t\t\tconst p4 = this.multVec4({\n\t\t\t\tx: p.x,\n\t\t\t\ty: p.y,\n\t\t\t\tz: p.z,\n\t\t\t\tw: 1.0,\n\t\t\t});\n\t\t\treturn vec3(p4.x, p4.y, p4.z);\n\t\t},\n\n\t\tmultVec2(p: Vec2): Vec2 {\n\t\t\treturn vec2(\n\t\t\t\tp.x * this.m[0] + p.y * this.m[4] + 0 * this.m[8] + 1 * this.m[12],\n\t\t\t\tp.x * this.m[1] + p.y * this.m[5] + 0 * this.m[9] + 1 * this.m[13],\n\t\t\t);\n\t\t},\n\n\t\ttranslate(p: Vec2): Mat4 {\n\t\t\treturn this.mult(mat4([\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, 1, 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\tp.x, p.y, 0, 1,\n\t\t\t]));\n\t\t},\n\n\t\tscale(s: Vec2): Mat4 {\n\t\t\treturn this.mult(mat4([\n\t\t\t\ts.x, 0, 0, 0,\n\t\t\t\t0, s.y, 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\t0, 0, 0, 1,\n\t\t\t]));\n\t\t},\n\n\t\trotateX(a: number): Mat4 {\n\t\t\ta = deg2rad(-a);\n\t\t\treturn this.mult(mat4([\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, Math.cos(a), -Math.sin(a), 0,\n\t\t\t\t0, Math.sin(a), Math.cos(a), 0,\n\t\t\t\t0, 0, 0, 1,\n\t\t\t]));\n\t\t},\n\n\t\trotateY(a: number): Mat4 {\n\t\t\ta = deg2rad(-a);\n\t\t\treturn this.mult(mat4([\n\t\t\t\tMath.cos(a), 0, Math.sin(a), 0,\n\t\t\t\t0, 1, 0, 0,\n\t\t\t\t-Math.sin(a), 0, Math.cos(a), 0,\n\t\t\t\t0, 0, 0, 1,\n\t\t\t]));\n\t\t},\n\n\t\trotateZ(a: number): Mat4 {\n\t\t\ta = deg2rad(-a);\n\t\t\treturn this.mult(mat4([\n\t\t\t\tMath.cos(a), -Math.sin(a), 0, 0,\n\t\t\t\tMath.sin(a), Math.cos(a), 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\t0, 0, 0, 1,\n\t\t\t]));\n\t\t},\n\n\t\tinvert(): Mat4 {\n\n\t\t\tconst out = [];\n\n\t\t\tconst f00 = this.m[10] * this.m[15] - this.m[14] * this.m[11];\n\t\t\tconst f01 = this.m[9] * this.m[15] - this.m[13] * this.m[11];\n\t\t\tconst f02 = this.m[9] * this.m[14] - this.m[13] * this.m[10];\n\t\t\tconst f03 = this.m[8] * this.m[15] - this.m[12] * this.m[11];\n\t\t\tconst f04 = this.m[8] * this.m[14] - this.m[12] * this.m[10];\n\t\t\tconst f05 = this.m[8] * this.m[13] - this.m[12] * this.m[9];\n\t\t\tconst f06 = this.m[6] * this.m[15] - this.m[14] * this.m[7];\n\t\t\tconst f07 = this.m[5] * this.m[15] - this.m[13] * this.m[7];\n\t\t\tconst f08 = this.m[5] * this.m[14] - this.m[13] * this.m[6];\n\t\t\tconst f09 = this.m[4] * this.m[15] - this.m[12] * this.m[7];\n\t\t\tconst f10 = this.m[4] * this.m[14] - this.m[12] * this.m[6];\n\t\t\tconst f11 = this.m[5] * this.m[15] - this.m[13] * this.m[7];\n\t\t\tconst f12 = this.m[4] * this.m[13] - this.m[12] * this.m[5];\n\t\t\tconst f13 = this.m[6] * this.m[11] - this.m[10] * this.m[7];\n\t\t\tconst f14 = this.m[5] * this.m[11] - this.m[9] * this.m[7];\n\t\t\tconst f15 = this.m[5] * this.m[10] - this.m[9] * this.m[6];\n\t\t\tconst f16 = this.m[4] * this.m[11] - this.m[8] * this.m[7];\n\t\t\tconst f17 = this.m[4] * this.m[10] - this.m[8] * this.m[6];\n\t\t\tconst f18 = this.m[4] * this.m[9] - this.m[8] * this.m[5];\n\n\t\t\tout[0] = this.m[5] * f00 - this.m[6] * f01 + this.m[7] * f02;\n\t\t\tout[4] = -(this.m[4] * f00 - this.m[6] * f03 + this.m[7] * f04);\n\t\t\tout[8] = this.m[4] * f01 - this.m[5] * f03 + this.m[7] * f05;\n\t\t\tout[12] = -(this.m[4] * f02 - this.m[5] * f04 + this.m[6] * f05);\n\n\t\t\tout[1] = -(this.m[1] * f00 - this.m[2] * f01 + this.m[3] * f02);\n\t\t\tout[5] = this.m[0] * f00 - this.m[2] * f03 + this.m[3] * f04;\n\t\t\tout[9] = -(this.m[0] * f01 - this.m[1] * f03 + this.m[3] * f05);\n\t\t\tout[13] = this.m[0] * f02 - this.m[1] * f04 + this.m[2] * f05;\n\n\t\t\tout[2] = this.m[1] * f06 - this.m[2] * f07 + this.m[3] * f08;\n\t\t\tout[6] = -(this.m[0] * f06 - this.m[2] * f09 + this.m[3] * f10);\n\t\t\tout[10] = this.m[0] * f11 - this.m[1] * f09 + this.m[3] * f12;\n\t\t\tout[14] = -(this.m[0] * f08 - this.m[1] * f10 + this.m[2] * f12);\n\n\t\t\tout[3] = -(this.m[1] * f13 - this.m[2] * f14 + this.m[3] * f15);\n\t\t\tout[7] = this.m[0] * f13 - this.m[2] * f16 + this.m[3] * f17;\n\t\t\tout[11] = -(this.m[0] * f14 - this.m[1] * f16 + this.m[3] * f18);\n\t\t\tout[15] = this.m[0] * f15 - this.m[1] * f17 + this.m[2] * f18;\n\n\t\t\tconst det =\n\t\t\t\tthis.m[0] * out[0] +\n\t\t\t\tthis.m[1] * out[4] +\n\t\t\t\tthis.m[2] * out[8] +\n\t\t\t\tthis.m[3] * out[12];\n\n\t\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\t\tout[i * 4 + j] *= (1.0 / det);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn mat4(out);\n\n\t\t},\n\n\t};\n\n}\n\nfunction wave(lo: number, hi: number, t: number, f = Math.sin): number {\n\treturn lo + (f(t) + 1) / 2 * (hi - lo);\n}\n\n// basic ANSI C LCG\nconst A = 1103515245;\nconst C = 12345;\nconst M = 2147483648;\n// TODO: let user pass seed\nconst defRNG = rng(Date.now());\n\nfunction rng(seed: number): RNG {\n\treturn {\n\t\tseed: seed,\n\t\tgen(...args) {\n\t\t\tif (args.length === 0) {\n\t\t\t\tthis.seed = (A * this.seed + C) % M;\n\t\t\t\treturn this.seed / M;\n\t\t\t} else if (args.length === 1) {\n\t\t\t\tif (typeof args[0] === \"number\") {\n\t\t\t\t\treturn this.gen(0, args[0]);\n\t\t\t\t} else if (isVec2(args[0])) {\n\t\t\t\t\treturn this.gen(vec2(0, 0), args[0]);\n\t\t\t\t} else if (isColor(args[0])) {\n\t\t\t\t\treturn this.gen(rgb(0, 0, 0), args[0]);\n\t\t\t\t}\n\t\t\t} else if (args.length === 2) {\n\t\t\t\tif (typeof args[0] === \"number\" && typeof args[1] === \"number\") {\n\t\t\t\t\treturn (this.gen() * (args[1] - args[0])) + args[0];\n\t\t\t\t} else if (isVec2(args[0]) && isVec2(args[1])) {\n\t\t\t\t\treturn vec2(\n\t\t\t\t\t\tthis.gen(args[0].x, args[1].x),\n\t\t\t\t\t\tthis.gen(args[0].y, args[1].y),\n\t\t\t\t\t);\n\t\t\t\t} else if (isColor(args[0]) && isColor(args[1])) {\n\t\t\t\t\treturn rgb(\n\t\t\t\t\t\tthis.gen(args[0].r, args[1].r),\n\t\t\t\t\t\tthis.gen(args[0].g, args[1].g),\n\t\t\t\t\t\tthis.gen(args[0].b, args[1].b),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction randSeed(seed?: number): number {\n\tif (seed != null) {\n\t\tdefRNG.seed = seed;\n\t}\n\treturn defRNG.seed;\n}\n\nfunction rand(...args) {\n\t// @ts-ignore\n\treturn defRNG.gen(...args);\n}\n\n// TODO: randi() to return 0 / 1?\nfunction randi(...args) {\n\treturn Math.floor(rand(...args));\n}\n\nfunction chance(p: number): boolean {\n\treturn rand() <= p;\n}\n\nfunction choose<T>(list: T[]): T {\n\treturn list[randi(list.length)];\n}\n\n// TODO: better name\nfunction testRectRect2(r1: Rect, r2: Rect): boolean {\n\treturn r1.p2.x >= r2.p1.x\n\t\t&& r1.p1.x <= r2.p2.x\n\t\t&& r1.p2.y >= r2.p1.y\n\t\t&& r1.p1.y <= r2.p2.y;\n}\n\nfunction testRectRect(r1: Rect, r2: Rect): boolean {\n\treturn r1.p2.x > r2.p1.x\n\t\t&& r1.p1.x < r2.p2.x\n\t\t&& r1.p2.y > r2.p1.y\n\t\t&& r1.p1.y < r2.p2.y;\n}\n\n// TODO: better name\nfunction testLineLineT(l1: Line, l2: Line): number | null {\n\n\tif ((l1.p1.x === l1.p2.x && l1.p1.y === l1.p2.y) || (l2.p1.x === l2.p2.x && l2.p1.y === l2.p2.y)) {\n\t\treturn null;\n\t}\n\n\tconst denom = ((l2.p2.y - l2.p1.y) * (l1.p2.x - l1.p1.x) - (l2.p2.x - l2.p1.x) * (l1.p2.y - l1.p1.y));\n\n\t// parallel\n\tif (denom === 0) {\n\t\treturn null;\n\t}\n\n\tconst ua = ((l2.p2.x - l2.p1.x) * (l1.p1.y - l2.p1.y) - (l2.p2.y - l2.p1.y) * (l1.p1.x - l2.p1.x)) / denom;\n\tconst ub = ((l1.p2.x - l1.p1.x) * (l1.p1.y - l2.p1.y) - (l1.p2.y - l1.p1.y) * (l1.p1.x - l2.p1.x)) / denom;\n\n\t// is the intersection on the segments\n\tif (ua < 0 || ua > 1 || ub < 0 || ub > 1) {\n\t\treturn null;\n\t}\n\n\treturn ua;\n\n}\n\nfunction testLineLine(l1: Line, l2: Line): Vec2 | null {\n\tconst t = testLineLineT(l1, l2);\n\tif (!t) return null;\n\treturn vec2(\n\t\tl1.p1.x + t * (l1.p2.x - l1.p1.x),\n\t\tl1.p1.y + t * (l1.p2.y - l1.p1.y),\n\t);\n}\n\nfunction testRectLine(r: Rect, l: Line): boolean {\n\tif (testRectPoint(r, l.p1) || testRectPoint(r, l.p2)) {\n\t\treturn true;\n\t}\n\treturn !!testLineLine(l, makeLine(r.p1, vec2(r.p2.x, r.p1.y)))\n\t\t|| !!testLineLine(l, makeLine(vec2(r.p2.x, r.p1.y), r.p2))\n\t\t|| !!testLineLine(l, makeLine(r.p2, vec2(r.p1.x, r.p2.y)))\n\t\t|| !!testLineLine(l, makeLine(vec2(r.p1.x, r.p2.y), r.p1));\n}\n\nfunction testRectPoint2(r: Rect, pt: Point): boolean {\n\treturn pt.x >= r.p1.x && pt.x <= r.p2.x && pt.y >= r.p1.y && pt.y <= r.p2.y;\n}\n\nfunction testRectPoint(r: Rect, pt: Point): boolean {\n\treturn pt.x > r.p1.x && pt.x < r.p2.x && pt.y > r.p1.y && pt.y < r.p2.y;\n}\n\n// TODO\nfunction testRectCircle(r: Rect, c: Circle): boolean {\n\treturn false;\n}\n\nfunction testRectPolygon(r: Rect, p: Polygon): boolean {\n\treturn testPolygonPolygon(p, [\n\t\tr.p1,\n\t\tvec2(r.p2.x, r.p1.y),\n\t\tr.p2,\n\t\tvec2(r.p1.x, r.p2.y),\n\t]);\n}\n\n// TODO\nfunction testLinePoint(l: Line, pt: Vec2): boolean {\n\treturn false;\n}\n\n// TODO\nfunction testLineCircle(l: Line, c: Circle): boolean {\n\treturn false;\n}\n\nfunction testLinePolygon(l: Line, p: Polygon): boolean {\n\n\t// test if line is inside\n\tif (testPolygonPoint(p, l.p1) || testPolygonPoint(p, l.p2)) {\n\t\treturn true;\n\t}\n\n\t// test each line\n\tfor (let i = 0; i < p.length; i++) {\n\t\tconst p1 = p[i];\n\t\tconst p2 = p[(i + 1) % p.length];\n\t\tif (testLineLine(l, { p1, p2 })) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n\n}\n\nfunction testCirclePoint(c: Circle, p: Point): boolean {\n\treturn c.center.dist(p) < c.radius;\n}\n\nfunction testCircleCircle(c1: Circle, c2: Circle): boolean {\n\treturn c1.center.dist(c2.center) < c1.radius + c2.radius;\n}\n\n// TODO\nfunction testCirclePolygon(c: Circle, p: Polygon): boolean {\n\treturn false;\n}\n\nfunction testPolygonPolygon(p1: Polygon, p2: Polygon): boolean {\n\tfor (let i = 0; i < p1.length; i++) {\n\t\tconst l = {\n\t\t\tp1: p1[i],\n\t\t\tp2: p1[(i + 1) % p1.length],\n\t\t};\n\t\tif (testLinePolygon(l, p2)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction testPolygonPoint(p: Polygon, pt: Point): boolean {\n\n\tlet has = false;\n\n\tfor (let i = 0; i < p.length; i++) {\n\n\t\tconst p1 = p[i];\n\t\tconst p2 = p[(i + 1) % p.length];\n\n\t\tif (\n\t\t\t((p1.y > pt.y && p2.y < pt.y) || (p1.y < pt.y && p2.y > pt.y))\n\t\t\t&& (pt.x < (p2.x - p1.x) * (pt.y - p1.y) / (p2.y - p1.y) + p1.x)\n\t\t) {\n\t\t\thas = !has;\n\t\t}\n\n\t}\n\n\treturn has;\n\n}\n\nfunction testPointPoint(p1: Point, p2: Point): boolean {\n\treturn p1.eq(p2);\n}\n\nfunction testAreaRect(a: Area, r: Rect): boolean {\n\tswitch (a.shape) {\n\t\tcase \"rect\": return testRectRect(r, a);\n\t\tcase \"line\": return testRectLine(r, a);\n\t\tcase \"circle\": return testRectCircle(r, a);\n\t\tcase \"polygon\": return testRectPolygon(r, a.pts);\n\t\tcase \"point\": return testRectPoint(r, a.pt);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a as Area).shape}`);\n}\n\nfunction testAreaLine(a: Area, l: Line): boolean {\n\tswitch (a.shape) {\n\t\tcase \"rect\": return testRectLine(a, l);\n\t\tcase \"line\": return Boolean(testLineLine(a, l));\n\t\tcase \"circle\": return testLineCircle(l, a);\n\t\tcase \"polygon\": return testLinePolygon(l, a.pts);\n\t\tcase \"point\": return testLinePoint(l, a.pt);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a as Area).shape}`);\n}\n\nfunction testAreaCircle(a: Area, c: Circle): boolean {\n\tswitch (a.shape) {\n\t\tcase \"rect\": return testRectCircle(a, c);\n\t\tcase \"line\": return testLineCircle(a, c);\n\t\tcase \"circle\": return testCircleCircle(a, c);\n\t\tcase \"polygon\": return testCirclePolygon(c, a.pts);\n\t\tcase \"point\": return testCirclePoint(c, a.pt);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a as Area).shape}`);\n}\n\nfunction testAreaPolygon(a: Area, p: Polygon): boolean {\n\tswitch (a.shape) {\n\t\tcase \"rect\": return testRectPolygon(a, p);\n\t\tcase \"line\": return testLinePolygon(a, p);\n\t\tcase \"circle\": return testCirclePolygon(a, p);\n\t\tcase \"polygon\": return testPolygonPolygon(p, a.pts);\n\t\tcase \"point\": return testPolygonPoint(p, a.pt);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a as Area).shape}`);\n}\n\nfunction testAreaPoint(a: Area, p: Point): boolean {\n\tswitch (a.shape) {\n\t\tcase \"rect\": return testRectPoint(a, p);\n\t\tcase \"line\": return testLinePoint(a, p);\n\t\tcase \"circle\": return testCirclePoint(a, p);\n\t\tcase \"polygon\": return testPolygonPoint(a.pts, p);\n\t\tcase \"point\": return testPointPoint(a.pt, p);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a as Area).shape}`);\n}\n\nfunction testAreaArea(a1: Area, a2: Area): boolean {\n\tswitch (a2.shape) {\n\t\tcase \"rect\": return testAreaRect(a1, a2);\n\t\tcase \"line\": return testAreaLine(a1, a2);\n\t\tcase \"circle\": return testAreaCircle(a1, a2);\n\t\tcase \"polygon\": return testAreaPolygon(a1, a2.pts);\n\t\tcase \"point\": return testAreaPoint(a1, a2.pt);\n\t}\n\tthrow new Error(`Unknown area shape: ${(a2 as Area).shape}`);\n}\n\nfunction minkDiff(r1: Rect, r2: Rect): Rect {\n\treturn {\n\t\tp1: vec2(r1.p1.x - r2.p2.x, r1.p1.y - r2.p2.y),\n\t\tp2: vec2(r1.p2.x - r2.p1.x, r1.p2.y - r2.p1.y),\n\t};\n}\n\nfunction makeLine(p1: Vec2, p2: Vec2): Line {\n\treturn {\n\t\tp1: p1.clone(),\n\t\tp2: p2.clone(),\n\t};\n}\n\nexport {\n\tvec2,\n\tvec3,\n\tmat4,\n\tquad,\n\trgb,\n\thsl2rgb,\n\trng,\n\trand,\n\trandi,\n\trandSeed,\n\tchance,\n\tchoose,\n\tclamp,\n\tlerp,\n\tmap,\n\tmapc,\n\twave,\n\tdeg2rad,\n\trad2deg,\n\ttestAreaRect,\n\ttestAreaLine,\n\ttestAreaCircle,\n\ttestAreaPolygon,\n\ttestAreaPoint,\n\ttestAreaArea,\n\ttestLineLineT,\n\ttestRectRect2,\n\ttestLineLine,\n\ttestRectRect,\n\ttestRectLine,\n\ttestRectPoint,\n\ttestPolygonPoint,\n\ttestLinePolygon,\n\ttestPolygonPolygon,\n\ttestCircleCircle,\n\ttestCirclePoint,\n\ttestRectPolygon,\n\tminkDiff,\n\tdir,\n\tisVec2,\n\tisVec3,\n\tisColor,\n\tisMat4,\n};\n","class IDList<T> extends Map<number, T> {\n\t_lastID: number;\n\tconstructor(...args) {\n\t\tsuper(...args);\n\t\tthis._lastID = 0;\n\t}\n\tpush(v: T): number {\n\t\tconst id = this._lastID;\n\t\tthis.set(id, v);\n\t\tthis._lastID++;\n\t\treturn id;\n\t}\n\tpushd(v: T): () => void {\n\t\tconst id = this.push(v);\n\t\treturn () => this.delete(id);\n\t}\n}\n\nfunction deepEq(o1: any, o2: any): boolean {\n\tconst t1 = typeof o1;\n\tconst t2 = typeof o2;\n\tif (t1 !== t2) {\n\t\treturn false;\n\t}\n\tif (t1 === \"object\" && t2 === \"object\") {\n\t\tconst k1 = Object.keys(o1);\n\t\tconst k2 = Object.keys(o2);\n\t\tif (k1.length !== k2.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (const k of k1) {\n\t\t\tconst v1 = o1[k];\n\t\t\tconst v2 = o2[k];\n\t\t\tif (!(typeof v1 === \"function\" && typeof v2 === \"function\")) {\n\t\t\t\tif (!deepEq(v1, v2)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\treturn o1 === o2;\n}\n\nfunction downloadURL(url: string, filename: string) {\n\tconst a = document.createElement(\"a\");\n\tdocument.body.appendChild(a);\n\ta.setAttribute(\"style\", \"display: none\");\n\ta.href = url;\n\ta.download = filename;\n\ta.click();\n\tdocument.body.removeChild(a);\n}\n\nfunction downloadBlob(blob: Blob, filename: string) {\n\tconst url = URL.createObjectURL(blob);\n\tdownloadURL(url, filename);\n\tURL.revokeObjectURL(url);\n}\n\nexport {\n\tdeepEq,\n\tIDList,\n\tdownloadBlob,\n\tdownloadURL,\n};\n","import {\n\tvec2,\n\tvec3,\n\tquad,\n\trgb,\n\tmat4,\n\tdir,\n\tdeg2rad,\n\tisVec2,\n\tisVec3,\n\tisColor,\n\tisMat4,\n} from \"./math\";\n\nimport {\n\tdeepEq,\n} from \"./utils\";\n\nimport {\n\tColor,\n\tVec2,\n\tMat4,\n\tQuad,\n\tOrigin,\n\tGfxShader,\n\tGfxTexture,\n\tGfxTexData,\n\tGfxFont,\n\tUniform,\n\tTexFilter,\n\tRenderProps,\n\tCharTransform,\n\tTexWrap,\n\tFormattedText,\n\tDrawRectOpt,\n\tDrawLineOpt,\n\tDrawLinesOpt,\n\tDrawTriangleOpt,\n\tDrawPolygonOpt,\n\tDrawCircleOpt,\n\tDrawEllipseOpt,\n\tDrawUVQuadOpt,\n\tVertex,\n\tDrawTextOpt,\n} from \"./types\";\n\ntype GfxCtx = {\n\tvbuf: WebGLBuffer,\n\tibuf: WebGLBuffer,\n\tvqueue: number[],\n\tiqueue: number[],\n\tbackground: Color,\n\tdefShader: GfxShader,\n\tcurShader: GfxShader,\n\tdefTex: GfxTexture,\n\tcurTex: GfxTexture,\n\tbgTex: GfxTexture,\n\tcurUniform: Uniform,\n\ttransform: Mat4,\n\ttransformStack: Mat4[],\n\tdrawCalls: number,\n\tlastDrawCalls: number,\n\twidth: number,\n\theight: number,\n};\n\ntype GfxOpt = {\n\tbackground?: Color,\n\twidth?: number,\n\theight?: number,\n\tscale?: number,\n\ttexFilter?: TexFilter,\n    stretch?: boolean,\n    letterbox?: boolean,\n};\n\ntype DrawTextureOpt = RenderProps & {\n\ttex: GfxTexture,\n\twidth?: number,\n\theight?: number,\n\ttiled?: boolean,\n\tflipX?: boolean,\n\tflipY?: boolean,\n\tquad?: Quad,\n\torigin?: Origin | Vec2,\n}\n\n// TODO: name\ntype DrawTextOpt2 = RenderProps & {\n\ttext: string,\n\tfont?: GfxFont,\n\tsize?: number,\n\twidth?: number,\n\torigin?: Origin | Vec2,\n\ttransform?: (idx: number, ch: string) => CharTransform,\n}\n\ninterface GfxTexOpt {\n\tfilter?: TexFilter,\n\twrap?: TexWrap,\n}\n\ntype Gfx = {\n\twidth(): number,\n\theight(): number,\n\tscale(): number,\n\tbackground(): Color,\n\tmakeTex(data: GfxTexData, opt?: GfxTexOpt): GfxTexture,\n\tmakeShader(vert: string, frag: string): GfxShader,\n\tmakeFont(\n\t\ttex: GfxTexture,\n\t\tgw: number,\n\t\tgh: number,\n\t\tchars: string,\n\t): GfxFont,\n\tdrawTexture(opt: DrawTextureOpt),\n\tdrawText(opt: DrawTextOpt2),\n\tdrawFmtText(ftext: FormattedText),\n\tdrawRect(opt: DrawRectOpt),\n\tdrawLine(opt: DrawLineOpt),\n\tdrawLines(opt: DrawLinesOpt),\n\tdrawTriangle(opt: DrawTriangleOpt),\n\tdrawCircle(opt: DrawCircleOpt),\n\tdrawEllipse(opt: DrawEllipseOpt),\n\tdrawPolygon(opt: DrawPolygonOpt),\n\tdrawUVQuad(opt: DrawUVQuadOpt),\n\tfmtText(opt: DrawTextOpt2): FormattedText,\n\tframeStart(),\n\tframeEnd(),\n\tpushTransform(): void,\n\tpopTransform(): void,\n\tpushTranslate(x: number, y: number): void,\n\tpushTranslate(p: Vec2): void,\n\tpushScale(sx: number, sy: number): void,\n\tpushScale(s: number): void,\n\tpushScale(s: Vec2): void,\n\tpushRotateX(angle: number): void,\n\tpushRotateY(angle: number): void,\n\tpushRotateZ(angle: number): void,\n\tapplyMatrix(m: Mat4),\n\tdrawCalls(): number,\n};\n\nconst DEF_ORIGIN = \"topleft\";\nconst STRIDE = 9;\nconst QUEUE_COUNT = 65536;\nconst BG_GRID_SIZE = 64;\n\nconst VERT_TEMPLATE = `\nattribute vec3 a_pos;\nattribute vec2 a_uv;\nattribute vec4 a_color;\n\nvarying vec3 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nvec4 def_vert() {\n\treturn vec4(a_pos, 1.0);\n}\n\n{{user}}\n\nvoid main() {\n\tvec4 pos = vert(a_pos, a_uv, a_color);\n\tv_pos = a_pos;\n\tv_uv = a_uv;\n\tv_color = a_color;\n\tgl_Position = pos;\n}\n`;\n\nconst FRAG_TEMPLATE = `\nprecision mediump float;\n\nvarying vec3 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nuniform sampler2D u_tex;\n\nvec4 def_frag() {\n\treturn v_color * texture2D(u_tex, v_uv);\n}\n\n{{user}}\n\nvoid main() {\n\tgl_FragColor = frag(v_pos, v_uv, v_color, u_tex);\n\tif (gl_FragColor.a == 0.0) {\n\t\tdiscard;\n\t}\n}\n`;\n\nconst DEF_VERT = `\nvec4 vert(vec3 pos, vec2 uv, vec4 color) {\n\treturn def_vert();\n}\n`;\n\nconst DEF_FRAG = `\nvec4 frag(vec3 pos, vec2 uv, vec4 color, sampler2D tex) {\n\treturn def_frag();\n}\n`;\n\nfunction originPt(orig: Origin | Vec2): Vec2 {\n\tswitch (orig) {\n\t\tcase \"topleft\": return vec2(-1, -1);\n\t\tcase \"top\": return vec2(0, -1);\n\t\tcase \"topright\": return vec2(1, -1);\n\t\tcase \"left\": return vec2(-1, 0);\n\t\tcase \"center\": return vec2(0, 0);\n\t\tcase \"right\": return vec2(1, 0);\n\t\tcase \"botleft\": return vec2(-1, 1);\n\t\tcase \"bot\": return vec2(0, 1);\n\t\tcase \"botright\": return vec2(1, 1);\n\t\tdefault: return orig;\n\t}\n}\n\nfunction gfxInit(gl: WebGLRenderingContext, gopt: GfxOpt): Gfx {\n\n\tconst gfx: GfxCtx = (() => {\n\n\t\tconst defShader = makeShader(DEF_VERT, DEF_FRAG);\n\t\tconst emptyTex = makeTex(\n\t\t\tnew ImageData(new Uint8ClampedArray([ 255, 255, 255, 255, ]), 1, 1)\n\t\t);\n\n\t\tconst c = gopt.background ?? rgb(0, 0, 0);\n\n\t\tgl.clearColor(c.r / 255, c.g / 255, c.b / 255, 1);\n\t\tgl.enable(gl.BLEND);\n\t\tgl.enable(gl.SCISSOR_TEST);\n\t\tgl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\n\t\tconst vbuf = gl.createBuffer();\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, vbuf);\n\t\tgl.bufferData(gl.ARRAY_BUFFER, QUEUE_COUNT * 4, gl.DYNAMIC_DRAW);\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null);\n\n\t\tconst ibuf = gl.createBuffer();\n\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibuf);\n\t\tgl.bufferData(gl.ELEMENT_ARRAY_BUFFER, QUEUE_COUNT * 2, gl.DYNAMIC_DRAW);\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n\t\t// a checkerboard texture\n\t\tconst bgTex = makeTex(\n\t\t\tnew ImageData(new Uint8ClampedArray([\n\t\t\t\t128, 128, 128, 255,\n\t\t\t\t190, 190, 190, 255,\n\t\t\t\t190, 190, 190, 255,\n\t\t\t\t128, 128, 128, 255,\n\t\t\t]), 2, 2), {\n\t\t\t\twrap: \"repeat\",\n\t\t\t\tfilter: \"nearest\",\n\t\t\t},\n\t\t);\n\n\t\treturn {\n\t\t\tdrawCalls: 0,\n\t\t\tlastDrawCalls: 0,\n\t\t\tdefShader: defShader,\n\t\t\tcurShader: defShader,\n\t\t\tdefTex: emptyTex,\n\t\t\tcurTex: emptyTex,\n\t\t\tcurUniform: {},\n\t\t\tvbuf: vbuf,\n\t\t\tibuf: ibuf,\n\t\t\tvqueue: [],\n\t\t\tiqueue: [],\n\t\t\ttransform: mat4(),\n\t\t\ttransformStack: [],\n\t\t\tbackground: c,\n\t\t\tbgTex: bgTex,\n\t\t\twidth: gopt.width,\n\t\t\theight: gopt.height,\n\t\t};\n\n\t})();\n\n\tfunction powerOfTwo(n) {\n\t\treturn (Math.log(n) / Math.log(2)) % 1 === 0;\n\t}\n\n\tfunction makeTex(data: GfxTexData, opt: GfxTexOpt = {}): GfxTexture {\n\n\t\tconst id = gl.createTexture();\n\n\t\tgl.bindTexture(gl.TEXTURE_2D, id);\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n\n\t\tconst filter = (() => {\n\t\t\tswitch (opt.filter ?? gopt.texFilter) {\n\t\t\t\tcase \"linear\": return gl.LINEAR;\n\t\t\t\tcase \"nearest\": return gl.NEAREST;\n\t\t\t\tdefault: return gl.NEAREST;\n\t\t\t}\n\t\t})();\n\n\t\tconst wrap = (() => {\n\t\t\tswitch (opt.wrap) {\n\t\t\t\tcase \"repeat\": return gl.REPEAT;\n\t\t\t\tcase \"clampToEdge\": return gl.CLAMP_TO_EDGE;\n\t\t\t\tdefault: return gl.CLAMP_TO_EDGE;\n\t\t\t}\n\t\t})();\n\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filter);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filter);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrap);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrap);\n\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\n\t\treturn {\n\t\t\twidth: data.width,\n\t\t\theight: data.height,\n\t\t\tbind() {\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, id);\n\t\t\t},\n\t\t\tunbind() {\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t\t\t},\n\t\t};\n\n\t}\n\n\tfunction makeShader(\n\t\tvertSrc: string | null = DEF_VERT,\n\t\tfragSrc: string | null = DEF_FRAG,\n\t): GfxShader {\n\n\t\tlet msg;\n\t\tconst vcode = VERT_TEMPLATE.replace(\"{{user}}\", vertSrc ?? DEF_VERT);\n\t\tconst fcode = FRAG_TEMPLATE.replace(\"{{user}}\", fragSrc ?? DEF_FRAG);\n\t\tconst vertShader = gl.createShader(gl.VERTEX_SHADER);\n\t\tconst fragShader = gl.createShader(gl.FRAGMENT_SHADER);\n\n\t\tgl.shaderSource(vertShader, vcode);\n\t\tgl.shaderSource(fragShader, fcode);\n\t\tgl.compileShader(vertShader);\n\t\tgl.compileShader(fragShader);\n\n\t\tif ((msg = gl.getShaderInfoLog(vertShader))) {\n\t\t\tthrow new Error(msg);\n\t\t}\n\n\t\tif ((msg = gl.getShaderInfoLog(fragShader))) {\n\t\t\tthrow new Error(msg);\n\t\t}\n\n\t\tconst id = gl.createProgram();\n\n\t\tgl.attachShader(id, vertShader);\n\t\tgl.attachShader(id, fragShader);\n\n\t\tgl.bindAttribLocation(id, 0, \"a_pos\");\n\t\tgl.bindAttribLocation(id, 1, \"a_uv\");\n\t\tgl.bindAttribLocation(id, 2, \"a_color\");\n\n\t\tgl.linkProgram(id);\n\n\t\tif ((msg = gl.getProgramInfoLog(id))) {\n\t\t\t// for some reason on safari it always has a \"\\n\" msg\n\t\t\tif (msg !== \"\\n\") {\n\t\t\t\tthrow new Error(msg);\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\n\t\t\tbind() {\n\t\t\t\tgl.useProgram(id);\n\t\t\t},\n\n\t\t\tunbind() {\n\t\t\t\tgl.useProgram(null);\n\t\t\t},\n\n\t\t\tbindAttribs() {\n\t\t\t\tgl.vertexAttribPointer(0, 3, gl.FLOAT, false, STRIDE * 4, 0);\n\t\t\t\tgl.enableVertexAttribArray(0);\n\t\t\t\tgl.vertexAttribPointer(1, 2, gl.FLOAT, false, STRIDE * 4, 12);\n\t\t\t\tgl.enableVertexAttribArray(1);\n\t\t\t\tgl.vertexAttribPointer(2, 4, gl.FLOAT, false, STRIDE * 4, 20);\n\t\t\t\tgl.enableVertexAttribArray(2);\n\t\t\t},\n\n\t\t\tsend(uniform: Uniform) {\n\t\t\t\tthis.bind();\n\t\t\t\tfor (const name in uniform) {\n\t\t\t\t\tconst val = uniform[name];\n\t\t\t\t\tconst loc = gl.getUniformLocation(id, name);\n\t\t\t\t\tif (typeof val === \"number\") {\n\t\t\t\t\t\tgl.uniform1f(loc, val);\n\t\t\t\t\t} else if (isMat4(val)) {\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tgl.uniformMatrix4fv(loc, false, new Float32Array(val.m));\n\t\t\t\t\t} else if (isColor(val)) {\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tgl.uniform4f(loc, val.r, val.g, val.b, val.a);\n\t\t\t\t\t} else if (isVec3(val)) {\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tgl.uniform3f(loc, val.x, val.y, val.z);\n\t\t\t\t\t} else if (isVec2(val)) {\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tgl.uniform2f(loc, val.x, val.y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.unbind();\n\t\t\t},\n\n\t\t};\n\n\t}\n\n\tfunction makeFont(\n\t\ttex: GfxTexture,\n\t\tgw: number,\n\t\tgh: number,\n\t\tchars: string,\n\t): GfxFont {\n\n\t\tconst cols = tex.width / gw;\n\t\tconst rows = tex.height / gh;\n\t\tconst qw = 1.0 / cols;\n\t\tconst qh = 1.0 / rows;\n\t\tconst map: Record<string, Vec2> = {};\n\t\tconst charMap = chars.split(\"\").entries();\n\n\t\tfor (const [i, ch] of charMap) {\n\t\t\tmap[ch] = vec2(\n\t\t\t\t(i % cols) * qw,\n\t\t\t\tMath.floor(i / cols) * qh,\n\t\t\t);\n\t\t}\n\n\t\treturn {\n\t\t\ttex: tex,\n\t\t\tmap: map,\n\t\t\tqw: qw,\n\t\t\tqh: qh,\n\t\t};\n\n\t}\n\n\t// TODO: expose\n\tfunction drawRaw(\n\t\tverts: Vertex[],\n\t\tindices: number[],\n\t\ttex: GfxTexture = gfx.defTex,\n\t\tshader: GfxShader = gfx.defShader,\n\t\tuniform: Uniform = {},\n\t) {\n\n\t\ttex = tex ?? gfx.defTex;\n\t\tshader = shader ?? gfx.defShader;\n\n\t\t// flush on texture / shader change and overflow\n\t\tif (\n\t\t\ttex !== gfx.curTex\n\t\t\t|| shader !== gfx.curShader\n\t\t\t|| !deepEq(gfx.curUniform, uniform)\n\t\t\t|| gfx.vqueue.length + verts.length * STRIDE > QUEUE_COUNT\n\t\t\t|| gfx.iqueue.length + indices.length > QUEUE_COUNT\n\t\t) {\n\t\t\tflush();\n\t\t}\n\n\t\tgfx.curTex = tex;\n\t\tgfx.curShader = shader;\n\t\tgfx.curUniform = uniform;\n\n\t\tindices.forEach((i) => {\n\t\t\tgfx.iqueue.push(i + gfx.vqueue.length / STRIDE);\n\t\t});\n\n\t\tverts.forEach((v) => {\n\t\t\tconst pt = toNDC(gfx.transform.multVec2(v.pos.xy()));\n\t\t\tgfx.vqueue.push(\n\t\t\t\tpt.x, pt.y, v.pos.z,\n\t\t\t\tv.uv.x, v.uv.y,\n\t\t\t\tv.color.r / 255, v.color.g / 255, v.color.b / 255, v.opacity,\n\t\t\t);\n\t\t});\n\n\t}\n\n\tfunction flush() {\n\n\t\tif (\n\t\t\t!gfx.curTex\n\t\t\t|| !gfx.curShader\n\t\t\t|| gfx.vqueue.length === 0\n\t\t\t|| gfx.iqueue.length === 0\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tgfx.curShader.send(gfx.curUniform);\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, gfx.vbuf);\n\t\tgl.bufferSubData(gl.ARRAY_BUFFER, 0, new Float32Array(gfx.vqueue));\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, gfx.ibuf);\n\t\tgl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, 0, new Uint16Array(gfx.iqueue));\n\t\tgfx.curShader.bind();\n\t\tgfx.curShader.bindAttribs();\n\t\tgfx.curTex.bind();\n\t\tgl.drawElements(gl.TRIANGLES, gfx.iqueue.length, gl.UNSIGNED_SHORT, 0);\n\t\tgfx.curTex.unbind();\n\t\tgfx.curShader.unbind();\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null);\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n\t\tgfx.iqueue = [];\n\t\tgfx.vqueue = [];\n\n\t\tgfx.drawCalls++;\n\n\t}\n\n\tfunction frameStart() {\n\n\t\tgl.clear(gl.COLOR_BUFFER_BIT);\n\n\t\tif (!gopt.background) {\n\t\t\tdrawUVQuad({\n\t\t\t\twidth: width(),\n\t\t\t\theight: height(),\n\t\t\t\tquad: quad(\n\t\t\t\t\t0,\n\t\t\t\t\t0,\n\t\t\t\t\twidth() * scale() / BG_GRID_SIZE,\n\t\t\t\t\theight() * scale() / BG_GRID_SIZE,\n\t\t\t\t),\n\t\t\t\ttex: gfx.bgTex,\n\t\t\t})\n\t\t}\n\n\t\tgfx.drawCalls = 0;\n\t\tgfx.transformStack = [];\n\t\tgfx.transform = mat4();\n\n\t}\n\n\tfunction frameEnd() {\n\t\tflush();\n\t\tgfx.lastDrawCalls = gfx.drawCalls;\n\t}\n\n\tfunction drawCalls() {\n\t\treturn gfx.lastDrawCalls;\n\t}\n\n\tfunction toNDC(pt: Vec2): Vec2 {\n\t\treturn vec2(\n\t\t\tpt.x / width() * 2 - 1,\n\t\t\t-pt.y / height() * 2 + 1,\n\t\t);\n\t}\n\n\tfunction applyMatrix(m: Mat4) {\n\t\tgfx.transform = m.clone();\n\t}\n\n\tfunction pushTranslate(...args) {\n\t\tif (args[0] === undefined) return;\n\t\tconst p = vec2(...args);\n\t\tif (p.x === 0 && p.y === 0) return;\n\t\tgfx.transform = gfx.transform.translate(p);\n\t}\n\n\tfunction pushScale(...args) {\n\t\tif (args[0] === undefined) return;\n\t\tconst p = vec2(...args);\n\t\tif (p.x === 1 && p.y === 1) return;\n\t\tgfx.transform = gfx.transform.scale(p);\n\t}\n\n\tfunction pushRotateX(a: number) {\n\t\tif (!a) {\n\t\t\treturn;\n\t\t}\n\t\tgfx.transform = gfx.transform.rotateX(a);\n\t}\n\n\tfunction pushRotateY(a: number) {\n\t\tif (!a) {\n\t\t\treturn;\n\t\t}\n\t\tgfx.transform = gfx.transform.rotateY(a);\n\t}\n\n\tfunction pushRotateZ(a: number) {\n\t\tif (!a) {\n\t\t\treturn;\n\t\t}\n\t\tgfx.transform = gfx.transform.rotateZ(a);\n\t}\n\n\tfunction pushTransform() {\n\t\tgfx.transformStack.push(gfx.transform.clone());\n\t}\n\n\tfunction popTransform() {\n\t\tif (gfx.transformStack.length > 0) {\n\t\t\tgfx.transform = gfx.transformStack.pop();\n\t\t}\n\t}\n\n\t// draw a uv textured quad\n\tfunction drawUVQuad(opt: DrawUVQuadOpt) {\n\n\t\tif (opt.width === undefined || opt.height === undefined) {\n\t\t\tthrow new Error(\"drawUVQuad() requires property \\\"width\\\" and \\\"height\\\".\");\n\t\t}\n\n\t\tif (opt.width <= 0 || opt.height <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst w = opt.width;\n\t\tconst h = opt.height;\n\t\tconst origin = originPt(opt.origin || DEF_ORIGIN);\n\t\tconst offset = origin.scale(vec2(w, h).scale(-0.5));\n\t\tconst q = opt.quad || quad(0, 0, 1, 1);\n\t\tconst color = opt.color || rgb(255, 255, 255);\n\t\tconst opacity = opt.opacity ?? 1;\n\n\t\tpushTransform();\n\t\tpushTranslate(opt.pos);\n\t\tpushRotateZ(opt.angle);\n\t\tpushScale(opt.scale);\n\t\tpushTranslate(offset);\n\n\t\tdrawRaw([\n\t\t\t{\n\t\t\t\tpos: vec3(-w / 2, h / 2, 0),\n\t\t\t\tuv: vec2(opt.flipX ? q.x + q.w : q.x, opt.flipY ? q.y : q.y + q.h),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: vec3(-w / 2, -h / 2, 0),\n\t\t\t\tuv: vec2(opt.flipX ? q.x + q.w : q.x, opt.flipY ? q.y + q.h : q.y),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: vec3(w / 2, -h / 2, 0),\n\t\t\t\tuv: vec2(opt.flipX ? q.x : q.x + q.w, opt.flipY ? q.y + q.h : q.y),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: vec3(w / 2, h / 2, 0),\n\t\t\t\tuv: vec2(opt.flipX ? q.x : q.x + q.w, opt.flipY ? q.y : q.y + q.h),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t], [0, 1, 3, 1, 2, 3], opt.tex, opt.shader, opt.uniform);\n\n\t\tpopTransform();\n\n\t}\n\n\t// TODO: clean\n\tfunction drawTexture(\n\t\topt: DrawTextureOpt,\n\t) {\n\n\t\tif (!opt.tex) {\n\t\t\tthrow new Error(\"drawTexture() requires property \\\"tex\\\".\");\n\t\t}\n\n\t\tconst q = opt.quad ?? quad(0, 0, 1, 1);\n\t\tconst w = opt.tex.width * q.w;\n\t\tconst h = opt.tex.height * q.h;\n\t\tconst scale = vec2(1);\n\n\t\tif (opt.tiled) {\n\n\t\t\t// TODO: draw fract\n\t\t\tconst repX = Math.ceil((opt.width || w) / w);\n\t\t\tconst repY = Math.ceil((opt.height || h) / h);\n\t\t\tconst origin = originPt(opt.origin || DEF_ORIGIN).add(vec2(1, 1)).scale(0.5);\n\t\t\tconst offset = origin.scale(repX * w, repY * h);\n\n\t\t\t// TODO: rotation\n\t\t\tfor (let i = 0; i < repX; i++) {\n\t\t\t\tfor (let j = 0; j < repY; j++) {\n\t\t\t\t\tdrawUVQuad({\n\t\t\t\t\t\t...opt,\n\t\t\t\t\t\tpos: (opt.pos || vec2(0)).add(vec2(w * i, h * j)).sub(offset),\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tscale: scale.scale(opt.scale || vec2(1)),\n\t\t\t\t\t\ttex: opt.tex,\n\t\t\t\t\t\tquad: q,\n\t\t\t\t\t\twidth: w,\n\t\t\t\t\t\theight: h,\n\t\t\t\t\t\torigin: \"topleft\",\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\n\t\t\t// TODO: should this ignore scale?\n\t\t\tif (opt.width && opt.height) {\n\t\t\t\tscale.x = opt.width / w;\n\t\t\t\tscale.y = opt.height / h;\n\t\t\t} else if (opt.width) {\n\t\t\t\tscale.x = opt.width / w;\n\t\t\t\tscale.y = scale.x;\n\t\t\t} else if (opt.height) {\n\t\t\t\tscale.y = opt.height / h;\n\t\t\t\tscale.x = scale.y;\n\t\t\t}\n\n\t\t\tdrawUVQuad({\n\t\t\t\t...opt,\n\t\t\t\t// @ts-ignore\n\t\t\t\tscale: scale.scale(opt.scale || vec2(1)),\n\t\t\t\ttex: opt.tex,\n\t\t\t\tquad: q,\n\t\t\t\twidth: w,\n\t\t\t\theight: h,\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t// generate vertices to form an arc\n\tfunction getArcPts(\n\t\tpos: Vec2,\n\t\tradiusX: number,\n\t\tradiusY: number,\n\t\tstart: number,\n\t\tend: number,\n\t\tres: number = 1,\n\t): Vec2[] {\n\n\t\t// normalize and turn start and end angles to radians\n\t\tstart = deg2rad(start % 360);\n\t\tend = deg2rad(end % 360);\n\t\tif (end <= start) end += Math.PI * 2;\n\n\t\t// TODO: better way to get this?\n\t\t// the number of vertices is sqrt(r1 + r2) * 3 * res with a minimum of 16\n\t\tconst nverts = Math.ceil(Math.max(Math.sqrt(radiusX + radiusY) * 3 * (res || 1), 16));\n\t\tconst step = (end - start) / nverts;\n\t\tconst pts = [];\n\n\t\t// calculate vertices\n\t\tfor (let a = start; a < end; a += step) {\n\t\t\tpts.push(pos.add(radiusX * Math.cos(a), radiusY * Math.sin(a)));\n\t\t}\n\n\t\t// doing this on the side due to possible floating point inaccuracy\n\t\tpts.push(pos.add(radiusX * Math.cos(end), radiusY * Math.sin(end)));\n\n\t\treturn pts;\n\n\t}\n\n\tfunction drawRect(opt: DrawRectOpt) {\n\n\t\tif (opt.width === undefined || opt.height === undefined) {\n\t\t\tthrow new Error(\"drawRect() requires property \\\"width\\\" and \\\"height\\\".\");\n\t\t}\n\n\t\tif (opt.width <= 0 || opt.height <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst w = opt.width;\n\t\tconst h = opt.height;\n\t\tconst origin = originPt(opt.origin || DEF_ORIGIN).add(1, 1);\n\t\tconst offset = origin.scale(vec2(w, h).scale(-0.5));\n\n\t\tlet pts = [\n\t\t\tvec2(0, 0),\n\t\t\tvec2(w, 0),\n\t\t\tvec2(w, h),\n\t\t\tvec2(0, h),\n\t\t];\n\n\t\t// TODO: drawPolygon should handle generic rounded corners\n\t\tif (opt.radius) {\n\n\t\t\t// maxium radius is half the shortest side\n\t\t\tconst r = Math.min(Math.min(w, h) / 2, opt.radius);\n\n\t\t\tpts = [\n\t\t\t\tvec2(r, 0),\n\t\t\t\tvec2(w - r, 0),\n\t\t\t\t...getArcPts(vec2(w - r, r), r, r, 270, 360),\n\t\t\t\tvec2(w, r),\n\t\t\t\tvec2(w, h - r),\n\t\t\t\t...getArcPts(vec2(w - r, h - r), r, r, 0, 90),\n\t\t\t\tvec2(w - r, h),\n\t\t\t\tvec2(r, h),\n\t\t\t\t...getArcPts(vec2(r, h - r), r, r, 90, 180),\n\t\t\t\tvec2(0, h - r),\n\t\t\t\tvec2(0, r),\n\t\t\t\t...getArcPts(vec2(r, r), r, r, 180, 270),\n\t\t\t];\n\n\t\t}\n\n\t\tdrawPolygon({ ...opt, offset, pts });\n\n\t}\n\n\tfunction drawLine(opt: DrawLineOpt) {\n\n\t\tconst { p1, p2 } = opt;\n\n\t\tif (!p1 || !p2) {\n\t\t\tthrow new Error(\"drawLine() requires properties \\\"p1\\\" and \\\"p2\\\".\");\n\t\t}\n\n\t\tconst w = opt.width || 1;\n\n\t\t// the displacement from the line end point to the corner point\n\t\tconst dis = p2.sub(p1).unit().normal().scale(w * 0.5);\n\n\t\t// calculate the 4 corner points of the line polygon\n\t\tconst verts = [\n\t\t\tp1.sub(dis),\n\t\t\tp1.add(dis),\n\t\t\tp2.add(dis),\n\t\t\tp2.sub(dis),\n\t\t].map((p) => ({\n\t\t\tpos: vec3(p.x, p.y, 0),\n\t\t\tuv: vec2(0),\n\t\t\tcolor: opt.color ?? rgb(),\n\t\t\topacity: opt.opacity ?? 1,\n\t\t}));\n\n\t\tdrawRaw(verts, [0, 1, 3, 1, 2, 3], gfx.defTex, opt.shader, opt.uniform);\n\n\t}\n\n\tfunction drawLines(opt: DrawLinesOpt) {\n\n\t\tconst pts = opt.pts;\n\n\t\tif (!pts) {\n\t\t\tthrow new Error(\"drawLines() requires property \\\"pts\\\".\");\n\t\t}\n\n\t\tif (pts.length < 2) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (opt.radius && pts.length >= 3) {\n\n\t\t\t// TODO: rounded vertices for arbitury polygonic shape\n\t\t\tlet minLen = pts[0].dist(pts[1]);\n\n\t\t\tfor (let i = 1; i < pts.length - 1; i++) {\n\t\t\t\tminLen = Math.min(pts[i].dist(pts[i + 1]), minLen);\n\t\t\t}\n\n\t\t\tconst radius = Math.min(opt.radius, minLen / 2);\n\n\t\t\tdrawLine({ ...opt, p1: pts[0], p2: pts[1], });\n\n\t\t\tfor (let i = 1; i < pts.length - 2; i++) {\n\t\t\t\tconst p1 = pts[i];\n\t\t\t\tconst p2 = pts[i + 1];\n\t\t\t\tdrawLine({\n\t\t\t\t\t...opt,\n\t\t\t\t\tp1: p1,\n\t\t\t\t\tp2: p2,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tdrawLine({ ...opt, p1: pts[pts.length - 2], p2: pts[pts.length - 1], });\n\n\t\t} else {\n\n\t\t\tfor (let i = 0; i < pts.length - 1; i++) {\n\t\t\t\tdrawLine({\n\t\t\t\t\t...opt,\n\t\t\t\t\tp1: pts[i],\n\t\t\t\t\tp2: pts[i + 1],\n\t\t\t\t});\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction drawTriangle(opt: DrawTriangleOpt) {\n\t\tif (!opt.p1 || !opt.p2 || !opt.p3) {\n\t\t\tthrow new Error(\"drawPolygon() requires properties \\\"p1\\\", \\\"p2\\\" and \\\"p3\\\".\");\n\t\t}\n\t\treturn drawPolygon({\n\t\t\t...opt,\n\t\t\tpts: [opt.p1, opt.p2, opt.p3],\n\t\t});\n\t}\n\n\t// TODO: origin\n\tfunction drawCircle(opt: DrawCircleOpt) {\n\n\t\tif (!opt.radius) {\n\t\t\tthrow new Error(\"drawCircle() requires property \\\"radius\\\".\");\n\t\t}\n\n\t\tif (opt.radius === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tdrawEllipse({\n\t\t\t...opt,\n\t\t\tradiusX: opt.radius,\n\t\t\tradiusY: opt.radius,\n\t\t\tangle: 0,\n\t\t});\n\n\t}\n\n\t// TODO: use fan-like triangulation\n\tfunction drawEllipse(opt: DrawEllipseOpt) {\n\n\t\tif (opt.radiusX === undefined || opt.radiusY === undefined) {\n\t\t\tthrow new Error(\"drawEllipse() requires properties \\\"radiusX\\\" and \\\"radiusY\\\".\");\n\t\t}\n\n\t\tif (opt.radiusX === 0 || opt.radiusY === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tdrawPolygon({\n\t\t\t...opt,\n\t\t\tpts: getArcPts(\n\t\t\t\tvec2(0),\n\t\t\t\topt.radiusX,\n\t\t\t\topt.radiusY,\n\t\t\t\topt.start ?? 0,\n\t\t\t\topt.end ?? 360,\n\t\t\t\topt.resolution\n\t\t\t),\n\t\t\tradius: 0,\n\t\t});\n\n\t}\n\n\tfunction drawPolygon(opt: DrawPolygonOpt) {\n\n\t\tif (!opt.pts) {\n\t\t\tthrow new Error(\"drawPolygon() requires property \\\"pts\\\".\");\n\t\t}\n\n\t\tconst npts = opt.pts.length;\n\n\t\tif (npts < 3) {\n\t\t\treturn;\n\t\t}\n\n\t\tpushTransform();\n\t\tpushTranslate(opt.pos);\n\t\tpushScale(opt.scale);\n\t\tpushRotateZ(opt.angle);\n\t\tpushTranslate(opt.offset);\n\n\t\tif (opt.fill !== false) {\n\n\t\t\tconst color = opt.color ?? rgb();\n\n\t\t\tconst verts = opt.pts.map((pt) => ({\n\t\t\t\tpos: vec3(pt.x, pt.y, 0),\n\t\t\t\tuv: vec2(0, 0),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opt.opacity ?? 1,\n\t\t\t}));\n\n\t\t\t// TODO: better triangulation\n\t\t\tconst indices = [...Array(npts - 2).keys()]\n\t\t\t\t.map((n) => [0, n + 1, n + 2])\n\t\t\t\t.flat();\n\n\t\t\tdrawRaw(verts, opt.indices ?? indices, gfx.defTex, opt.shader, opt.uniform);\n\n\t\t}\n\n\t\tif (opt.outline) {\n\t\t\tdrawLines({\n\t\t\t\tpts: [ ...opt.pts, opt.pts[0] ],\n\t\t\t\tradius: opt.radius,\n\t\t\t\twidth: opt.outline.width,\n\t\t\t\tcolor: opt.outline.color,\n\t\t\t});\n\t\t}\n\n\t\tpopTransform();\n\n\t}\n\n\t// format text and return a list of chars with their calculated position\n\tfunction fmtText(opt: DrawTextOpt2): FormattedText {\n\n\t\tif (opt.text === undefined) {\n\t\t\tthrow new Error(\"fmtText() requires property \\\"text\\\".\");\n\t\t}\n\n\t\tconst font = opt.font;\n\t\tconst chars = (opt.text + \"\").split(\"\");\n\t\tconst gw = font.qw * font.tex.width;\n\t\tconst gh = font.qh * font.tex.height;\n\t\tconst size = opt.size || gh;\n\t\tconst scale = vec2(size / gh).scale(vec2(opt.scale || 1));\n\t\tconst cw = scale.x * gw;\n\t\tconst ch = scale.y * gh;\n\t\tlet curX = 0;\n\t\tlet th = ch;\n\t\tlet tw = 0;\n\t\tconst flines = [];\n\t\tlet curLine = [];\n\t\tlet lastSpace = null;\n\t\tlet cursor = 0;\n\n\t\twhile (cursor < chars.length) {\n\n\t\t\tlet char = chars[cursor];\n\n\t\t\t// check new line\n\t\t\tif (char === \"\\n\") {\n\t\t\t\t// always new line on '\\n'\n\t\t\t\tth += ch;\n\t\t\t\tcurX = 0;\n\t\t\t\tlastSpace = null;\n\t\t\t\tflines.push(curLine);\n\t\t\t\tcurLine = [];\n\t\t\t} else if ((opt.width ? (curX + cw > opt.width) : false)) {\n\t\t\t\t// new line on last word if width exceeds\n\t\t\t\tth += ch;\n\t\t\t\tcurX = 0;\n\t\t\t\tif (lastSpace != null) {\n\t\t\t\t\tcursor -= curLine.length - lastSpace;\n\t\t\t\t\tchar = chars[cursor];\n\t\t\t\t\tcurLine = curLine.slice(0, lastSpace);\n\t\t\t\t}\n\t\t\t\tlastSpace = null;\n\t\t\t\tflines.push(curLine);\n\t\t\t\tcurLine = [];\n\t\t\t}\n\n\t\t\t// push char\n\t\t\tif (char !== \"\\n\") {\n\t\t\t\tcurLine.push(char);\n\t\t\t\tcurX += cw;\n\t\t\t\tif (char === \" \") {\n\t\t\t\t\tlastSpace = curLine.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttw = Math.max(tw, curX);\n\t\t\tcursor++;\n\n\t\t}\n\n\t\tflines.push(curLine);\n\n\t\tif (opt.width) {\n\t\t\ttw = opt.width;\n\t\t}\n\n\t\t// whole text offset\n\t\tconst fchars = [];\n\t\tconst pos = vec2(opt.pos || 0);\n\t\tconst offset = originPt(opt.origin || DEF_ORIGIN).scale(0.5);\n\t\t// this math is complicated i forgot how it works instantly\n\t\tconst ox = -offset.x * cw - (offset.x + 0.5) * (tw - cw);\n\t\tconst oy = -offset.y * ch - (offset.y + 0.5) * (th - ch);\n\t\tlet idx = 0;\n\n\t\tflines.forEach((line, ln) => {\n\n\t\t\t// line offset\n\t\t\tconst oxl = (tw - line.length * cw) * (offset.x + 0.5);\n\n\t\t\tline.forEach((char, cn) => {\n\t\t\t\tconst qpos = font.map[char];\n\t\t\t\tconst x = cn * cw;\n\t\t\t\tconst y = ln * ch;\n\t\t\t\tidx += 1;\n\t\t\t\tif (qpos) {\n\t\t\t\t\tconst fchar = {\n\t\t\t\t\t\ttex: font.tex,\n\t\t\t\t\t\tquad: quad(qpos.x, qpos.y, font.qw, font.qh),\n\t\t\t\t\t\tch: char,\n\t\t\t\t\t\tpos: vec2(pos.x + x + ox + oxl, pos.y + y + oy),\n\t\t\t\t\t\topacity: opt.opacity,\n\t\t\t\t\t\tcolor: opt.color ?? rgb(255, 255, 255),\n\t\t\t\t\t\torigin: opt.origin,\n\t\t\t\t\t\tscale: scale,\n\t\t\t\t\t\tangle: 0,\n\t\t\t\t\t}\n\t\t\t\t\tif (opt.transform) {\n\t\t\t\t\t\tconst tr = opt.transform(idx, char) ?? {};\n\t\t\t\t\t\tif (tr.pos) fchar.pos = fchar.pos.add(tr.pos);\n\t\t\t\t\t\tif (tr.scale) fchar.scale = fchar.scale.scale(vec2(tr.scale));\n\t\t\t\t\t\tif (tr.angle) fchar.angle += tr.angle;\n\t\t\t\t\t\tif (tr.color) fchar.color = fchar.color.mult(tr.color);\n\t\t\t\t\t\tif (tr.opacity) fchar.opacity *= tr.opacity;\n\t\t\t\t\t}\n\t\t\t\t\tfchars.push(fchar);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn {\n\t\t\twidth: tw,\n\t\t\theight: th,\n\t\t\tchars: fchars,\n\t\t};\n\n\t}\n\n\tfunction drawText(opt: DrawTextOpt2) {\n\t\tdrawFmtText(fmtText(opt));\n\t}\n\n\t// TODO: rotation\n\tfunction drawFmtText(ftext: FormattedText) {\n\t\tfor (const ch of ftext.chars) {\n\t\t\tdrawUVQuad({\n\t\t\t\ttex: ch.tex,\n\t\t\t\twidth: ch.tex.width * ch.quad.w,\n\t\t\t\theight: ch.tex.height * ch.quad.h,\n\t\t\t\tpos: ch.pos,\n\t\t\t\tscale: ch.scale,\n\t\t\t\tangle: ch.angle,\n\t\t\t\tcolor: ch.color,\n\t\t\t\topacity: ch.opacity,\n\t\t\t\tquad: ch.quad,\n\t\t\t\t// TODO: topleft\n\t\t\t\torigin: \"center\",\n\t\t\t});\n\t\t}\n\t}\n\n//  \twindow.addEventListener(\"resize\", updateSize);\n\n\tfunction updateSize() {\n\t\tif (gopt.width && gopt.height && gopt.stretch) {\n\t\t\tif (gopt.letterbox) {\n\t\t\t\t// TODO: not working\n\t\t\t\tconst r1 = gl.drawingBufferWidth / gl.drawingBufferHeight;\n\t\t\t\tconst r2 = gopt.width / gopt.height;\n\t\t\t\tif (r1 > r2) {\n\t\t\t\t\tgfx.width = gopt.height * r1;\n\t\t\t\t\tgfx.height = gopt.height;\n\t\t\t\t\tconst sw = gl.drawingBufferHeight * r2;\n\t\t\t\t\tconst sh = gl.drawingBufferHeight;\n\t\t\t\t\tconst x = (gl.drawingBufferWidth - sw) / 2;\n\t\t\t\t\tgl.scissor(x, 0, sw, sh);\n\t\t\t\t\tgl.viewport(x, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\t\t\t\t} else {\n\t\t\t\t\tgfx.width = gopt.width;\n\t\t\t\t\tgfx.height = gopt.width / r1;\n\t\t\t\t\tconst sw = gl.drawingBufferWidth;\n\t\t\t\t\tconst sh = gl.drawingBufferWidth / r2;\n\t\t\t\t\tconst y = (gl.drawingBufferHeight - sh) / 2;\n\t\t\t\t\tgl.scissor(0, gl.drawingBufferHeight - sh - y, sw, sh);\n\t\t\t\t\tgl.viewport(0, -y, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tgfx.width = gopt.width;\n\t\t\t\tgfx.height = gopt.height;\n\t\t\t\tgl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\t\t\t}\n\t\t} else {\n\t\t\tgfx.width = gl.drawingBufferWidth / scale();\n\t\t\tgfx.height = gl.drawingBufferHeight / scale();\n\t\t\tgl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\t\t}\n\t}\n\n\t// get game width\n\tfunction width(): number {\n\t\treturn gfx.width;\n\t}\n\n\t// get game height\n\tfunction height(): number {\n\t\treturn gfx.height;\n\t}\n\n\tfunction scale(): number {\n\t\treturn gopt.scale ?? 1;\n\t}\n\n\tfunction background(): Color {\n\t\treturn gfx.background.clone();\n\t}\n\n\tupdateSize();\n\tframeStart();\n\tframeEnd();\n\n\treturn {\n\t\twidth,\n\t\theight,\n\t\tscale,\n\t\tmakeTex,\n\t\tmakeShader,\n\t\tmakeFont,\n\t\tdrawTexture,\n\t\tdrawText,\n\t\tdrawFmtText,\n\t\tdrawRect,\n\t\tdrawLine,\n\t\tdrawLines,\n\t\tdrawTriangle,\n\t\tdrawCircle,\n\t\tdrawEllipse,\n\t\tdrawPolygon,\n\t\tdrawUVQuad,\n\t\tfmtText,\n\t\tframeStart,\n\t\tframeEnd,\n\t\tpushTranslate,\n\t\tpushScale,\n\t\tpushRotateX,\n\t\tpushRotateY,\n\t\tpushRotateZ,\n\t\tpushTransform,\n\t\tpopTransform,\n\t\tapplyMatrix,\n\t\tdrawCalls,\n\t\tbackground,\n\t};\n\n}\n\nexport {\n\tGfx,\n\toriginPt,\n\tgfxInit,\n};\n","import {\n\tvec2,\n} from \"./math\";\n\nimport {\n\tKey,\n\tMouseButton,\n\tVec2,\n\tCursor,\n} from \"./types\";\n\ntype ButtonState =\n\t\"up\"\n\t| \"pressed\"\n\t| \"rpressed\"\n\t| \"down\"\n\t| \"released\"\n\t;\n\ntype AppOpt = {\n\twidth?: number,\n\theight?: number,\n\tstretch?: boolean,\n\tscale?: number,\n\tcrisp?: boolean,\n\tcanvas?: HTMLCanvasElement,\n\troot?: HTMLElement,\n\ttouchToMouse?: boolean,\n\taudioCtx?: AudioContext,\n};\n\ntype AppCtx = {\n\tcanvas: HTMLCanvasElement,\n\tmousePos: Vec2,\n\tmouseDeltaPos: Vec2,\n\tmouseStates: Record<string, ButtonState>,\n\tkeyStates: Record<string, ButtonState>,\n\tcharInputted: string[],\n\tisMouseMoved: boolean,\n\ttime: number,\n\tdt: number,\n\trealTime: number,\n\tskipTime: boolean,\n\tscale: number,\n\tisTouch: boolean,\n\tloopID: number | null,\n\tstopped: boolean,\n\tfps: number,\n\tfpsBuf: number[],\n\tfpsTimer: number,\n\tisKeyPressed: boolean,\n\tisKeyPressedRepeat: boolean,\n};\n\ntype App = {\n\tgl: WebGLRenderingContext,\n\tmousePos(): Vec2,\n\tmouseDeltaPos(): Vec2,\n\tisKeyDown(k?: Key): boolean,\n\tisKeyPressed(k?: Key): boolean,\n\tisKeyPressedRepeat(k?: Key): boolean,\n\tisKeyReleased(k?: Key): boolean,\n\tisMouseDown(m?: MouseButton): boolean,\n\tisMousePressed(m?: MouseButton): boolean,\n\tisMouseReleased(m?: MouseButton): boolean,\n\tisMouseMoved(m?: MouseButton): boolean,\n\tcharInputted(): string[],\n\tcursor(c?: Cursor): Cursor,\n\tfullscreen(f?: boolean): void,\n\tisFullscreen(): boolean,\n\tdt(): number,\n\tfps(): number,\n\ttime(): number,\n\tscreenshot(): string,\n\trun(f: () => void),\n\tquit(),\n\tisFocused(): boolean,\n\tfocus(),\n\tcanvas: HTMLCanvasElement,\n\tisTouch: boolean,\n\tscale: number,\n};\n\nfunction processBtnState(s: ButtonState): ButtonState {\n\tif (s === \"pressed\" || s === \"rpressed\") {\n\t\treturn \"down\";\n\t}\n\tif (s === \"released\") {\n\t\treturn \"up\";\n\t}\n\treturn s;\n}\n\nfunction enterFullscreen(el: HTMLElement) {\n\tif (el.requestFullscreen) el.requestFullscreen();\n\t// @ts-ignore\n\telse if (el.webkitRequestFullscreen) el.webkitRequestFullscreen();\n};\n\nfunction exitFullscreen() {\n\tif (document.exitFullscreen) document.exitFullscreen();\n\t// @ts-ignore\n\telse if (document.webkitExitFullScreen) document.webkitExitFullScreen();\n};\n\nfunction getFullscreenElement(): Element | void {\n\treturn document.fullscreenElement\n\t\t// @ts-ignore\n\t\t|| document.webkitFullscreenElement\n\t\t;\n};\n\nfunction appInit(gopt: AppOpt = {}): App {\n\n    const root = gopt.root ?? document.body;\n\n\tif (root === document.body) {\n\t\tdocument.body.style[\"width\"] = \"100%\";\n\t\tdocument.body.style[\"height\"] = \"100%\";\n\t\tdocument.body.style[\"margin\"] = \"0px\";\n\t\tdocument.documentElement.style[\"width\"] = \"100%\";\n\t\tdocument.documentElement.style[\"height\"] = \"100%\";\n\t}\n\n\tconst app: AppCtx = {\n\t\tcanvas: gopt.canvas ?? (() => {\n\t\t\tconst canvas = document.createElement(\"canvas\");\n\t\t\troot.appendChild(canvas);\n\t\t\treturn canvas;\n\t\t})(),\n\t\tkeyStates: {},\n\t\tcharInputted: [],\n\t\tisMouseMoved: false,\n\t\tisKeyPressed: false,\n\t\tisKeyPressedRepeat: false,\n\t\tmouseStates: {},\n\t\tmousePos: vec2(0, 0),\n\t\tmouseDeltaPos: vec2(0, 0),\n\t\ttime: 0,\n\t\trealTime: 0,\n\t\tskipTime: false,\n\t\tdt: 0.0,\n\t\tscale: gopt.scale ?? 1,\n\t\tisTouch: false,\n\t\tloopID: null,\n\t\tstopped: false,\n\t\tfps: 0,\n\t\tfpsBuf: [],\n\t\tfpsTimer: 0,\n\t};\n\n\tconst keyMap = {\n\t\t\"ArrowLeft\": \"left\",\n\t\t\"ArrowRight\": \"right\",\n\t\t\"ArrowUp\": \"up\",\n\t\t\"ArrowDown\": \"down\",\n\t\t\" \": \"space\",\n\t};\n\n\tconst preventDefaultKeys = [\n\t\t\"space\",\n\t\t\"left\",\n\t\t\"right\",\n\t\t\"up\",\n\t\t\"down\",\n\t\t\"tab\",\n\t\t\"f1\",\n\t\t\"f2\",\n\t\t\"f3\",\n\t\t\"f4\",\n\t\t\"f5\",\n\t\t\"f6\",\n\t\t\"f7\",\n\t\t\"f8\",\n\t\t\"f9\",\n\t\t\"f10\",\n\t\t\"f11\",\n\t\t\"s\",\n\t];\n\n\tif (gopt.width && gopt.height && !gopt.stretch) {\n\t\tapp.canvas.width = gopt.width * app.scale;\n\t\tapp.canvas.height = gopt.height * app.scale;\n\t} else {\n\t\tapp.canvas.width = app.canvas.parentElement.offsetWidth;\n\t\tapp.canvas.height = app.canvas.parentElement.offsetHeight;\n\t}\n\n\tconst styles = [\n\t\t\"outline: none\",\n\t\t\"cursor: default\",\n\t];\n\n\tif (gopt.crisp) {\n\t\tstyles.push(\"image-rendering: pixelated\");\n\t\tstyles.push(\"image-rendering: crisp-edges\");\n\t}\n\n\t// @ts-ignore\n\tapp.canvas.style = styles.join(\";\");\n\tapp.canvas.setAttribute(\"tabindex\", \"0\");\n\n\tconst gl = app.canvas\n\t\t.getContext(\"webgl\", {\n\t\t\tantialias: true,\n\t\t\tdepth: true,\n\t\t\tstencil: true,\n\t\t\talpha: true,\n\t\t\tpreserveDrawingBuffer: true,\n\t\t});\n\n\tapp.isTouch = (\"ontouchstart\" in window) || navigator.maxTouchPoints > 0;\n\n\tapp.canvas.addEventListener(\"mousemove\", (e) => {\n\t\tif (isFullscreen()) {\n\t\t\t// in fullscreen mode browser adds letter box to preserve original canvas aspect ratio, but won't give us the transformed mouse position\n\t\t\t// TODO\n\t\t\tapp.mousePos = vec2(e.offsetX, e.offsetY).scale(1 / app.scale);\n\t\t} else {\n\t\t\tapp.mousePos = vec2(e.offsetX, e.offsetY).scale(1 / app.scale);\n\t\t}\n\t\tapp.mouseDeltaPos = vec2(e.movementX, e.movementY).scale(1 / app.scale);\n\t\tapp.isMouseMoved = true;\n\t});\n\n\t// according to https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\n\tconst mouseButtons = [\n\t\t\"left\",\n\t\t\"middle\",\n\t\t\"right\",\n\t\t\"back\",\n\t\t\"forward\",\n\t];\n\n\tapp.canvas.addEventListener(\"mousedown\", (e) => {\n\t\tconst m = mouseButtons[e.button];\n\t\tif (m) {\n\t\t\tapp.mouseStates[m] = \"pressed\";\n\t\t}\n\t});\n\n\tapp.canvas.addEventListener(\"mouseup\", (e) => {\n\t\tconst m = mouseButtons[e.button];\n\t\tif (m) {\n\t\t\tapp.mouseStates[m] = \"released\";\n\t\t}\n\t});\n\n\tapp.canvas.addEventListener(\"keydown\", (e) => {\n\n\t\tconst k = keyMap[e.key] || e.key.toLowerCase();\n\n\t\tif (preventDefaultKeys.includes(k)) {\n\t\t\te.preventDefault();\n\t\t}\n\n\t\tif (k.length === 1) {\n\t\t\tapp.charInputted.push(e.key);\n\t\t}\n\n\t\tif (k === \"space\") {\n\t\t\tapp.charInputted.push(\" \");\n\t\t}\n\n\t\tif (e.repeat) {\n\t\t\tapp.isKeyPressedRepeat = true;\n\t\t\tapp.keyStates[k] = \"rpressed\";\n\t\t} else {\n\t\t\tapp.isKeyPressed = true;\n\t\t\tapp.keyStates[k] = \"pressed\";\n\t\t}\n\n\t});\n\n\tapp.canvas.addEventListener(\"keyup\", (e: KeyboardEvent) => {\n\t\tconst k = keyMap[e.key] || e.key.toLowerCase();\n\t\tapp.keyStates[k] = \"released\";\n\t});\n\n\tapp.canvas.addEventListener(\"touchstart\", (e) => {\n\t\tif (!gopt.touchToMouse) return;\n\t\t// disable long tap context menu\n\t\te.preventDefault();\n\t\tconst t = e.touches[0];\n\t\tapp.mousePos = vec2(t.clientX, t.clientY).scale(1 / app.scale);\n\t\tapp.mouseStates[\"left\"] = \"pressed\";\n\t});\n\n\tapp.canvas.addEventListener(\"touchmove\", (e) => {\n\t\tif (!gopt.touchToMouse) return;\n\t\t// disable scrolling\n\t\te.preventDefault();\n\t\tconst t = e.touches[0];\n\t\tapp.mousePos = vec2(t.clientX, t.clientY).scale(1 / app.scale);\n\t\tapp.isMouseMoved = true;\n\t});\n\n\tapp.canvas.addEventListener(\"touchend\", (e) => {\n\t\tif (!gopt.touchToMouse) return;\n\t\tapp.mouseStates[\"left\"] = \"released\";\n\t});\n\n\tapp.canvas.addEventListener(\"touchcancel\", (e) => {\n\t\tif (!gopt.touchToMouse) return;\n\t\tapp.mouseStates[\"left\"] = \"released\";\n\t});\n\n\tapp.canvas.addEventListener(\"contextmenu\", function (e) {\n\t\te.preventDefault();\n\t});\n\n\tdocument.addEventListener(\"visibilitychange\", () => {\n\t\tswitch (document.visibilityState) {\n\t\t\tcase \"visible\":\n\t\t\t\t// prevent a surge of dt() when switch back after the tab being hidden for a while\n\t\t\t\tapp.skipTime = true;\n\t\t\t\t// TODO: don't resume if debug.paused\n\t\t\t\tgopt.audioCtx?.resume();\n\t\t\t\tbreak;\n\t\t\tcase \"hidden\":\n\t\t\t\tgopt.audioCtx?.suspend();\n\t\t\t\tbreak;\n\t\t}\n\t});\n\n\t// TODO: not quite working\n//  \twindow.addEventListener(\"resize\", () => {\n//  \t\tif (!(gopt.width && gopt.height && !gopt.stretch)) {\n//  \t\t\tapp.canvas.width = app.canvas.parentElement.offsetWidth;\n//  \t\t\tapp.canvas.height = app.canvas.parentElement.offsetHeight;\n//  \t\t}\n//  \t});\n\n\tfunction mousePos(): Vec2 {\n\t\treturn app.mousePos.clone();\n\t}\n\n\tfunction mouseDeltaPos(): Vec2 {\n\t\treturn app.mouseDeltaPos.clone();\n\t}\n\n\tfunction isMousePressed(m = \"left\"): boolean {\n\t\treturn app.mouseStates[m] === \"pressed\";\n\t}\n\n\tfunction isMouseDown(m = \"left\"): boolean {\n\t\treturn app.mouseStates[m] === \"pressed\" || app.mouseStates[m] === \"down\";\n\t}\n\n\tfunction isMouseReleased(m = \"left\"): boolean {\n\t\treturn app.mouseStates[m] === \"released\";\n\t}\n\n\tfunction isMouseMoved(): boolean {\n\t\treturn app.isMouseMoved;\n\t}\n\n\tfunction isKeyPressed(k?: string): boolean {\n\t\tif (k === undefined) {\n\t\t\treturn app.isKeyPressed;\n\t\t} else {\n\t\t\treturn app.keyStates[k] === \"pressed\";\n\t\t}\n\t}\n\n\tfunction isKeyPressedRepeat(k: string): boolean {\n\t\tif (k === undefined) {\n\t\t\treturn app.isKeyPressedRepeat;\n\t\t} else {\n\t\t\treturn app.keyStates[k] === \"pressed\" || app.keyStates[k] === \"rpressed\";\n\t\t}\n\t}\n\n\tfunction isKeyDown(k: string): boolean {\n\t\treturn app.keyStates[k] === \"pressed\"\n\t\t\t|| app.keyStates[k] === \"rpressed\"\n\t\t\t|| app.keyStates[k] === \"down\";\n\t}\n\n\tfunction isKeyReleased(k: string): boolean {\n\t\treturn app.keyStates[k] === \"released\";\n\t}\n\n\tfunction charInputted(): string[] {\n\t\treturn [...app.charInputted];\n\t}\n\n\t// get delta time between last frame\n\tfunction dt(): number {\n\t\treturn app.dt;\n\t}\n\n\t// get current running time\n\tfunction time(): number {\n\t\treturn app.time;\n\t}\n\n\tfunction fps(): number {\n\t\treturn app.fps;\n\t}\n\n\t// get a base64 png image of canvas\n\tfunction screenshot(): string {\n\t\treturn app.canvas.toDataURL();\n\t}\n\n\t// TODO: custom cursor\n\tfunction cursor(c?: Cursor): Cursor {\n\t\tif (c) {\n\t\t\tapp.canvas.style.cursor = c;\n\t\t}\n\t\treturn app.canvas.style.cursor;\n\t}\n\n\tfunction fullscreen(f: boolean = true) {\n\t\tif (f) {\n\t\t\tenterFullscreen(app.canvas);\n\t\t} else {\n\t\t\texitFullscreen();\n\t\t}\n\t}\n\n\tfunction isFullscreen(): boolean {\n\t\treturn Boolean(getFullscreenElement());\n\t}\n\n\tfunction run(f: () => void) {\n\n\t\tconst frame = (t: number) => {\n\n\t\t\tif (document.visibilityState !== \"visible\") {\n\t\t\t\tapp.loopID = requestAnimationFrame(frame);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst realTime = t / 1000;\n\t\t\tconst realDt = realTime - app.realTime;\n\n\t\t\tapp.realTime = realTime;\n\n\t\t\tif (!app.skipTime) {\n\t\t\t\tapp.dt = realDt;\n\t\t\t\tapp.time += app.dt;\n\t\t\t\tapp.fpsBuf.push(1 / app.dt);\n\t\t\t\tapp.fpsTimer += app.dt;\n\t\t\t\tif (app.fpsTimer >= 1) {\n\t\t\t\t\tapp.fpsTimer = 0;\n\t\t\t\t\tapp.fps = Math.round(app.fpsBuf.reduce((a, b) => a + b) / app.fpsBuf.length);\n\t\t\t\t\tapp.fpsBuf = [];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tapp.skipTime = false;\n\n\t\t\tf();\n\n\t\t\tfor (const k in app.keyStates) {\n\t\t\t\tapp.keyStates[k] = processBtnState(app.keyStates[k]);\n\t\t\t}\n\n\t\t\tfor (const m in app.mouseStates) {\n\t\t\t\tapp.mouseStates[m] = processBtnState(app.mouseStates[m]);\n\t\t\t}\n\n\t\t\tapp.charInputted = [];\n\t\t\tapp.isMouseMoved = false;\n\t\t\tapp.isKeyPressed = false;\n\t\t\tapp.isKeyPressedRepeat = false;\n\t\t\tapp.loopID = requestAnimationFrame(frame);\n\n\t\t};\n\n\t\tapp.stopped = false;\n\t\tapp.loopID = requestAnimationFrame(frame);\n\n\t}\n\n\tfunction quit() {\n\t\tcancelAnimationFrame(app.loopID);\n\t\tapp.stopped = true;\n\t}\n\n\treturn {\n\t\tgl,\n\t\tmousePos,\n\t\tmouseDeltaPos,\n\t\tisKeyDown,\n\t\tisKeyPressed,\n\t\tisKeyPressedRepeat,\n\t\tisKeyReleased,\n\t\tisMouseDown,\n\t\tisMousePressed,\n\t\tisMouseReleased,\n\t\tisMouseMoved,\n\t\tcharInputted,\n\t\tcursor,\n\t\tdt,\n\t\ttime,\n\t\tfps,\n\t\tscreenshot,\n\t\trun,\n\t\tquit,\n\t\tisFocused: () => document.activeElement === app.canvas,\n\t\tfocus: () => app.canvas.focus(),\n\t\tcanvas: app.canvas,\n\t\tisTouch: app.isTouch,\n\t\tscale: app.scale,\n\t\tfullscreen,\n\t\tisFullscreen,\n\t};\n\n}\n\nexport {\n\tApp,\n\tappInit,\n};\n","// TODO: onend event\n\nimport {\n\tclamp,\n} from \"./math\";\n\nimport {\n\tSoundData,\n\tAudioPlay,\n\tAudioPlayOpt,\n} from \"./types\";\n\ntype Audio = {\n\tctx: AudioContext,\n\tmasterNode: GainNode,\n\tvolume(v: number): number,\n\tplay(snd: SoundData, opt?: AudioPlayOpt): AudioPlay,\n\tburp(opt?: AudioPlayOpt): AudioPlay,\n};\n\nconst MIN_GAIN = 0;\nconst MAX_GAIN = 3;\nconst MIN_SPEED = 0;\nconst MAX_SPEED = 3;\nconst MIN_DETUNE = -1200;\nconst MAX_DETUNE = 1200;\n\n// @ts-ignore\nimport burpBytes from \"./burp.mp3\";\n\nfunction audioInit(): Audio {\n\t// TODO handle audio unavailable\n\tconst ctx = new (window.AudioContext || (window as any).webkitAudioContext)() as AudioContext\n\tconst masterNode = ctx.createGain();\n\tmasterNode.connect(ctx.destination);\n\n\n\tconst burpSnd = {\n\t\tbuf: new AudioBuffer({\n\t\t\tlength: 1,\n\t\t\tnumberOfChannels: 1,\n\t\t\tsampleRate: 44100\n\t\t}),\n\t};\n\n\tctx.decodeAudioData(burpBytes.buffer.slice(0), (buf) => {\n\t\tburpSnd.buf = buf;\n\t}, () => {\n\t\tthrow new Error(\"failed to make burp\")\n\t});\n\n\t// get / set master volume\n\tfunction volume(v?: number): number {\n\t\tif (v !== undefined) {\n\t\t\tmasterNode.gain.value = clamp(v, MIN_GAIN, MAX_GAIN);\n\t\t}\n\t\treturn masterNode.gain.value;\n\t}\n\n\t// plays a sound, returns a control handle\n\tfunction play(\n\t\tsnd: SoundData,\n\t\topt: AudioPlayOpt = {\n\t\t\tloop: false,\n\t\t\tvolume: 1,\n\t\t\tspeed: 1,\n\t\t\tdetune: 0,\n\t\t\tseek: 0,\n\t\t},\n\t): AudioPlay {\n\n\t\tlet stopped = false;\n\t\tlet srcNode = ctx.createBufferSource();\n\n\t\tsrcNode.buffer = snd.buf;\n\t\tsrcNode.loop = opt.loop ? true : false;\n\n\t\tconst gainNode = ctx.createGain();\n\n\t\tsrcNode.connect(gainNode);\n\t\tgainNode.connect(masterNode);\n\n\t\tconst pos = opt.seek ?? 0;\n\n\t\tsrcNode.start(0, pos);\n\n\t\tlet startTime = ctx.currentTime - pos;\n\t\tlet stopTime: number | null = null;\n\n\t\tconst handle = {\n\n\t\t\tstop() {\n\t\t\t\tif (stopped) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.pause();\n\t\t\t\tstartTime = ctx.currentTime;\n\t\t\t},\n\n\t\t\tplay(seek?: number) {\n\n\t\t\t\tif (!stopped) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst oldNode = srcNode;\n\n\t\t\t\tsrcNode = ctx.createBufferSource();\n\t\t\t\tsrcNode.buffer = oldNode.buffer;\n\t\t\t\tsrcNode.loop = oldNode.loop;\n\t\t\t\tsrcNode.playbackRate.value = oldNode.playbackRate.value;\n\n\t\t\t\tif (srcNode.detune) {\n\t\t\t\t\tsrcNode.detune.value = oldNode.detune.value;\n\t\t\t\t}\n\n\t\t\t\tsrcNode.connect(gainNode);\n\n\t\t\t\tconst pos = seek ?? this.time();\n\n\t\t\t\tsrcNode.start(0, pos);\n\t\t\t\tstartTime = ctx.currentTime - pos;\n\t\t\t\tstopped = false;\n\t\t\t\tstopTime = null;\n\n\t\t\t},\n\n\t\t\tpause() {\n\t\t\t\tif (stopped) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tsrcNode.stop();\n\t\t\t\tstopped = true;\n\t\t\t\tstopTime = ctx.currentTime;\n\t\t\t},\n\n\t\t\tisPaused(): boolean {\n\t\t\t\treturn stopped;\n\t\t\t},\n\n\t\t\tpaused(): boolean {\n\t\t\t\treturn this.isPaused();\n\t\t\t},\n\n\t\t\tisStopped(): boolean {\n\t\t\t\treturn stopped;\n\t\t\t},\n\n\t\t\tstopped(): boolean {\n\t\t\t\treturn this.isStopped();\n\t\t\t},\n\n\t\t\t// TODO: affect time()\n\t\t\tspeed(val?: number): number {\n\t\t\t\tif (val !== undefined) {\n\t\t\t\t\tsrcNode.playbackRate.value = clamp(val, MIN_SPEED, MAX_SPEED);\n\t\t\t\t}\n\t\t\t\treturn srcNode.playbackRate.value;\n\t\t\t},\n\n\t\t\tdetune(val?: number): number {\n\t\t\t\tif (!srcNode.detune) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tif (val !== undefined) {\n\t\t\t\t\tsrcNode.detune.value = clamp(val, MIN_DETUNE, MAX_DETUNE);\n\t\t\t\t}\n\t\t\t\treturn srcNode.detune.value;\n\t\t\t},\n\n\t\t\tvolume(val?: number): number {\n\t\t\t\tif (val !== undefined) {\n\t\t\t\t\tgainNode.gain.value = clamp(val, MIN_GAIN, MAX_GAIN);\n\t\t\t\t}\n\t\t\t\treturn gainNode.gain.value;\n\t\t\t},\n\n\t\t\tloop() {\n\t\t\t\tsrcNode.loop = true;\n\t\t\t},\n\n\t\t\tunloop() {\n\t\t\t\tsrcNode.loop = false;\n\t\t\t},\n\n\t\t\tduration(): number {\n\t\t\t\treturn snd.buf.duration;\n\t\t\t},\n\n\t\t\ttime(): number {\n\t\t\t\tif (stopped) {\n\t\t\t\t\treturn stopTime - startTime;\n\t\t\t\t} else {\n\t\t\t\t\treturn ctx.currentTime - startTime;\n\t\t\t\t}\n\t\t\t},\n\n\t\t};\n\n\t\thandle.speed(opt.speed);\n\t\thandle.detune(opt.detune);\n\t\thandle.volume(opt.volume);\n\n\t\treturn handle;\n\n\t}\n\n\tfunction burp(opt?: AudioPlayOpt): AudioPlay {\n\t\treturn play(burpSnd, opt);\n\t}\n\n\treturn {\n\t\tctx,\n\t\tmasterNode,\n\t\tvolume,\n\t\tplay,\n\t\tburp,\n\t};\n\n}\n\nexport {\n\tAudio,\n\taudioInit,\n};\n","import {\n\tquad,\n} from \"./math\";\n\nimport {\n\tAudio,\n} from \"./audio\";\n\nimport {\n\tGfx,\n} from \"./gfx\";\n\nimport {\n\tSpriteData,\n\tSoundData,\n\tFontData,\n\tShaderData,\n\tSpriteLoadSrc,\n\tSpriteLoadOpt,\n\tSpriteAtlasData,\n\tFontLoadOpt,\n\tQuad,\n\tGfxTexData,\n} from \"./types\";\n\n// @ts-ignore\nimport apl386Src from \"./apl386.png\";\n// @ts-ignore\nimport apl386oSrc from \"./apl386o.png\";\n// @ts-ignore\nimport sinkSrc from \"./sink.png\";\n// @ts-ignore\nimport sinkoSrc from \"./sinko.png\";\n// @ts-ignore\nimport beanSrc from \"./bean.png\";\n\ntype AssetsOpt = {\n\terrHandler?: (err: string) => void,\n};\n\ntype LoaderID = number;\n\ntype AssetsCtx = {\n\tlastLoaderID: LoaderID,\n\tloadRoot: string,\n\t// TODO: just use a counter?\n\tloaders: Record<number, boolean>,\n\t// TODO: allow Promise<SoundData>?\n\tsprites: Record<string, SpriteData>,\n\tsounds: Record<string, SoundData>,\n\tfonts: Record<string, FontData>,\n\tshaders: Record<string, ShaderData>,\n};\n\ntype Assets = {\n\tloadRoot(path?: string): string,\n\tloadSprite(\n\t\tname: string | null,\n\t\tsrc: SpriteLoadSrc,\n\t\topt?: SpriteLoadOpt,\n\t): Promise<SpriteData>,\n\tloadSpriteAtlas(\n\t\tsrc: SpriteLoadSrc,\n\t\tdata: SpriteAtlasData,\n\t): Promise<Record<string, SpriteData>>,\n\tloadSpriteAtlas(\n\t\tsrc: SpriteLoadSrc,\n\t\turl: string,\n\t): Promise<Record<string, SpriteData>>,\n\tloadAseprite(\n\t\tname: string | null,\n\t\timgSrc: SpriteLoadSrc,\n\t\tjsonSrc: string\n\t): Promise<SpriteData>,\n\tloadPedit(name: string | null, src: string): Promise<SpriteData>,\n\tloadBean(name?: string): Promise<SpriteData>,\n\tloadSound(\n\t\tname: string | null,\n\t\tsrc: string,\n\t): Promise<SoundData>,\n\tloadFont(\n\t\tname: string | null,\n\t\tsrc: string,\n\t\tgw: number,\n\t\tgh: number,\n\t\topt?: FontLoadOpt,\n\t): Promise<FontData>,\n\tloadShader(\n\t\tname: string | null,\n\t\tvert?: string,\n\t\tfrag?: string,\n\t\tisUrl?: boolean,\n\t): Promise<ShaderData>,\n\tloadProgress(): number,\n\tload<T>(prom: Promise<T>),\n\tsprites: Record<string, SpriteData>,\n\tfonts: Record<string, FontData>,\n\tsounds: Record<string, SoundData>,\n\tshaders: Record<string, ShaderData>,\n};\n\nconst ASCII_CHARS = \" !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\";\nconst CP437_CHARS = \" ☺☻♥♦♣♠•◘○◙♂♀♪♫☼►◄↕‼¶§▬↨↑↓→←∟↔▲▼ !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~⌂ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■\";\n\nfunction loadImg(src: string): Promise<HTMLImageElement> {\n\tconst img = new Image();\n\timg.src = src;\n\timg.crossOrigin = \"anonymous\";\n\treturn new Promise<HTMLImageElement>((resolve, reject) => {\n\t\timg.onload = () => {\n\t\t\tresolve(img);\n\t\t};\n\t\timg.onerror = () => {\n\t\t\treject(`failed to load ${src}`);\n\t\t};\n\t});\n}\n\nfunction isDataUrl(src: string): boolean {\n\treturn src.startsWith(\"data:\");\n}\n\nfunction assetsInit(gfx: Gfx, audio: Audio, gopt: AssetsOpt = {}): Assets {\n\n\tconst assets: AssetsCtx = {\n\t\tlastLoaderID: 0,\n\t\tloadRoot: \"\",\n\t\tloaders: {},\n\t\tsprites: {},\n\t\tsounds: {},\n\t\tfonts: {},\n\t\tshaders: {},\n\t};\n\n\tfunction load<T>(prom: Promise<T>): Promise<T> {\n\t\tconst id = assets.lastLoaderID;\n\t\tassets.loaders[id] = false;\n\t\tassets.lastLoaderID++;\n\t\treturn prom\n\t\t\t.catch(gopt.errHandler ?? console.error)\n\t\t\t.finally(() => assets.loaders[id] = true) as Promise<T>;\n\t}\n\n\t// get current load progress\n\tfunction loadProgress(): number {\n\n\t\tlet total = 0;\n\t\tlet loaded = 0;\n\n\t\tfor (const id in assets.loaders) {\n\t\t\ttotal += 1;\n\t\t\tif (assets.loaders[id]) {\n\t\t\t\tloaded += 1;\n\t\t\t}\n\t\t}\n\n\t\treturn loaded / total;\n\n\t}\n\n\t// global load path prefix\n\tfunction loadRoot(path?: string): string {\n\t\tif (path !== undefined) {\n\t\t\tassets.loadRoot = path;\n\t\t}\n\t\treturn assets.loadRoot;\n\t}\n\n\t// TODO: support SpriteLoadSrc\n\tfunction loadFont(\n\t\tname: string | null,\n\t\tsrc: string,\n\t\tgw: number,\n\t\tgh: number,\n\t\topt: FontLoadOpt = {},\n\t): Promise<FontData> {\n\t\treturn load(new Promise<FontData>((resolve, reject) => {\n\t\t\tconst path = isDataUrl(src) ? src : assets.loadRoot + src;\n\t\t\tloadImg(path)\n\t\t\t\t.then((img) => {\n\t\t\t\t\tconst font = gfx.makeFont(gfx.makeTex(img, opt), gw, gh, opt.chars ?? ASCII_CHARS);\n\t\t\t\t\tif (name) {\n\t\t\t\t\t\tassets.fonts[name] = font;\n\t\t\t\t\t}\n\t\t\t\t\tresolve(font);\n\t\t\t\t})\n\t\t\t\t.catch(reject);\n\t\t}));\n\t}\n\n\tfunction getSprite(name: string): SpriteData | null {\n\t\treturn assets.sprites[name] ?? null;\n\t}\n\n\tfunction getSound(name: string): SoundData | null {\n\t\treturn assets.sounds[name] ?? null;\n\t}\n\n\tfunction getFont(name: string): FontData | null {\n\t\treturn assets.fonts[name] ?? null;\n\t}\n\n\tfunction getShader(name: string): ShaderData | null {\n\t\treturn assets.shaders[name] ?? null;\n\t}\n\n\tfunction slice(x = 1, y = 1, dx = 0, dy = 0, w = 1, h = 1): Quad[] {\n\t\tconst frames = [];\n\t\tconst qw = w / x;\n\t\tconst qh = h / y;\n\t\tfor (let j = 0; j < y; j++) {\n\t\t\tfor (let i = 0; i < x; i++) {\n\t\t\t\tframes.push(quad(\n\t\t\t\t\tdx + i * qw,\n\t\t\t\t\tdy + j * qh,\n\t\t\t\t\tqw,\n\t\t\t\t\tqh,\n\t\t\t\t));\n\t\t\t}\n\t\t}\n\t\treturn frames;\n\t}\n\n\tfunction loadSpriteAtlas(\n\t\tsrc: SpriteLoadSrc,\n\t\tdata: SpriteAtlasData | string\n\t): Promise<Record<string, SpriteData>> {\n\t\tif (typeof data === \"string\") {\n\t\t\t// TODO: this adds a new loader asyncly\n\t\t\treturn load(fetch(loadRoot() + data)\n\t\t\t\t.then((res) => res.json())\n\t\t\t\t.then((data2) => loadSpriteAtlas(src, data2)));\n\t\t}\n\t\treturn load(loadSprite(null, src).then((atlas) => {\n\t\t\tconst map = {};\n\t\t\tconst w = atlas.tex.width;\n\t\t\tconst h = atlas.tex.height;\n\t\t\tfor (const name in data) {\n\t\t\t\tconst info = data[name];\n\t\t\t\tconst spr = {\n\t\t\t\t\ttex: atlas.tex,\n\t\t\t\t\tframes: slice(info.sliceX, info.sliceY, info.x / w, info.y / h, info.width / w, info.height / h),\n\t\t\t\t\tanims: info.anims,\n\t\t\t\t}\n\t\t\t\tassets.sprites[name] = spr;\n\t\t\t\tmap[name] = spr;\n\t\t\t}\n\t\t\treturn map;\n\t\t}));\n\t}\n\n\t// load a sprite to asset manager\n\tfunction loadSprite(\n\t\tname: string | null,\n\t\tsrc: SpriteLoadSrc,\n\t\topt: SpriteLoadOpt = {\n\t\t\tsliceX: 1,\n\t\t\tsliceY: 1,\n\t\t\tanims: {},\n\t\t},\n\t): Promise<SpriteData> {\n\n\t\t// synchronously load sprite from local pixel data\n\t\tfunction loadRawSprite(\n\t\t\tname: string | null,\n\t\t\tsrc: GfxTexData,\n\t\t\topt: SpriteLoadOpt = {\n\t\t\t\tsliceX: 1,\n\t\t\t\tsliceY: 1,\n\t\t\t\tanims: {},\n\t\t\t},\n\t\t) {\n\n\t\t\tconst tex = gfx.makeTex(src, opt);\n\t\t\tconst frames = slice(opt.sliceX || 1, opt.sliceY || 1);\n\n\t\t\tconst sprite = {\n\t\t\t\ttex: tex,\n\t\t\t\tframes: frames,\n\t\t\t\tanims: opt.anims || {},\n\t\t\t};\n\n\t\t\tif (name) {\n\t\t\t\tassets.sprites[name] = sprite;\n\t\t\t}\n\n\t\t\treturn sprite;\n\n\t\t}\n\n\t\treturn load(new Promise<SpriteData>((resolve, reject) => {\n\n\t\t\tif (!src) {\n\t\t\t\treturn reject(`expected sprite src for \"${name}\"`);\n\t\t\t}\n\n\t\t\t// from url\n\t\t\tif (typeof(src) === \"string\") {\n\t\t\t\tconst path = isDataUrl(src) ? src : assets.loadRoot + src;\n\t\t\t\tloadImg(path)\n\t\t\t\t\t.then((img) => resolve(loadRawSprite(name, img, opt)))\n\t\t\t\t\t.catch(reject);\n\t\t\t} else {\n\t\t\t\tresolve(loadRawSprite(name, src, opt));\n\t\t\t}\n\n\t\t}));\n\n\t}\n\n\t// TODO: accept raw json\n\tfunction loadPedit(name: string, src: string): Promise<SpriteData> {\n\n\t\treturn load(new Promise<SpriteData>((resolve, reject) => {\n\n\t\t\tfetch(loadRoot() + src)\n\t\t\t\t.then((res) => res.json())\n\t\t\t\t.then(async (data) => {\n\n\t\t\t\t\tconst images = await Promise.all(data.frames.map(loadImg));\n\t\t\t\t\tconst canvas = document.createElement(\"canvas\");\n\t\t\t\t\tcanvas.width = data.width;\n\t\t\t\t\tcanvas.height = data.height * data.frames.length;\n\n\t\t\t\t\tconst ctx = canvas.getContext(\"2d\");\n\n\t\t\t\t\timages.forEach((img: HTMLImageElement, i) => {\n\t\t\t\t\t\tctx.drawImage(img, 0, i * data.height);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn loadSprite(name, canvas, {\n\t\t\t\t\t\tsliceY: data.frames.length,\n\t\t\t\t\t\tanims: data.anims,\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.then(resolve)\n\t\t\t\t.catch(reject)\n\t\t\t\t;\n\n\t\t}));\n\n\t}\n\n\t// TODO: accept raw json\n\tfunction loadAseprite(\n\t\tname: string | null,\n\t\timgSrc: SpriteLoadSrc,\n\t\tjsonSrc: string\n\t): Promise<SpriteData> {\n\n\t\treturn load(new Promise<SpriteData>((resolve, reject) => {\n\n\t\t\tconst jsonPath = loadRoot() + jsonSrc;\n\n\t\t\tloadSprite(name, imgSrc)\n\t\t\t\t.then((sprite: SpriteData) => {\n\t\t\t\t\tfetch(jsonPath)\n\t\t\t\t\t\t.then((res) => res.json())\n\t\t\t\t\t\t.then((data) => {\n\t\t\t\t\t\t\tconst size = data.meta.size;\n\t\t\t\t\t\t\tsprite.frames = data.frames.map((f: any) => {\n\t\t\t\t\t\t\t\treturn quad(\n\t\t\t\t\t\t\t\t\tf.frame.x / size.w,\n\t\t\t\t\t\t\t\t\tf.frame.y / size.h,\n\t\t\t\t\t\t\t\t\tf.frame.w / size.w,\n\t\t\t\t\t\t\t\t\tf.frame.h / size.h,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tfor (const anim of data.meta.frameTags) {\n\t\t\t\t\t\t\t\tif (anim.from === anim.to) {\n\t\t\t\t\t\t\t\t\tsprite.anims[anim.name] = anim.from\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsprite.anims[anim.name] = {\n\t\t\t\t\t\t\t\t\t\tfrom: anim.from,\n\t\t\t\t\t\t\t\t\t\tto: anim.to,\n\t\t\t\t\t\t\t\t\t\t// TODO: let users define these\n\t\t\t\t\t\t\t\t\t\tspeed: 10,\n\t\t\t\t\t\t\t\t\t\tloop: true,\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tresolve(sprite);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(reject)\n\t\t\t\t\t\t;\n\t\t\t\t})\n\t\t\t\t.catch(reject);\n\n\t\t}));\n\n\t}\n\n\tfunction loadShader(\n\t\tname: string | null,\n\t\tvert?: string,\n\t\tfrag?: string,\n\t\tisUrl: boolean = false,\n\t): Promise<ShaderData> {\n\n\t\tfunction loadRawShader(\n\t\t\tname: string | null,\n\t\t\tvert: string | null,\n\t\t\tfrag: string | null,\n\t\t): ShaderData {\n\t\t\tconst shader = gfx.makeShader(vert, frag);\n\t\t\tif (name) {\n\t\t\t\tassets.shaders[name] = shader;\n\t\t\t}\n\t\t\treturn shader;\n\t\t}\n\n\t\treturn load(new Promise<ShaderData>((resolve, reject) => {\n\n\t\t\tif (!vert && !frag) {\n\t\t\t\treturn reject(\"no shader\");\n\t\t\t}\n\n\t\t\tfunction resolveUrl(url?: string) {\n\t\t\t\treturn url ?\n\t\t\t\t\tfetch(assets.loadRoot + url)\n\t\t\t\t\t\t.then((r) => {\n\t\t\t\t\t\t\tif (r.ok) {\n\t\t\t\t\t\t\t\treturn r.text();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrow new Error(`failed to load ${url}`)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(reject)\n\t\t\t\t\t: new Promise((r) => r(null));\n\t\t\t}\n\n\t\t\tif (isUrl) {\n\t\t\t\tPromise.all([resolveUrl(vert), resolveUrl(frag)])\n\t\t\t\t\t.then(([vcode, fcode]: [string | null, string | null]) => {\n\t\t\t\t\t\tresolve(loadRawShader(name, vcode, fcode));\n\t\t\t\t\t})\n\t\t\t\t\t.catch(reject);\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tresolve(loadRawShader(name, vert, frag));\n\t\t\t\t} catch (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}));\n\n\t}\n\n\t// TODO: accept dataurl\n\t// load a sound to asset manager\n\tfunction loadSound(\n\t\tname: string | null,\n\t\tsrc: string,\n\t): Promise<SoundData> {\n\n\t\tconst url = assets.loadRoot + src;\n\n\t\treturn load(new Promise<SoundData>((resolve, reject) => {\n\n\t\t\tif (!src) {\n\t\t\t\treturn reject(`expected sound src for \"${name}\"`);\n\t\t\t}\n\n\t\t\t// from url\n\t\t\tif (typeof(src) === \"string\") {\n\t\t\t\tfetch(url)\n\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\tif (res.ok) {\n\t\t\t\t\t\t\treturn res.arrayBuffer();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error(`failed to load ${url}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.then((data) => {\n\t\t\t\t\t\treturn new Promise((resolve2, reject2) => {\n\t\t\t\t\t\t\taudio.ctx.decodeAudioData(data, resolve2, reject2);\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.then((buf: AudioBuffer) => {\n\t\t\t\t\t\tconst snd = {\n\t\t\t\t\t\t\tbuf: buf,\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (name) {\n\t\t\t\t\t\t\tassets.sounds[name] = snd;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresolve(snd);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(reject);\n\t\t\t}\n\n\t\t}));\n\n\t}\n\n\tfunction loadBean(name: string = \"bean\"): Promise<SpriteData> {\n\t\treturn loadSprite(name, beanSrc);\n\t}\n\n\tloadFont(\n\t\t\"apl386\",\n\t\tapl386Src,\n\t\t45,\n\t\t74,\n\t);\n\n\tloadFont(\n\t\t\"apl386o\",\n\t\tapl386oSrc,\n\t\t45,\n\t\t74,\n\t);\n\n\tloadFont(\n\t\t\"sink\",\n\t\tsinkSrc,\n\t\t6,\n\t\t8,\n\t\t{\n\t\t\tchars: `█☺☻♥♦♣♠●○▪□■◘♪♫≡►◄⌂ÞÀß×¥↑↓→←◌●▼▲ !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_\\`abcdefghijklmnopqrstuvwxyz{|}~Χ░▒▓ḀḁḂ│┬┤┌┐ḃḄ┼ḅḆḇḈḉḊḋḌ─├┴└┘ḍḎ⁞ḏḐḑḒḓḔḕḖḗḘ▄ḙḚḛḜ…ḝḞḟḠḡḢḣḤḥḦ▌▐ḧḨḩḪḫḬḭḮḯḰḱḲḳḴḵḶḷḸḹḺḻḼḽḾḿṀṁṂṃṄṅṆṇṈṉṊṋṌṍṎṏṐṑṒṓṔṕṖṗṘṙṚṛṜṝṞṟṠṡṢṣṤṥṦṧṨṩṪṫṬṭṮṯṰṱṲṳṴṵṶṷṸṹṺṻṼ`,\n\t\t}\n\t);\n\n\tloadFont(\n\t\t\"sinko\",\n\t\tsinkoSrc,\n\t\t8,\n\t\t10,\n\t);\n\n\treturn {\n\t\tloadRoot,\n\t\tloadSprite,\n\t\tloadSpriteAtlas,\n\t\tloadPedit,\n\t\tloadAseprite,\n\t\tloadBean,\n\t\tloadSound,\n\t\tloadFont,\n\t\tloadShader,\n\t\tloadProgress,\n\t\tload,\n\t\tsprites: assets.sprites,\n\t\tfonts: assets.fonts,\n\t\tsounds: assets.sounds,\n\t\tshaders: assets.shaders,\n\t};\n\n}\n\nexport {\n\tAssetsOpt,\n\tAssets,\n\tassetsInit,\n\tASCII_CHARS,\n\tCP437_CHARS,\n};\n","import {\n\tvec2,\n\trgb,\n\tmap,\n} from \"./math\";\n\nimport {\n\tAssets,\n} from \"./assets\";\n\nimport {\n\tGfx,\n} from \"./gfx\";\n\ntype Log = {\n\ttype: \"info\" | \"error\",\n\tmsg: string,\n};\n\ntype LoggerOpt = {\n\tmax?: number,\n\ttime?: () => number,\n};\n\ntype Logger = {\n\tdraw(),\n\tinfo(msg: string),\n\terror(msg: string),\n\tclear(),\n};\n\nconst LOG_SIZE = 16;\n\nfunction loggerInit(gfx: Gfx, assets: Assets, opt: LoggerOpt = {}): Logger {\n\n\tlet logs: Log[] = [];\n\tconst max = opt.max ?? 1;\n\n\t// TODO: draw rects first to reduce draw calls\n\tfunction draw() {\n\n\t\tif (logs.length > max) {\n\t\t\tlogs = logs.slice(0, max);\n\t\t}\n\n\t\tconst pos = vec2(0, gfx.height());\n\n\t\tlogs.forEach((log, i) => {\n\n\t\t\tconst txtAlpha = map(i, 0, max, 1, 0.5);\n\t\t\tconst bgAlpha = map(i, 0, max, 0.8, 0.2);\n\n\t\t\tconst col = (() => {\n\t\t\t\tswitch (log.type) {\n\t\t\t\t\tcase \"info\": return rgb(255, 255, 255);\n\t\t\t\t\tcase \"error\": return rgb(255, 0, 127);\n\t\t\t\t}\n\t\t\t})();\n\n\t\t\tconst ftext = gfx.fmtText({\n\t\t\t\ttext: log.msg,\n\t\t\t\tfont: assets.fonts[\"sink\"],\n\t\t\t\tpos: pos,\n\t\t\t\torigin: \"botleft\",\n\t\t\t\tcolor: col,\n\t\t\t\tsize: LOG_SIZE / gfx.scale(),\n\t\t\t\twidth: gfx.width(),\n\t\t\t\topacity: txtAlpha,\n\t\t\t});\n\n\t\t\tgfx.drawRect({\n\t\t\t\tpos: pos,\n\t\t\t\twidth: ftext.width,\n\t\t\t\theight: ftext.height,\n\t\t\t\torigin: \"botleft\",\n\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\topacity: bgAlpha,\n\t\t\t});\n\n\t\t\tgfx.drawFmtText(ftext);\n\t\t\tpos.y -= ftext.height;\n\n\t\t});\n\n\t}\n\n\tfunction error(msg: string) {\n\t\tlogs.unshift({\n\t\t\ttype: \"error\",\n\t\t\tmsg: msg,\n\t\t});\n\t}\n\n\tfunction info(msg: string) {\n\t\tlogs.unshift({\n\t\t\ttype: \"info\",\n\t\t\tmsg: msg,\n\t\t});\n\t}\n\n\tfunction clear() {\n\t\tlogs = [];\n\t}\n\n\treturn {\n\t\tinfo,\n\t\terror,\n\t\tdraw,\n\t\tclear,\n\t};\n\n}\n\nexport {\n\tloggerInit,\n};\n","// explosion\n\nimport {\n\tCompList,\n\tVec2,\n\tComp,\n\tKaboomCtx,\n} from \"../types\";\n\n// @ts-ignore\nimport kaSrc from \"./ka.png\";\n// @ts-ignore\nimport boomSrc from \"./boom.png\";\n\ninterface BoomOpt {\n\t/**\n\t * Animation speed.\n\t */\n\tspeed?: number,\n\t/**\n\t * Scale.\n\t */\n\tscale?: number,\n\t/**\n\t * Additional ka components.\n\t */\n\tkaComps?: () => CompList<any>,\n\t/**\n\t * Additional boom components.\n\t */\n\tboomComps?: () => CompList<any>,\n}\n\ninterface Kaboom {\n\t/**\n\t * Remove kaboom.\n\t */\n\tdestroy(): void,\n}\n\ninterface ExplodeComp extends Comp {\n}\n\ninterface KaboomPlug {\n\taddKaboom(pos: Vec2, opt?: BoomOpt): Kaboom,\n}\n\nexport default (k: KaboomCtx) => {\n\n\tfunction explode(speed: number = 2, size: number = 1): ExplodeComp {\n\t\tlet time = 0;\n\t\treturn {\n\t\t\tid: \"explode\",\n\t\t\trequire: [ \"scale\", ],\n\t\t\tupdate() {\n\t\t\t\tconst s = Math.sin(time * speed) * size;\n\t\t\t\tif (s < 0) {\n\t\t\t\t\tk.destroy(this);\n\t\t\t\t}\n\t\t\t\tthis.scale = k.vec2(s);\n\t\t\t\ttime += k.dt();\n\t\t\t},\n\t\t};\n\t}\n\n\tlet kaSprite = null;\n\tlet boomSprite = null;\n\n\tk.loadSprite(null, kaSrc).then((spr) => kaSprite = spr);\n\tk.loadSprite(null, boomSrc).then((spr) => boomSprite = spr);\n\n\tfunction addKaboom(pos: Vec2, opt: BoomOpt = {}): Kaboom {\n\n\t\tconst speed = (opt.speed || 1) * 5;\n\t\tconst scale = opt.scale || 1;\n\n\t\tconst boom = k.add([\n\t\t\tk.pos(pos),\n\t\t\tk.sprite(boomSprite),\n\t\t\tk.scale(0),\n\t\t\tk.stay(),\n\t\t\tk.origin(\"center\"),\n\t\t\texplode(speed, scale),\n\t\t\t...(opt.boomComps ?? (() => []))(),\n\t\t]);\n\n\t\tconst ka = k.add([\n\t\t\tk.pos(pos),\n\t\t\tk.sprite(kaSprite),\n\t\t\tk.scale(0),\n\t\t\tk.stay(),\n\t\t\tk.origin(\"center\"),\n\t\t\tk.timer(0.4 / speed, () => ka.use(explode(speed, scale))),\n\t\t\t...(opt.kaComps ?? (() => []))(),\n\t\t]);\n\n\t\treturn {\n\t\t\tdestroy() {\n\t\t\t\tk.destroy(ka);\n\t\t\t\tk.destroy(boom);\n\t\t\t},\n\t\t};\n\n\t}\n\n\treturn {\n\t\taddKaboom,\n\t};\n\n};\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n"]}